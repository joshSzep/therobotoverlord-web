f175858bcdd71704e2cc66abdd98fb12
"use strict";

/* istanbul ignore next */
function cov_bnicqv9j6() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/Button.tsx";
  var hash = "83b866d991b8d52f894fb206fd092ab997ce6cd5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/Button.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 22
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 15
        },
        end: {
          line: 12,
          column: 31
        }
      },
      "5": {
        start: {
          line: 13,
          column: 15
        },
        end: {
          line: 13,
          column: 41
        }
      },
      "6": {
        start: {
          line: 14,
          column: 29
        },
        end: {
          line: 33,
          column: 2
        }
      },
      "7": {
        start: {
          line: 15,
          column: 24
        },
        end: {
          line: 15,
          column: 269
        }
      },
      "8": {
        start: {
          line: 16,
          column: 21
        },
        end: {
          line: 21,
          column: 5
        }
      },
      "9": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "10": {
        start: {
          line: 27,
          column: 22
        },
        end: {
          line: 27,
          column: 44
        }
      },
      "11": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 7
        }
      },
      "12": {
        start: {
          line: 34,
          column: 0
        },
        end: {
          line: 34,
          column: 30
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 14,
            column: 52
          },
          end: {
            line: 14,
            column: 53
          }
        },
        loc: {
          start: {
            line: 14,
            column: 132
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 14
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 66
          },
          end: {
            line: 14,
            column: 85
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 76
          },
          end: {
            line: 14,
            column: 85
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 87
          },
          end: {
            line: 14,
            column: 98
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 94
          },
          end: {
            line: 14,
            column: 98
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 14,
            column: 100
          },
          end: {
            line: 14,
            column: 112
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 107
          },
          end: {
            line: 14,
            column: 112
          }
        }],
        line: 14
      },
      "3": {
        loc: {
          start: {
            line: 27,
            column: 22
          },
          end: {
            line: 27,
            column: 44
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 27,
            column: 29
          },
          end: {
            line: 27,
            column: 39
          }
        }, {
          start: {
            line: 27,
            column: 42
          },
          end: {
            line: 27,
            column: 44
          }
        }],
        line: 27
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/Button.tsx"],
      sourcesContent: ["import { ButtonHTMLAttributes, forwardRef } from 'react';\nimport { cn } from '@/lib/utils';\n\nexport interface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'primary' | 'secondary' | 'danger' | 'ghost';\n  size?: 'sm' | 'md' | 'lg';\n  glow?: boolean;\n  'aria-label'?: string;\n  'aria-describedby'?: string;\n  'aria-pressed'?: boolean;\n  'aria-expanded'?: boolean;\n  'aria-controls'?: string;\n}\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = 'primary', size = 'md', glow = false, ...props }, ref) => {\n    const baseClasses = 'font-bold transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-overlord-red focus:ring-offset-2 focus:ring-offset-background disabled:opacity-50 disabled:cursor-not-allowed rounded-md transform active:scale-95 hover:scale-105';\n    \n    const variants = {\n      primary: 'bg-overlord-red hover:bg-authority-red text-light-text',\n      secondary: 'border border-muted-light hover:bg-surface-dark text-muted-light hover:text-light-text',\n      danger: 'bg-rejected-red hover:bg-red-600 text-light-text',\n      ghost: 'hover:bg-surface-dark text-muted-light hover:text-light-text'\n    };\n\n    const sizes = {\n      sm: 'px-4 py-2 text-sm',\n      md: 'px-6 py-3 text-base',\n      lg: 'px-8 py-4 text-lg'\n    };\n\n    const glowClass = glow ? 'glow-red' : '';\n\n    return (\n      <button\n        className={cn(\n          baseClasses,\n          variants[variant],\n          sizes[size],\n          glowClass,\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nButton.displayName = 'Button';\n\nexport { Button };\n"],
      names: ["Button", "forwardRef", "className", "variant", "size", "glow", "props", "ref", "baseClasses", "variants", "primary", "secondary", "danger", "ghost", "sizes", "sm", "md", "lg", "glowClass", "button", "cn", "displayName"],
      mappings: ";;;;+BAmDSA;;;eAAAA;;;;uBAnDwC;uBAC9B;AAanB,MAAMA,uBAASC,IAAAA,iBAAU,EACvB,CAAC,EAAEC,SAAS,EAAEC,UAAU,SAAS,EAAEC,OAAO,IAAI,EAAEC,OAAO,KAAK,EAAE,GAAGC,OAAO,EAAEC;IACxE,MAAMC,cAAc;IAEpB,MAAMC,WAAW;QACfC,SAAS;QACTC,WAAW;QACXC,QAAQ;QACRC,OAAO;IACT;IAEA,MAAMC,QAAQ;QACZC,IAAI;QACJC,IAAI;QACJC,IAAI;IACN;IAEA,MAAMC,YAAYb,OAAO,aAAa;IAEtC,qBACE,qBAACc;QACCjB,WAAWkB,IAAAA,SAAE,EACXZ,aACAC,QAAQ,CAACN,QAAQ,EACjBW,KAAK,CAACV,KAAK,EACXc,WACAhB;QAEFK,KAAKA;QACJ,GAAGD,KAAK;;AAGf;AAGFN,OAAOqB,WAAW,GAAG"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "83b866d991b8d52f894fb206fd092ab997ce6cd5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_bnicqv9j6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_bnicqv9j6();
cov_bnicqv9j6().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_bnicqv9j6().s[1]++;
Object.defineProperty(exports, "Button", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_bnicqv9j6().f[0]++;
    cov_bnicqv9j6().s[2]++;
    return Button;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_bnicqv9j6().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(cov_bnicqv9j6().s[4]++, require("react"));
const _utils =
/* istanbul ignore next */
(cov_bnicqv9j6().s[5]++, require("../../lib/utils"));
const Button =
/* istanbul ignore next */
(/*#__PURE__*/cov_bnicqv9j6().s[6]++, (0, _react.forwardRef)(({
  className,
  variant =
  /* istanbul ignore next */
  (cov_bnicqv9j6().b[0][0]++, 'primary'),
  size =
  /* istanbul ignore next */
  (cov_bnicqv9j6().b[1][0]++, 'md'),
  glow =
  /* istanbul ignore next */
  (cov_bnicqv9j6().b[2][0]++, false),
  ...props
}, ref) => {
  /* istanbul ignore next */
  cov_bnicqv9j6().f[1]++;
  const baseClasses =
  /* istanbul ignore next */
  (cov_bnicqv9j6().s[7]++, 'font-bold transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-overlord-red focus:ring-offset-2 focus:ring-offset-background disabled:opacity-50 disabled:cursor-not-allowed rounded-md transform active:scale-95 hover:scale-105');
  const variants =
  /* istanbul ignore next */
  (cov_bnicqv9j6().s[8]++, {
    primary: 'bg-overlord-red hover:bg-authority-red text-light-text',
    secondary: 'border border-muted-light hover:bg-surface-dark text-muted-light hover:text-light-text',
    danger: 'bg-rejected-red hover:bg-red-600 text-light-text',
    ghost: 'hover:bg-surface-dark text-muted-light hover:text-light-text'
  });
  const sizes =
  /* istanbul ignore next */
  (cov_bnicqv9j6().s[9]++, {
    sm: 'px-4 py-2 text-sm',
    md: 'px-6 py-3 text-base',
    lg: 'px-8 py-4 text-lg'
  });
  const glowClass =
  /* istanbul ignore next */
  (cov_bnicqv9j6().s[10]++, glow ?
  /* istanbul ignore next */
  (cov_bnicqv9j6().b[3][0]++, 'glow-red') :
  /* istanbul ignore next */
  (cov_bnicqv9j6().b[3][1]++, ''));
  /* istanbul ignore next */
  cov_bnicqv9j6().s[11]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
    className: (0, _utils.cn)(baseClasses, variants[variant], sizes[size], glowClass, className),
    ref: ref,
    ...props
  });
}));
/* istanbul ignore next */
cov_bnicqv9j6().s[12]++;
Button.displayName = 'Button';
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfYm5pY3F2OWo2IiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwiQnV0dG9uIiwiX3JlYWN0IiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInZhcmlhbnQiLCJiIiwic2l6ZSIsImdsb3ciLCJwcm9wcyIsInJlZiIsImYiLCJiYXNlQ2xhc3NlcyIsInZhcmlhbnRzIiwicHJpbWFyeSIsInNlY29uZGFyeSIsImRhbmdlciIsImdob3N0Iiwic2l6ZXMiLCJzbSIsIm1kIiwibGciLCJnbG93Q2xhc3MiLCJfanN4cnVudGltZSIsImpzeCIsIl91dGlscyIsImNuIiwiZGlzcGxheU5hbWUiXSwic291cmNlcyI6WyIvVXNlcnMvam9zaHN6ZXAvY29kZS90aGVyb2JvdG92ZXJsb3JkLW1vbm8vdGhlcm9ib3RvdmVybG9yZC13ZWIvc3JjL2NvbXBvbmVudHMvdWkvQnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCdXR0b25IVE1MQXR0cmlidXRlcywgZm9yd2FyZFJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNuIH0gZnJvbSAnQC9saWIvdXRpbHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvblByb3BzIGV4dGVuZHMgQnV0dG9uSFRNTEF0dHJpYnV0ZXM8SFRNTEJ1dHRvbkVsZW1lbnQ+IHtcbiAgdmFyaWFudD86ICdwcmltYXJ5JyB8ICdzZWNvbmRhcnknIHwgJ2RhbmdlcicgfCAnZ2hvc3QnO1xuICBzaXplPzogJ3NtJyB8ICdtZCcgfCAnbGcnO1xuICBnbG93PzogYm9vbGVhbjtcbiAgJ2FyaWEtbGFiZWwnPzogc3RyaW5nO1xuICAnYXJpYS1kZXNjcmliZWRieSc/OiBzdHJpbmc7XG4gICdhcmlhLXByZXNzZWQnPzogYm9vbGVhbjtcbiAgJ2FyaWEtZXhwYW5kZWQnPzogYm9vbGVhbjtcbiAgJ2FyaWEtY29udHJvbHMnPzogc3RyaW5nO1xufVxuXG5jb25zdCBCdXR0b24gPSBmb3J3YXJkUmVmPEhUTUxCdXR0b25FbGVtZW50LCBCdXR0b25Qcm9wcz4oXG4gICh7IGNsYXNzTmFtZSwgdmFyaWFudCA9ICdwcmltYXJ5Jywgc2l6ZSA9ICdtZCcsIGdsb3cgPSBmYWxzZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiB7XG4gICAgY29uc3QgYmFzZUNsYXNzZXMgPSAnZm9udC1ib2xkIHRyYW5zaXRpb24tYWxsIGR1cmF0aW9uLTIwMCBmb2N1czpvdXRsaW5lLW5vbmUgZm9jdXM6cmluZy0yIGZvY3VzOnJpbmctb3ZlcmxvcmQtcmVkIGZvY3VzOnJpbmctb2Zmc2V0LTIgZm9jdXM6cmluZy1vZmZzZXQtYmFja2dyb3VuZCBkaXNhYmxlZDpvcGFjaXR5LTUwIGRpc2FibGVkOmN1cnNvci1ub3QtYWxsb3dlZCByb3VuZGVkLW1kIHRyYW5zZm9ybSBhY3RpdmU6c2NhbGUtOTUgaG92ZXI6c2NhbGUtMTA1JztcbiAgICBcbiAgICBjb25zdCB2YXJpYW50cyA9IHtcbiAgICAgIHByaW1hcnk6ICdiZy1vdmVybG9yZC1yZWQgaG92ZXI6YmctYXV0aG9yaXR5LXJlZCB0ZXh0LWxpZ2h0LXRleHQnLFxuICAgICAgc2Vjb25kYXJ5OiAnYm9yZGVyIGJvcmRlci1tdXRlZC1saWdodCBob3ZlcjpiZy1zdXJmYWNlLWRhcmsgdGV4dC1tdXRlZC1saWdodCBob3Zlcjp0ZXh0LWxpZ2h0LXRleHQnLFxuICAgICAgZGFuZ2VyOiAnYmctcmVqZWN0ZWQtcmVkIGhvdmVyOmJnLXJlZC02MDAgdGV4dC1saWdodC10ZXh0JyxcbiAgICAgIGdob3N0OiAnaG92ZXI6Ymctc3VyZmFjZS1kYXJrIHRleHQtbXV0ZWQtbGlnaHQgaG92ZXI6dGV4dC1saWdodC10ZXh0J1xuICAgIH07XG5cbiAgICBjb25zdCBzaXplcyA9IHtcbiAgICAgIHNtOiAncHgtNCBweS0yIHRleHQtc20nLFxuICAgICAgbWQ6ICdweC02IHB5LTMgdGV4dC1iYXNlJyxcbiAgICAgIGxnOiAncHgtOCBweS00IHRleHQtbGcnXG4gICAgfTtcblxuICAgIGNvbnN0IGdsb3dDbGFzcyA9IGdsb3cgPyAnZ2xvdy1yZWQnIDogJyc7XG5cbiAgICByZXR1cm4gKFxuICAgICAgPGJ1dHRvblxuICAgICAgICBjbGFzc05hbWU9e2NuKFxuICAgICAgICAgIGJhc2VDbGFzc2VzLFxuICAgICAgICAgIHZhcmlhbnRzW3ZhcmlhbnRdLFxuICAgICAgICAgIHNpemVzW3NpemVdLFxuICAgICAgICAgIGdsb3dDbGFzcyxcbiAgICAgICAgICBjbGFzc05hbWVcbiAgICAgICAgKX1cbiAgICAgICAgcmVmPXtyZWZ9XG4gICAgICAgIHsuLi5wcm9wc31cbiAgICAgIC8+XG4gICAgKTtcbiAgfVxuKTtcblxuQnV0dG9uLmRpc3BsYXlOYW1lID0gJ0J1dHRvbic7XG5cbmV4cG9ydCB7IEJ1dHRvbiB9O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBa0JVO0lBQUFBLGFBQUEsWUFBQUEsQ0FBQTtNQUFBLE9BQUFDLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUFELGFBQUE7QUFBQUEsYUFBQSxHQUFBRSxDQUFBOzs7Ozs7K0JBaUNEOzs7Ozs7V0FBQUMsTUFBQTs7Ozs7Ozs7aUNBbkR3Qzs7O2lDQUM5QjtBQWFuQixNQUFNQSxNQUFBO0FBQUE7QUFBQSxjQUFBSCxhQUFBLEdBQUFFLENBQUEsT0FBUyxJQUFBRSxNQUFBLENBQUFDLFVBQVUsRUFDdkIsQ0FBQztFQUFFQyxTQUFTO0VBQUVDLE9BQUE7RUFBQTtFQUFBLENBQUFQLGFBQUEsR0FBQVEsQ0FBQSxVQUFVLFNBQVM7RUFBRUMsSUFBQTtFQUFBO0VBQUEsQ0FBQVQsYUFBQSxHQUFBUSxDQUFBLFVBQU8sSUFBSTtFQUFFRSxJQUFBO0VBQUE7RUFBQSxDQUFBVixhQUFBLEdBQUFRLENBQUEsVUFBTyxLQUFLO0VBQUUsR0FBR0c7QUFBQSxDQUFPLEVBQUVDLEdBQUE7RUFBQTtFQUFBWixhQUFBLEdBQUFhLENBQUE7RUFDeEUsTUFBTUMsV0FBQTtFQUFBO0VBQUEsQ0FBQWQsYUFBQSxHQUFBRSxDQUFBLE9BQWM7RUFFcEIsTUFBTWEsUUFBQTtFQUFBO0VBQUEsQ0FBQWYsYUFBQSxHQUFBRSxDQUFBLE9BQVc7SUFDZmMsT0FBQSxFQUFTO0lBQ1RDLFNBQUEsRUFBVztJQUNYQyxNQUFBLEVBQVE7SUFDUkMsS0FBQSxFQUFPO0VBQ1Q7RUFFQSxNQUFNQyxLQUFBO0VBQUE7RUFBQSxDQUFBcEIsYUFBQSxHQUFBRSxDQUFBLE9BQVE7SUFDWm1CLEVBQUEsRUFBSTtJQUNKQyxFQUFBLEVBQUk7SUFDSkMsRUFBQSxFQUFJO0VBQ047RUFFQSxNQUFNQyxTQUFBO0VBQUE7RUFBQSxDQUFBeEIsYUFBQSxHQUFBRSxDQUFBLFFBQVlRLElBQUE7RUFBQTtFQUFBLENBQUFWLGFBQUEsR0FBQVEsQ0FBQSxVQUFPO0VBQUE7RUFBQSxDQUFBUixhQUFBLEdBQUFRLENBQUEsVUFBYTtFQUFBO0VBQUFSLGFBQUEsR0FBQUUsQ0FBQTtFQUV0QyxvQkFDRSxJQUFBdUIsV0FBQSxDQUFBQyxHQUFBLEVBQUM7SUFDQ3BCLFNBQUEsRUFBVyxJQUFBcUIsTUFBQSxDQUFBQyxFQUFFLEVBQ1hkLFdBQUEsRUFDQUMsUUFBUSxDQUFDUixPQUFBLENBQVEsRUFDakJhLEtBQUssQ0FBQ1gsSUFBQSxDQUFLLEVBQ1hlLFNBQUEsRUFDQWxCLFNBQUE7SUFFRk0sR0FBQSxFQUFLQSxHQUFBO0lBQ0osR0FBR0Q7O0FBR1Y7QUFBQTtBQUFBWCxhQUFBLEdBQUFFLENBQUE7QUFHRkMsTUFBQSxDQUFPMEIsV0FBVyxHQUFHIiwiaWdub3JlTGlzdCI6W119