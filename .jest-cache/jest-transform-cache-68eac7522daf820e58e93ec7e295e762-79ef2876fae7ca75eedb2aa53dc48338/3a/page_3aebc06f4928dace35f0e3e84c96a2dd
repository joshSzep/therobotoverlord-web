de41d1bc38571d1e86bb99cc8b039a05
/**
 * Main content feed page for The Robot Overlord
 * Displays personalized feed of posts and topics
 */ 'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return FeedContent;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_wildcard(require("react"));
const _LazyComponents = require("../../components/lazy/LazyComponents");
const _FeedFilters = require("../../components/feed/FeedFilters");
const _DashboardLayout = require("../../components/layout/DashboardLayout");
const _useRealTimeUpdates = require("../../hooks/useRealTimeUpdates");
const _Button = require("../../components/ui/Button");
const _Card = require("../../components/ui/Card");
const _LoadingSpinner = require("../../components/ui/LoadingSpinner");
const _Skeleton = require("../../components/ui/Skeleton");
const _EmptyState = require("../../components/ui/EmptyState");
const _ErrorBoundary = require("../../components/ui/ErrorBoundary");
const _appStore = require("../../stores/appStore");
const _services = require("../../services");
function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== "function") return null;
    var cacheBabelInterop = new WeakMap();
    var cacheNodeInterop = new WeakMap();
    return (_getRequireWildcardCache = function(nodeInterop) {
        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
    })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
        return obj;
    }
    if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
        return {
            default: obj
        };
    }
    var cache = _getRequireWildcardCache(nodeInterop);
    if (cache && cache.has(obj)) {
        return cache.get(obj);
    }
    var newObj = {
        __proto__: null
    };
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var key in obj){
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
            if (desc && (desc.get || desc.set)) {
                Object.defineProperty(newObj, key, desc);
            } else {
                newObj[key] = obj[key];
            }
        }
    }
    newObj.default = obj;
    if (cache) {
        cache.set(obj, newObj);
    }
    return newObj;
}
function FeedContent() {
    const { addNotification } = (0, _appStore.useAppStore)();
    const [feedItems, setFeedItems] = (0, _react.useState)([]);
    const [isLoading, setIsLoading] = (0, _react.useState)(true);
    const [error, setError] = (0, _react.useState)(null);
    const [selectedFilter, setSelectedFilter] = (0, _react.useState)('all');
    const [sortBy, setSortBy] = (0, _react.useState)('recent');
    // Enable real-time updates
    const { connected, isRealTimeEnabled } = (0, _useRealTimeUpdates.useRealTimeUpdates)();
    const [currentPage, setCurrentPage] = (0, _react.useState)(1);
    const [hasMore, setHasMore] = (0, _react.useState)(true);
    const [isLoadingMore, setIsLoadingMore] = (0, _react.useState)(false);
    const [filters, setFilters] = (0, _react.useState)({
        contentType: 'all',
        timeRange: 'week',
        categories: [],
        sortBy: 'personalized',
        showFollowing: false
    });
    // Load feed content
    const loadFeed = async (page = 1, append = false)=>{
        try {
            if (page === 1) {
                setIsLoading(true);
                setError(null);
            } else {
                setIsLoadingMore(true);
            }
            const feedData = [];
            // Load posts if needed
            if (filters.contentType === 'all' || filters.contentType === 'posts') {
                const postsResponse = await _services.postsService.getFeed({
                    page,
                    limit: 10,
                    timeRange: filters.timeRange,
                    categories: filters.categories,
                    sortBy: filters.sortBy,
                    following: filters.showFollowing
                });
                if (postsResponse.data) {
                    const postItems = postsResponse.data.map((post)=>({
                            id: `post-${post.id}`,
                            type: 'post',
                            data: post,
                            timestamp: post.createdAt,
                            relevanceScore: post.score
                        }));
                    feedData.push(...postItems);
                }
            }
            // Load topics if needed
            if (filters.contentType === 'all' || filters.contentType === 'topics') {
                const topicsResponse = await _services.topicsService.getFeed({
                    page,
                    limit: 5,
                    timeRange: filters.timeRange,
                    categories: filters.categories,
                    sortBy: filters.sortBy
                });
                if (topicsResponse.data) {
                    const topicItems = topicsResponse.data.map((topic)=>({
                            id: `topic-${topic.id}`,
                            type: 'topic',
                            data: topic,
                            timestamp: topic.createdAt,
                            relevanceScore: topic.postCount
                        }));
                    feedData.push(...topicItems);
                }
            }
            // Sort combined feed by timestamp or relevance
            const sortedFeed = feedData.sort((a, b)=>{
                if (filters.sortBy === 'newest') {
                    return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime();
                } else if (filters.sortBy === 'popular' || filters.sortBy === 'trending') {
                    return (b.relevanceScore || 0) - (a.relevanceScore || 0);
                } else {
                    // Personalized - mix of recency and relevance
                    const aScore = (a.relevanceScore || 0) * 0.7 + (Date.now() - new Date(a.timestamp).getTime()) * 0.3;
                    const bScore = (b.relevanceScore || 0) * 0.7 + (Date.now() - new Date(b.timestamp).getTime()) * 0.3;
                    return bScore - aScore;
                }
            });
            if (append) {
                setFeedItems((prev)=>[
                        ...prev,
                        ...sortedFeed
                    ]);
            } else {
                setFeedItems(sortedFeed);
            }
            setHasMore(sortedFeed.length >= 15); // Assume more if we got a full page
            setCurrentPage(page);
        } catch (err) {
            const errorMessage = err instanceof Error ? err.message : 'Failed to load feed';
            setError(errorMessage);
            addNotification({
                type: 'error',
                title: 'Feed Error',
                message: errorMessage
            });
        } finally{
            setIsLoading(false);
            setIsLoadingMore(false);
        }
    };
    // Initial load
    (0, _react.useEffect)(()=>{
        loadFeed(1);
    }, [
        filters
    ]);
    // Handle filter changes
    const handleFiltersChange = (newFilters)=>{
        setFilters((prev)=>({
                ...prev,
                ...newFilters
            }));
        setCurrentPage(1);
    };
    // Load more content
    const handleLoadMore = ()=>{
        if (!isLoadingMore && hasMore) {
            loadFeed(currentPage + 1, true);
        }
    };
    // Refresh feed
    const handleRefresh = ()=>{
        setCurrentPage(1);
        loadFeed(1);
    };
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_DashboardLayout.DashboardLayout, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
            className: "space-y-6",
            children: [
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2 text-sm",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: `w-2 h-2 rounded-full ${connected ? 'bg-approved-green' : 'bg-muted'}`
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-muted-light",
                            children: connected ? 'Live updates enabled' : 'Offline mode'
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("span", {
                            className: "text-sm font-medium text-light-text",
                            children: "Show:"
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "flex space-x-1",
                            children: [
                                {
                                    value: 'all',
                                    label: 'All'
                                },
                                {
                                    value: 'posts',
                                    label: 'Posts'
                                },
                                {
                                    value: 'topics',
                                    label: 'Topics'
                                }
                            ].map((filter)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.Button, {
                                    variant: selectedFilter === filter.value ? 'primary' : 'ghost',
                                    size: "sm",
                                    onClick: ()=>setSelectedFilter(filter.value),
                                    children: filter.label
                                }, filter.value))
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center justify-between",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                            children: [
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("h1", {
                                    className: "text-3xl font-bold text-light-text",
                                    children: "Content Feed"
                                }),
                                /*#__PURE__*/ (0, _jsxruntime.jsx)("p", {
                                    className: "text-muted-light mt-1",
                                    children: "Discover the latest posts and topics tailored for you"
                                })
                            ]
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "flex items-center space-x-3",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Button.Button, {
                                variant: "ghost",
                                onClick: handleRefresh,
                                disabled: isLoading,
                                children: "\uD83D\uDD04 Refresh"
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "grid grid-cols-1 md:grid-cols-4 gap-4",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_Card.Card, {
                            variant: "bordered",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Card.CardContent, {
                                className: "p-4 text-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-2xl font-bold text-overlord-red mb-1",
                                        children: feedItems.filter((item)=>item.type === 'post').length
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-sm text-muted-light",
                                        children: "Posts"
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_Card.Card, {
                            variant: "bordered",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Card.CardContent, {
                                className: "p-4 text-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-2xl font-bold text-overlord-red mb-1",
                                        children: feedItems.filter((item)=>item.type === 'topic').length
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-sm text-muted-light",
                                        children: "Topics"
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_Card.Card, {
                            variant: "bordered",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Card.CardContent, {
                                className: "p-4 text-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-2xl font-bold text-overlord-red mb-1",
                                        children: filters.categories.length || 'All'
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-sm text-muted-light",
                                        children: "Categories"
                                    })
                                ]
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)(_Card.Card, {
                            variant: "bordered",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsxs)(_Card.CardContent, {
                                className: "p-4 text-center",
                                children: [
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-2xl font-bold text-overlord-red mb-1",
                                        children: filters.timeRange === 'day' ? '24h' : filters.timeRange === 'week' ? '7d' : filters.timeRange === 'month' ? '30d' : 'All'
                                    }),
                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "text-sm text-muted-light",
                                        children: "Time Range"
                                    })
                                ]
                            })
                        })
                    ]
                }),
                /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                    className: "grid grid-cols-1 lg:grid-cols-4 gap-6",
                    children: [
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "lg:col-span-1",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_FeedFilters.FeedFilters, {
                                filters: filters,
                                onFiltersChange: handleFiltersChange,
                                totalItems: feedItems.length
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "lg:col-span-2",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_ErrorBoundary.AsyncErrorBoundary, {
                                onRetry: handleRefresh,
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_LoadingSpinner.LoadingState, {
                                    isLoading: isLoading,
                                    error: error,
                                    useSkeleton: true,
                                    skeleton: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "space-y-6",
                                        children: Array.from({
                                            length: 3
                                        }).map((_, index)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_Skeleton.FeedPostSkeleton, {}, index))
                                    }),
                                    loadingComponent: /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                        className: "space-y-6",
                                        children: [
                                            ...Array(5)
                                        ].map((_, i)=>/*#__PURE__*/ (0, _jsxruntime.jsx)(_Card.Card, {
                                                variant: "bordered",
                                                className: "animate-pulse",
                                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_Card.CardContent, {
                                                    className: "p-6",
                                                    children: /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                        className: "flex items-start space-x-4",
                                                        children: [
                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                className: "w-12 h-12 bg-muted/20 rounded-full"
                                                            }),
                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                className: "flex-1",
                                                                children: [
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "h-6 bg-muted/20 rounded w-3/4 mb-2"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "h-4 bg-muted/20 rounded w-full mb-2"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                        className: "h-4 bg-muted/20 rounded w-2/3 mb-4"
                                                                    }),
                                                                    /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                        className: "flex justify-between",
                                                                        children: [
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                                                                                className: "flex space-x-4",
                                                                                children: [
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                        className: "h-4 bg-muted/20 rounded w-16"
                                                                                    }),
                                                                                    /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                        className: "h-4 bg-muted/20 rounded w-20"
                                                                                    })
                                                                                ]
                                                                            }),
                                                                            /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                                                                                className: "h-4 bg-muted/20 rounded w-24"
                                                                            })
                                                                        ]
                                                                    })
                                                                ]
                                                            })
                                                        ]
                                                    })
                                                })
                                            }, i))
                                    }),
                                    children: feedItems.length > 0 ? /*#__PURE__*/ (0, _jsxruntime.jsx)(_LazyComponents.LazyContentFeed, {
                                        items: feedItems,
                                        onLoadMore: handleLoadMore,
                                        hasMore: hasMore,
                                        isLoadingMore: isLoadingMore
                                    }) : /*#__PURE__*/ (0, _jsxruntime.jsx)(_EmptyState.EmptyFeedState, {
                                        onRefresh: handleRefresh
                                    })
                                })
                            })
                        }),
                        /*#__PURE__*/ (0, _jsxruntime.jsx)("div", {
                            className: "lg:col-span-1",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_ErrorBoundary.ComponentErrorBoundary, {
                                children: /*#__PURE__*/ (0, _jsxruntime.jsx)(_LazyComponents.LazyPersonalizedRecommendations, {
                                    limit: 6,
                                    categories: filters.categories,
                                    className: "sticky top-6"
                                })
                            })
                        })
                    ]
                })
            ]
        })
    });
}

//# sourceMappingURL=data:application/json;base64,