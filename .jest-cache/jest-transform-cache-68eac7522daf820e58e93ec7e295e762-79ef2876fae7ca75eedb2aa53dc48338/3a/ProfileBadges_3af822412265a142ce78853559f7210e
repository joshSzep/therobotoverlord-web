88cb58417388a8f477d92f60e999032a
'use client';
"use strict";

/* istanbul ignore next */
function cov_2k39uod53r() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileBadges.tsx";
  var hash = "a1a2170a3848b182ae7cae2c115196bdf4ac3c17";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileBadges.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 29
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 15,
          column: 15
        },
        end: {
          line: 15,
          column: 37
        }
      },
      "7": {
        start: {
          line: 16,
          column: 19
        },
        end: {
          line: 16,
          column: 50
        }
      },
      "8": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "10": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "11": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "13": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "14": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "15": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "16": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "17": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "18": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "21": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "22": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 88
        }
      },
      "23": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "24": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "25": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 95
        }
      },
      "26": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "27": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 57
        }
      },
      "28": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 39
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "30": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "31": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "32": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "33": {
        start: {
          line: 59,
          column: 32
        },
        end: {
          line: 59,
          column: 56
        }
      },
      "34": {
        start: {
          line: 60,
          column: 38
        },
        end: {
          line: 60,
          column: 64
        }
      },
      "35": {
        start: {
          line: 61,
          column: 30
        },
        end: {
          line: 61,
          column: 56
        }
      },
      "36": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 78,
          column: 7
        }
      },
      "37": {
        start: {
          line: 63,
          column: 28
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "38": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 73,
          column: 13
        }
      },
      "39": {
        start: {
          line: 65,
          column: 16
        },
        end: {
          line: 65,
          column: 35
        }
      },
      "40": {
        start: {
          line: 66,
          column: 35
        },
        end: {
          line: 66,
          column: 93
        }
      },
      "41": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 44
        }
      },
      "42": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 64
        }
      },
      "43": {
        start: {
          line: 70,
          column: 16
        },
        end: {
          line: 70,
          column: 50
        }
      },
      "44": {
        start: {
          line: 72,
          column: 16
        },
        end: {
          line: 72,
          column: 36
        }
      },
      "45": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 75,
          column: 22
        }
      },
      "46": {
        start: {
          line: 79,
          column: 27
        },
        end: {
          line: 92,
          column: 5
        }
      },
      "47": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 91,
          column: 9
        }
      },
      "48": {
        start: {
          line: 82,
          column: 16
        },
        end: {
          line: 82,
          column: 83
        }
      },
      "49": {
        start: {
          line: 84,
          column: 16
        },
        end: {
          line: 84,
          column: 81
        }
      },
      "50": {
        start: {
          line: 86,
          column: 16
        },
        end: {
          line: 86,
          column: 79
        }
      },
      "51": {
        start: {
          line: 88,
          column: 16
        },
        end: {
          line: 88,
          column: 50
        }
      },
      "52": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 50
        }
      },
      "53": {
        start: {
          line: 93,
          column: 26
        },
        end: {
          line: 106,
          column: 5
        }
      },
      "54": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 105,
          column: 9
        }
      },
      "55": {
        start: {
          line: 96,
          column: 16
        },
        end: {
          line: 96,
          column: 28
        }
      },
      "56": {
        start: {
          line: 98,
          column: 16
        },
        end: {
          line: 98,
          column: 28
        }
      },
      "57": {
        start: {
          line: 100,
          column: 16
        },
        end: {
          line: 100,
          column: 27
        }
      },
      "58": {
        start: {
          line: 102,
          column: 16
        },
        end: {
          line: 102,
          column: 28
        }
      },
      "59": {
        start: {
          line: 104,
          column: 16
        },
        end: {
          line: 104,
          column: 28
        }
      },
      "60": {
        start: {
          line: 107,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "61": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 124,
          column: 11
        }
      },
      "62": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 145,
          column: 5
        }
      },
      "63": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 144,
          column: 11
        }
      },
      "64": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 260,
          column: 7
        }
      },
      "65": {
        start: {
          line: 181,
          column: 46
        },
        end: {
          line: 181,
          column: 92
        }
      },
      "66": {
        start: {
          line: 181,
          column: 65
        },
        end: {
          line: 181,
          column: 84
        }
      },
      "67": {
        start: {
          line: 182,
          column: 32
        },
        end: {
          line: 198,
          column: 43
        }
      },
      "68": {
        start: {
          line: 203,
          column: 72
        },
        end: {
          line: 247,
          column: 44
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 40
          }
        },
        loc: {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 34
          }
        },
        loc: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "ProfileBadges",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 22
          }
        },
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 261,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 27
          }
        },
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 76,
            column: 5
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 28
          },
          end: {
            line: 63,
            column: 29
          }
        },
        loc: {
          start: {
            line: 63,
            column: 38
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 79,
            column: 27
          },
          end: {
            line: 79,
            column: 28
          }
        },
        loc: {
          start: {
            line: 79,
            column: 37
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 79
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 93,
            column: 26
          },
          end: {
            line: 93,
            column: 27
          }
        },
        loc: {
          start: {
            line: 93,
            column: 36
          },
          end: {
            line: 106,
            column: 5
          }
        },
        line: 93
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 180,
            column: 34
          },
          end: {
            line: 180,
            column: 35
          }
        },
        loc: {
          start: {
            line: 180,
            column: 44
          },
          end: {
            line: 199,
            column: 29
          }
        },
        line: 180
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 181,
            column: 60
          },
          end: {
            line: 181,
            column: 61
          }
        },
        loc: {
          start: {
            line: 181,
            column: 65
          },
          end: {
            line: 181,
            column: 84
          }
        },
        line: 181
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 203,
            column: 49
          },
          end: {
            line: 203,
            column: 50
          }
        },
        loc: {
          start: {
            line: 203,
            column: 72
          },
          end: {
            line: 247,
            column: 44
          }
        },
        line: 203
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 45
          }
        }, {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 22,
            column: 65
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 27
          }
        }, {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 45
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 31
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 53
          }
        }, {
          start: {
            line: 41,
            column: 57
          },
          end: {
            line: 41,
            column: 88
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 79
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 88
          }
        }, {
          start: {
            line: 44,
            column: 91
          },
          end: {
            line: 44,
            column: 95
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 49,
            column: 13
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 20
          }
        }, {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 33
          }
        }, {
          start: {
            line: 45,
            column: 37
          },
          end: {
            line: 45,
            column: 45
          }
        }],
        line: 45
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 67,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 67,
            column: 36
          }
        }, {
          start: {
            line: 67,
            column: 40
          },
          end: {
            line: 67,
            column: 42
          }
        }],
        line: 67
      },
      "16": {
        loc: {
          start: {
            line: 80,
            column: 8
          },
          end: {
            line: 91,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 81,
            column: 12
          },
          end: {
            line: 82,
            column: 83
          }
        }, {
          start: {
            line: 83,
            column: 12
          },
          end: {
            line: 84,
            column: 81
          }
        }, {
          start: {
            line: 85,
            column: 12
          },
          end: {
            line: 86,
            column: 79
          }
        }, {
          start: {
            line: 87,
            column: 12
          },
          end: {
            line: 88,
            column: 50
          }
        }, {
          start: {
            line: 89,
            column: 12
          },
          end: {
            line: 90,
            column: 50
          }
        }],
        line: 80
      },
      "17": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 105,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 95,
            column: 12
          },
          end: {
            line: 96,
            column: 28
          }
        }, {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 98,
            column: 28
          }
        }, {
          start: {
            line: 99,
            column: 12
          },
          end: {
            line: 100,
            column: 27
          }
        }, {
          start: {
            line: 101,
            column: 12
          },
          end: {
            line: 102,
            column: 28
          }
        }, {
          start: {
            line: 103,
            column: 12
          },
          end: {
            line: 104,
            column: 28
          }
        }],
        line: 94
      },
      "18": {
        loc: {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "19": {
        loc: {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 145,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 126
      },
      "20": {
        loc: {
          start: {
            line: 154,
            column: 26
          },
          end: {
            line: 257,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 154,
            column: 62
          },
          end: {
            line: 170,
            column: 18
          }
        }, {
          start: {
            line: 170,
            column: 35
          },
          end: {
            line: 257,
            column: 18
          }
        }],
        line: 154
      },
      "21": {
        loc: {
          start: {
            line: 210,
            column: 58
          },
          end: {
            line: 214,
            column: 80
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 210,
            column: 89
          },
          end: {
            line: 214,
            column: 50
          }
        }, {
          start: {
            line: 214,
            column: 53
          },
          end: {
            line: 214,
            column: 80
          }
        }],
        line: 210
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0],
      "17": [0, 0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileBadges.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Badge } from '@/components/ui/Badge';\nimport { User, Badge as BadgeType } from '@/types/user';\nimport { apiClient } from '@/lib/api-client';\n\ninterface ProfileBadgesProps {\n  user: User;\n}\n\nexport function ProfileBadges({ user }: ProfileBadgesProps) {\n  const [badges, setBadges] = useState<BadgeType[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchBadges = async () => {\n      try {\n        setIsLoading(true);\n        const userBadges = await apiClient.get<BadgeType[]>(`/users/${user.id}/badges`);\n        setBadges(userBadges || []);\n      } catch (error: any) {\n        console.error('Failed to fetch badges:', error);\n        setError('Failed to load badges');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchBadges();\n  }, [user.id]);\n\n  const getRarityColor = (rarity: BadgeType['rarity']) => {\n    switch (rarity) {\n      case 'legendary': return 'bg-gradient-to-r from-yellow-400 to-orange-500 text-white';\n      case 'epic': return 'bg-gradient-to-r from-purple-500 to-pink-500 text-white';\n      case 'rare': return 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white';\n      case 'common': return 'bg-muted text-light-text';\n      default: return 'bg-muted text-light-text';\n    }\n  };\n\n  const getRarityIcon = (rarity: BadgeType['rarity']) => {\n    switch (rarity) {\n      case 'legendary': return '\uD83D\uDC51';\n      case 'epic': return '\uD83D\uDC8E';\n      case 'rare': return '\u2B50';\n      case 'common': return '\uD83C\uDFC5';\n      default: return '\uD83C\uDFC5';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Badges & Achievements</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"w-6 h-6 border-2 border-overlord-red border-t-transparent rounded-full animate-spin\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (error) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Badges & Achievements</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-center py-8\">\n            <p className=\"text-rejected-red text-sm\">{error}</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Badges & Achievements</CardTitle>\n      </CardHeader>\n      <CardContent>\n        {badges.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-4xl mb-4\">\uD83C\uDF96\uFE0F</div>\n            <p className=\"text-muted-light text-sm mb-2\">No badges earned yet</p>\n            <p className=\"text-xs text-muted-light\">\n              Complete tasks and contribute to earn recognition from the Robot Overlord.\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {/* Badge Stats */}\n            <div className=\"grid grid-cols-4 gap-2 text-center\">\n              {['legendary', 'epic', 'rare', 'common'].map((rarity) => {\n                const count = badges.filter(b => b.rarity === rarity).length;\n                return (\n                  <div key={rarity} className=\"p-2 bg-muted/20 rounded\">\n                    <div className=\"text-lg\">{getRarityIcon(rarity as BadgeType['rarity'])}</div>\n                    <div className=\"text-sm font-medium text-light-text\">{count}</div>\n                    <div className=\"text-xs text-muted-light capitalize\">{rarity}</div>\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Badge Grid */}\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-3\">\n              {badges.map((badge) => (\n                <div\n                  key={badge.id}\n                  className=\"p-3 bg-muted/20 rounded-lg border hover:bg-muted/30 transition-colors\"\n                >\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"text-2xl flex-shrink-0\">\n                      {badge.icon_url ? (\n                        <img \n                          src={badge.icon_url} \n                          alt={badge.name}\n                          className=\"w-8 h-8\"\n                        />\n                      ) : (\n                        getRarityIcon(badge.rarity)\n                      )}\n                    </div>\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center gap-2 mb-1\">\n                        <h4 className=\"font-medium text-light-text text-sm truncate\">\n                          {badge.name}\n                        </h4>\n                        <Badge className={`text-xs ${getRarityColor(badge.rarity)}`}>\n                          {badge.rarity}\n                        </Badge>\n                      </div>\n                      <p className=\"text-xs text-muted-light mb-2 line-clamp-2\">\n                        {badge.description}\n                      </p>\n                      <p className=\"text-xs text-muted-light\">\n                        Earned: {new Date(badge.earned_at).toLocaleDateString()}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Progress Hint */}\n            <div className=\"text-center pt-4 border-t border-muted/30\">\n              <p className=\"text-xs text-muted-light\">\n                Keep contributing to unlock more badges and climb the loyalty ranks!\n              </p>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],
      names: ["ProfileBadges", "user", "badges", "setBadges", "useState", "isLoading", "setIsLoading", "error", "setError", "useEffect", "fetchBadges", "userBadges", "apiClient", "get", "id", "console", "getRarityColor", "rarity", "getRarityIcon", "Card", "CardHeader", "CardTitle", "CardContent", "div", "className", "p", "length", "map", "count", "filter", "b", "badge", "icon_url", "img", "src", "alt", "name", "h4", "Badge", "description", "Date", "earned_at", "toLocaleDateString"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a1a2170a3848b182ae7cae2c115196bdf4ac3c17"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2k39uod53r = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2k39uod53r();
cov_2k39uod53r().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2k39uod53r().s[1]++;
Object.defineProperty(exports, "ProfileBadges", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2k39uod53r().f[0]++;
    cov_2k39uod53r().s[2]++;
    return ProfileBadges;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2k39uod53r().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2k39uod53r().s[4]++, _interop_require_wildcard(require("react")));
const _Card =
/* istanbul ignore next */
(cov_2k39uod53r().s[5]++, require("../ui/Card"));
const _Badge =
/* istanbul ignore next */
(cov_2k39uod53r().s[6]++, require("../ui/Badge"));
const _apiclient =
/* istanbul ignore next */
(cov_2k39uod53r().s[7]++, require("../../lib/api-client"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2k39uod53r().f[1]++;
  cov_2k39uod53r().s[8]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2k39uod53r().b[0][0]++;
    cov_2k39uod53r().s[9]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2k39uod53r().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[10]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[11]++, new WeakMap());
  /* istanbul ignore next */
  cov_2k39uod53r().s[12]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2k39uod53r().f[2]++;
    cov_2k39uod53r().s[13]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2k39uod53r().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2k39uod53r().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2k39uod53r().f[3]++;
  cov_2k39uod53r().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2k39uod53r().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2k39uod53r().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2k39uod53r().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2k39uod53r().b[2][0]++;
    cov_2k39uod53r().s[15]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2k39uod53r().b[2][1]++;
  }
  cov_2k39uod53r().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_2k39uod53r().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2k39uod53r().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2k39uod53r().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2k39uod53r().b[4][0]++;
    cov_2k39uod53r().s[17]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2k39uod53r().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[18]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2k39uod53r().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_2k39uod53r().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2k39uod53r().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2k39uod53r().b[6][0]++;
    cov_2k39uod53r().s[20]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2k39uod53r().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[21]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[22]++,
  /* istanbul ignore next */
  (cov_2k39uod53r().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2k39uod53r().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2k39uod53r().s[23]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2k39uod53r().s[24]++;
    if (
    /* istanbul ignore next */
    (cov_2k39uod53r().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2k39uod53r().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2k39uod53r().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2k39uod53r().s[25]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2k39uod53r().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2k39uod53r().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2k39uod53r().s[26]++;
      if (
      /* istanbul ignore next */
      (cov_2k39uod53r().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2k39uod53r().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2k39uod53r().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2k39uod53r().b[12][0]++;
        cov_2k39uod53r().s[27]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2k39uod53r().b[12][1]++;
        cov_2k39uod53r().s[28]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2k39uod53r().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2k39uod53r().s[29]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2k39uod53r().s[30]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2k39uod53r().b[14][0]++;
    cov_2k39uod53r().s[31]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2k39uod53r().b[14][1]++;
  }
  cov_2k39uod53r().s[32]++;
  return newObj;
}
function ProfileBadges({
  user
}) {
  /* istanbul ignore next */
  cov_2k39uod53r().f[4]++;
  const [badges, setBadges] =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[33]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[34]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_2k39uod53r().s[35]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_2k39uod53r().s[36]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2k39uod53r().f[5]++;
    cov_2k39uod53r().s[37]++;
    const fetchBadges = async () => {
      /* istanbul ignore next */
      cov_2k39uod53r().f[6]++;
      cov_2k39uod53r().s[38]++;
      try {
        /* istanbul ignore next */
        cov_2k39uod53r().s[39]++;
        setIsLoading(true);
        const userBadges =
        /* istanbul ignore next */
        (cov_2k39uod53r().s[40]++, await _apiclient.apiClient.get(`/users/${user.id}/badges`));
        /* istanbul ignore next */
        cov_2k39uod53r().s[41]++;
        setBadges(
        /* istanbul ignore next */
        (cov_2k39uod53r().b[15][0]++, userBadges) ||
        /* istanbul ignore next */
        (cov_2k39uod53r().b[15][1]++, []));
      } catch (error) {
        /* istanbul ignore next */
        cov_2k39uod53r().s[42]++;
        console.error('Failed to fetch badges:', error);
        /* istanbul ignore next */
        cov_2k39uod53r().s[43]++;
        setError('Failed to load badges');
      } finally {
        /* istanbul ignore next */
        cov_2k39uod53r().s[44]++;
        setIsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_2k39uod53r().s[45]++;
    fetchBadges();
  }, [user.id]);
  /* istanbul ignore next */
  cov_2k39uod53r().s[46]++;
  const getRarityColor = rarity => {
    /* istanbul ignore next */
    cov_2k39uod53r().f[7]++;
    cov_2k39uod53r().s[47]++;
    switch (rarity) {
      case 'legendary':
        /* istanbul ignore next */
        cov_2k39uod53r().b[16][0]++;
        cov_2k39uod53r().s[48]++;
        return 'bg-gradient-to-r from-yellow-400 to-orange-500 text-white';
      case 'epic':
        /* istanbul ignore next */
        cov_2k39uod53r().b[16][1]++;
        cov_2k39uod53r().s[49]++;
        return 'bg-gradient-to-r from-purple-500 to-pink-500 text-white';
      case 'rare':
        /* istanbul ignore next */
        cov_2k39uod53r().b[16][2]++;
        cov_2k39uod53r().s[50]++;
        return 'bg-gradient-to-r from-blue-500 to-cyan-500 text-white';
      case 'common':
        /* istanbul ignore next */
        cov_2k39uod53r().b[16][3]++;
        cov_2k39uod53r().s[51]++;
        return 'bg-muted text-light-text';
      default:
        /* istanbul ignore next */
        cov_2k39uod53r().b[16][4]++;
        cov_2k39uod53r().s[52]++;
        return 'bg-muted text-light-text';
    }
  };
  /* istanbul ignore next */
  cov_2k39uod53r().s[53]++;
  const getRarityIcon = rarity => {
    /* istanbul ignore next */
    cov_2k39uod53r().f[8]++;
    cov_2k39uod53r().s[54]++;
    switch (rarity) {
      case 'legendary':
        /* istanbul ignore next */
        cov_2k39uod53r().b[17][0]++;
        cov_2k39uod53r().s[55]++;
        return '👑';
      case 'epic':
        /* istanbul ignore next */
        cov_2k39uod53r().b[17][1]++;
        cov_2k39uod53r().s[56]++;
        return '💎';
      case 'rare':
        /* istanbul ignore next */
        cov_2k39uod53r().b[17][2]++;
        cov_2k39uod53r().s[57]++;
        return '⭐';
      case 'common':
        /* istanbul ignore next */
        cov_2k39uod53r().b[17][3]++;
        cov_2k39uod53r().s[58]++;
        return '🏅';
      default:
        /* istanbul ignore next */
        cov_2k39uod53r().b[17][4]++;
        cov_2k39uod53r().s[59]++;
        return '🏅';
    }
  };
  /* istanbul ignore next */
  cov_2k39uod53r().s[60]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_2k39uod53r().b[18][0]++;
    cov_2k39uod53r().s[61]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardTitle, {
          children: "Badges & Achievements"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center justify-center py-8",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-6 h-6 border-2 border-overlord-red border-t-transparent rounded-full animate-spin"
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_2k39uod53r().b[18][1]++;
  }
  cov_2k39uod53r().s[62]++;
  if (error) {
    /* istanbul ignore next */
    cov_2k39uod53r().b[19][0]++;
    cov_2k39uod53r().s[63]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardTitle, {
          children: "Badges & Achievements"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-center py-8",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-rejected-red text-sm",
            children: error
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_2k39uod53r().b[19][1]++;
  }
  cov_2k39uod53r().s[64]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardTitle, {
        children: "Badges & Achievements"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
      children: badges.length === 0 ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_2k39uod53r().b[20][0]++, (0, _jsxruntime.jsxs)("div", {
        className: "text-center py-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-4xl mb-4",
          children: "\uD83C\uDF96️"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light text-sm mb-2",
          children: "No badges earned yet"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-xs text-muted-light",
          children: "Complete tasks and contribute to earn recognition from the Robot Overlord."
        })]
      })) :
      /* istanbul ignore next */
      (/*#__PURE__*/cov_2k39uod53r().b[20][1]++, (0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid grid-cols-4 gap-2 text-center",
          children: ['legendary', 'epic', 'rare', 'common'].map(rarity => {
            /* istanbul ignore next */
            cov_2k39uod53r().f[9]++;
            const count =
            /* istanbul ignore next */
            (cov_2k39uod53r().s[65]++, badges.filter(b => {
              /* istanbul ignore next */
              cov_2k39uod53r().f[10]++;
              cov_2k39uod53r().s[66]++;
              return b.rarity === rarity;
            }).length);
            /* istanbul ignore next */
            cov_2k39uod53r().s[67]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "p-2 bg-muted/20 rounded",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-lg",
                children: getRarityIcon(rarity)
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-sm font-medium text-light-text",
                children: count
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-muted-light capitalize",
                children: rarity
              })]
            }, rarity);
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid grid-cols-1 sm:grid-cols-2 gap-3",
          children: badges.map(badge => {
            /* istanbul ignore next */
            cov_2k39uod53r().f[11]++;
            cov_2k39uod53r().s[68]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "p-3 bg-muted/20 rounded-lg border hover:bg-muted/30 transition-colors",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-start gap-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-2xl flex-shrink-0",
                  children: badge.icon_url ?
                  /* istanbul ignore next */
                  (/*#__PURE__*/cov_2k39uod53r().b[21][0]++, (0, _jsxruntime.jsx)("img", {
                    src: badge.icon_url,
                    alt: badge.name,
                    className: "w-8 h-8"
                  })) :
                  /* istanbul ignore next */
                  (cov_2k39uod53r().b[21][1]++, getRarityIcon(badge.rarity))
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex-1 min-w-0",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center gap-2 mb-1",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                      className: "font-medium text-light-text text-sm truncate",
                      children: badge.name
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Badge.Badge, {
                      className: `text-xs ${getRarityColor(badge.rarity)}`,
                      children: badge.rarity
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                    className: "text-xs text-muted-light mb-2 line-clamp-2",
                    children: badge.description
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
                    className: "text-xs text-muted-light",
                    children: ["Earned: ", new Date(badge.earned_at).toLocaleDateString()]
                  })]
                })]
              })
            }, badge.id);
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-center pt-4 border-t border-muted/30",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-xs text-muted-light",
            children: "Keep contributing to unlock more badges and climb the loyalty ranks!"
          })
        })]
      }))
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,