{"version":3,"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/feed/page.tsx"],"sourcesContent":["/**\n * Main content feed page for The Robot Overlord\n * Displays personalized feed of posts and topics\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { LazyContentFeed, LazyPersonalizedRecommendations } from '@/components/lazy/LazyComponents';\nimport { ContentStatusIndicators } from '@/components/feed/ContentStatusIndicators';\nimport { FeedFilters } from '@/components/feed/FeedFilters';\nimport { DashboardLayout } from '@/components/layout/DashboardLayout';\nimport { useRealTimeUpdates } from '@/hooks/useRealTimeUpdates';\nimport { Button } from '@/components/ui/Button';\nimport { Card, CardContent } from '@/components/ui/Card';\nimport { LoadingSpinner, LoadingState } from '@/components/ui/LoadingSpinner';\nimport { FeedPostSkeleton, StatsCardSkeleton } from '@/components/ui/Skeleton';\nimport { EmptyFeedState } from '@/components/ui/EmptyState';\nimport { AsyncErrorBoundary, ComponentErrorBoundary } from '@/components/ui/ErrorBoundary';\nimport { HoverLift, FadeIn } from '@/components/ui/MicroInteractions';\nimport { useAppStore } from '@/stores/appStore';\nimport { postsService, topicsService } from '@/services';\nimport { Post } from '@/types/posts';\nimport { Topic } from '@/types/topics';\n\ninterface FeedItem {\n  id: string;\n  type: 'post' | 'topic';\n  data: Post | Topic;\n  timestamp: string;\n  relevanceScore?: number;\n}\n\ninterface FeedFilters {\n  contentType: 'all' | 'posts' | 'topics';\n  timeRange: 'day' | 'week' | 'month' | 'all';\n  categories: string[];\n  sortBy: 'newest' | 'popular' | 'trending' | 'personalized';\n  showFollowing: boolean;\n}\n\nexport default function FeedContent() {\n  const { addNotification } = useAppStore();\n  const [feedItems, setFeedItems] = useState<FeedItem[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedFilter, setSelectedFilter] = useState<'all' | 'posts' | 'topics'>('all');\n  const [sortBy, setSortBy] = useState<'recent' | 'popular' | 'trending'>('recent');\n  \n  // Enable real-time updates\n  const { connected, isRealTimeEnabled } = useRealTimeUpdates();\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMore, setHasMore] = useState(true);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const [filters, setFilters] = useState<FeedFilters>({\n    contentType: 'all',\n    timeRange: 'week',\n    categories: [],\n    sortBy: 'personalized',\n    showFollowing: false,\n  });\n\n  // Load feed content\n  const loadFeed = async (page: number = 1, append: boolean = false) => {\n    try {\n      if (page === 1) {\n        setIsLoading(true);\n        setError(null);\n      } else {\n        setIsLoadingMore(true);\n      }\n\n      const feedData: FeedItem[] = [];\n\n      // Load posts if needed\n      if (filters.contentType === 'all' || filters.contentType === 'posts') {\n        const postsResponse = await postsService.getFeed({\n          page,\n          limit: 10,\n          timeRange: filters.timeRange,\n          categories: filters.categories,\n          sortBy: filters.sortBy,\n          following: filters.showFollowing,\n        });\n\n        if (postsResponse.data) {\n          const postItems: FeedItem[] = postsResponse.data.map((post: Post) => ({\n            id: `post-${post.id}`,\n            type: 'post' as const,\n            data: post,\n            timestamp: post.createdAt,\n            relevanceScore: post.score,\n          }));\n          feedData.push(...postItems);\n        }\n      }\n\n      // Load topics if needed\n      if (filters.contentType === 'all' || filters.contentType === 'topics') {\n        const topicsResponse = await topicsService.getFeed({\n          page,\n          limit: 5,\n          timeRange: filters.timeRange,\n          categories: filters.categories,\n          sortBy: filters.sortBy,\n        });\n\n        if (topicsResponse.data) {\n          const topicItems: FeedItem[] = topicsResponse.data.map((topic: any) => ({\n            id: `topic-${topic.id}`,\n            type: 'topic' as const,\n            data: topic as Topic,\n            timestamp: topic.createdAt,\n            relevanceScore: topic.postCount,\n          }));\n          feedData.push(...topicItems);\n        }\n      }\n\n      // Sort combined feed by timestamp or relevance\n      const sortedFeed = feedData.sort((a, b) => {\n        if (filters.sortBy === 'newest') {\n          return new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime();\n        } else if (filters.sortBy === 'popular' || filters.sortBy === 'trending') {\n          return (b.relevanceScore || 0) - (a.relevanceScore || 0);\n        } else {\n          // Personalized - mix of recency and relevance\n          const aScore = (a.relevanceScore || 0) * 0.7 + (Date.now() - new Date(a.timestamp).getTime()) * 0.3;\n          const bScore = (b.relevanceScore || 0) * 0.7 + (Date.now() - new Date(b.timestamp).getTime()) * 0.3;\n          return bScore - aScore;\n        }\n      });\n\n      if (append) {\n        setFeedItems(prev => [...prev, ...sortedFeed]);\n      } else {\n        setFeedItems(sortedFeed);\n      }\n\n      setHasMore(sortedFeed.length >= 15); // Assume more if we got a full page\n      setCurrentPage(page);\n\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load feed';\n      setError(errorMessage);\n      addNotification({\n        type: 'error',\n        title: 'Feed Error',\n        message: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n      setIsLoadingMore(false);\n    }\n  };\n\n  // Initial load\n  useEffect(() => {\n    loadFeed(1);\n  }, [filters]);\n\n  // Handle filter changes\n  const handleFiltersChange = (newFilters: Partial<FeedFilters>) => {\n    setFilters(prev => ({ ...prev, ...newFilters }));\n    setCurrentPage(1);\n  };\n\n  // Load more content\n  const handleLoadMore = () => {\n    if (!isLoadingMore && hasMore) {\n      loadFeed(currentPage + 1, true);\n    }\n  };\n\n  // Refresh feed\n  const handleRefresh = () => {\n    setCurrentPage(1);\n    loadFeed(1);\n  };\n\n  return (\n    <DashboardLayout>\n      <div className=\"space-y-6\">\n      {/* Real-time Status Indicator */}\n      <div className=\"flex items-center space-x-2 text-sm\">\n        <div className={`w-2 h-2 rounded-full ${connected ? 'bg-approved-green' : 'bg-muted'}`}></div>\n        <span className=\"text-muted-light\">\n          {connected ? 'Live updates enabled' : 'Offline mode'}\n        </span>\n      </div>\n\n      {/* Simple Filter Buttons */}\n      <div className=\"flex items-center space-x-2\">\n        <span className=\"text-sm font-medium text-light-text\">Show:</span>\n        <div className=\"flex space-x-1\">\n          {[\n            { value: 'all', label: 'All' },\n            { value: 'posts', label: 'Posts' },\n            { value: 'topics', label: 'Topics' },\n          ].map((filter) => (\n            <Button\n              key={filter.value}\n              variant={selectedFilter === filter.value ? 'primary' : 'ghost'}\n              size=\"sm\"\n              onClick={() => setSelectedFilter(filter.value as any)}\n            >\n              {filter.label}\n            </Button>\n          ))}\n        </div>\n      </div>\n\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-light-text\">Content Feed</h1>\n          <p className=\"text-muted-light mt-1\">\n            Discover the latest posts and topics tailored for you\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <Button\n            variant=\"ghost\"\n            onClick={handleRefresh}\n            disabled={isLoading}\n          >\n            ðŸ”„ Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Quick Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card variant=\"bordered\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-overlord-red mb-1\">\n              {feedItems.filter(item => item.type === 'post').length}\n            </div>\n            <div className=\"text-sm text-muted-light\">Posts</div>\n          </CardContent>\n        </Card>\n        <Card variant=\"bordered\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-overlord-red mb-1\">\n              {feedItems.filter(item => item.type === 'topic').length}\n            </div>\n            <div className=\"text-sm text-muted-light\">Topics</div>\n          </CardContent>\n        </Card>\n        <Card variant=\"bordered\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-overlord-red mb-1\">\n              {filters.categories.length || 'All'}\n            </div>\n            <div className=\"text-sm text-muted-light\">Categories</div>\n          </CardContent>\n        </Card>\n        <Card variant=\"bordered\">\n          <CardContent className=\"p-4 text-center\">\n            <div className=\"text-2xl font-bold text-overlord-red mb-1\">\n              {filters.timeRange === 'day' ? '24h' : \n               filters.timeRange === 'week' ? '7d' : \n               filters.timeRange === 'month' ? '30d' : 'All'}\n            </div>\n            <div className=\"text-sm text-muted-light\">Time Range</div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Filters Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <FeedFilters\n            filters={filters}\n            onFiltersChange={handleFiltersChange}\n            totalItems={feedItems.length}\n          />\n        </div>\n\n        {/* Feed Content */}\n        <div className=\"lg:col-span-2\">\n          <AsyncErrorBoundary onRetry={handleRefresh}>\n            <LoadingState\n            isLoading={isLoading}\n            error={error}\n            useSkeleton={true}\n            skeleton={\n              <div className=\"space-y-6\">\n                {Array.from({ length: 3 }).map((_, index) => (\n                  <FeedPostSkeleton key={index} />\n                ))}\n              </div>\n            }\n            loadingComponent={\n              <div className=\"space-y-6\">\n                {[...Array(5)].map((_, i) => (\n                  <Card key={i} variant=\"bordered\" className=\"animate-pulse\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-start space-x-4\">\n                        <div className=\"w-12 h-12 bg-muted/20 rounded-full\"></div>\n                        <div className=\"flex-1\">\n                          <div className=\"h-6 bg-muted/20 rounded w-3/4 mb-2\"></div>\n                          <div className=\"h-4 bg-muted/20 rounded w-full mb-2\"></div>\n                          <div className=\"h-4 bg-muted/20 rounded w-2/3 mb-4\"></div>\n                          <div className=\"flex justify-between\">\n                            <div className=\"flex space-x-4\">\n                              <div className=\"h-4 bg-muted/20 rounded w-16\"></div>\n                              <div className=\"h-4 bg-muted/20 rounded w-20\"></div>\n                            </div>\n                            <div className=\"h-4 bg-muted/20 rounded w-24\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            }\n          >\n            {feedItems.length > 0 ? (\n              <LazyContentFeed\n                items={feedItems}\n                onLoadMore={handleLoadMore}\n                hasMore={hasMore}\n                isLoadingMore={isLoadingMore}\n              />\n            ) : (\n              <EmptyFeedState onRefresh={handleRefresh} />\n            )}\n          </LoadingState>\n          </AsyncErrorBoundary>\n        </div>\n\n        {/* Recommendations Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <ComponentErrorBoundary>\n            <LazyPersonalizedRecommendations\n              limit={6}\n              categories={filters.categories}\n              className=\"sticky top-6\"\n            />\n          </ComponentErrorBoundary>\n        </div>\n      </div>\n      </div>\n    </DashboardLayout>\n  );\n}\n"],"names":["FeedContent","addNotification","useAppStore","feedItems","setFeedItems","useState","isLoading","setIsLoading","error","setError","selectedFilter","setSelectedFilter","sortBy","setSortBy","connected","isRealTimeEnabled","useRealTimeUpdates","currentPage","setCurrentPage","hasMore","setHasMore","isLoadingMore","setIsLoadingMore","filters","setFilters","contentType","timeRange","categories","showFollowing","loadFeed","page","append","feedData","postsResponse","postsService","getFeed","limit","following","data","postItems","map","post","id","type","timestamp","createdAt","relevanceScore","score","push","topicsResponse","topicsService","topicItems","topic","postCount","sortedFeed","sort","a","b","Date","getTime","aScore","now","bScore","prev","length","err","errorMessage","Error","message","title","useEffect","handleFiltersChange","newFilters","handleLoadMore","handleRefresh","DashboardLayout","div","className","span","value","label","filter","Button","variant","size","onClick","h1","p","disabled","Card","CardContent","item","FeedFilters","onFiltersChange","totalItems","AsyncErrorBoundary","onRetry","LoadingState","useSkeleton","skeleton","Array","from","_","index","FeedPostSkeleton","loadingComponent","i","LazyContentFeed","items","onLoadMore","EmptyFeedState","onRefresh","ComponentErrorBoundary","LazyPersonalizedRecommendations"],"mappings":"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"}