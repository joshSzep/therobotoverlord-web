55a85b51ddfb7a3054b15abb67770fdf
/**
 * Post reporting component for The Robot Overlord
 * Allows users to report posts for moderation review
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_3raklsrev() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/posts/PostReporting.tsx";
  var hash = "0ef28dc2e0a2a881fcaf8748023b2adbfc40c51d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/posts/PostReporting.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 29
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 14
        },
        end: {
          line: 17,
          column: 35
        }
      },
      "6": {
        start: {
          line: 18,
          column: 16
        },
        end: {
          line: 18,
          column: 39
        }
      },
      "7": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 50
        }
      },
      "8": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 43
        }
      },
      "9": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "10": {
        start: {
          line: 22,
          column: 39
        },
        end: {
          line: 22,
          column: 51
        }
      },
      "11": {
        start: {
          line: 23,
          column: 28
        },
        end: {
          line: 23,
          column: 41
        }
      },
      "12": {
        start: {
          line: 24,
          column: 27
        },
        end: {
          line: 24,
          column: 40
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 20
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 66
        }
      },
      "15": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "17": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "18": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 10
        }
      },
      "19": {
        start: {
          line: 38,
          column: 16
        },
        end: {
          line: 38,
          column: 53
        }
      },
      "20": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 30
        }
      },
      "22": {
        start: {
          line: 42,
          column: 17
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "23": {
        start: {
          line: 45,
          column: 32
        },
        end: {
          line: 45,
          column: 88
        }
      },
      "24": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "25": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 54,
          column: 9
        }
      },
      "26": {
        start: {
          line: 48,
          column: 23
        },
        end: {
          line: 48,
          column: 95
        }
      },
      "27": {
        start: {
          line: 49,
          column: 12
        },
        end: {
          line: 53,
          column: 13
        }
      },
      "28": {
        start: {
          line: 50,
          column: 16
        },
        end: {
          line: 50,
          column: 57
        }
      },
      "29": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 39
        }
      },
      "30": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 25
        }
      },
      "31": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "32": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 31
        }
      },
      "33": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 18
        }
      },
      "34": {
        start: {
          line: 62,
          column: 23
        },
        end: {
          line: 123,
          column: 1
        }
      },
      "35": {
        start: {
          line: 125,
          column: 32
        },
        end: {
          line: 125,
          column: 60
        }
      },
      "36": {
        start: {
          line: 126,
          column: 48
        },
        end: {
          line: 126,
          column: 72
        }
      },
      "37": {
        start: {
          line: 127,
          column: 46
        },
        end: {
          line: 127,
          column: 70
        }
      },
      "38": {
        start: {
          line: 128,
          column: 44
        },
        end: {
          line: 128,
          column: 71
        }
      },
      "39": {
        start: {
          line: 129,
          column: 36
        },
        end: {
          line: 129,
          column: 63
        }
      },
      "40": {
        start: {
          line: 130,
          column: 31
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "41": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "42": {
        start: {
          line: 132,
          column: 12
        },
        end: {
          line: 136,
          column: 15
        }
      },
      "43": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 19
        }
      },
      "44": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "45": {
        start: {
          line: 140,
          column: 12
        },
        end: {
          line: 144,
          column: 15
        }
      },
      "46": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 19
        }
      },
      "47": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 147,
          column: 30
        }
      },
      "48": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 178,
          column: 9
        }
      },
      "49": {
        start: {
          line: 149,
          column: 39
        },
        end: {
          line: 149,
          column: 88
        }
      },
      "50": {
        start: {
          line: 149,
          column: 64
        },
        end: {
          line: 149,
          column: 87
        }
      },
      "51": {
        start: {
          line: 150,
          column: 31
        },
        end: {
          line: 153,
          column: 13
        }
      },
      "52": {
        start: {
          line: 154,
          column: 29
        },
        end: {
          line: 154,
          column: 88
        }
      },
      "53": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 168,
          column: 13
        }
      },
      "54": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 160,
          column: 19
        }
      },
      "55": {
        start: {
          line: 162,
          column: 16
        },
        end: {
          line: 162,
          column: 38
        }
      },
      "56": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 163,
          column: 37
        }
      },
      "57": {
        start: {
          line: 164,
          column: 16
        },
        end: {
          line: 164,
          column: 35
        }
      },
      "58": {
        start: {
          line: 165,
          column: 16
        },
        end: {
          line: 165,
          column: 38
        }
      },
      "59": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 167,
          column: 59
        }
      },
      "60": {
        start: {
          line: 170,
          column: 33
        },
        end: {
          line: 170,
          column: 95
        }
      },
      "61": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 175,
          column: 15
        }
      },
      "62": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 177,
          column: 35
        }
      },
      "63": {
        start: {
          line: 180,
          column: 29
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "64": {
        start: {
          line: 181,
          column: 8
        },
        end: {
          line: 190,
          column: 9
        }
      },
      "65": {
        start: {
          line: 183,
          column: 16
        },
        end: {
          line: 183,
          column: 84
        }
      },
      "66": {
        start: {
          line: 185,
          column: 16
        },
        end: {
          line: 185,
          column: 87
        }
      },
      "67": {
        start: {
          line: 187,
          column: 16
        },
        end: {
          line: 187,
          column: 69
        }
      },
      "68": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 68
        }
      },
      "69": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "70": {
        start: {
          line: 193,
          column: 8
        },
        end: {
          line: 199,
          column: 11
        }
      },
      "71": {
        start: {
          line: 196,
          column: 25
        },
        end: {
          line: 196,
          column: 42
        }
      },
      "72": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 379,
          column: 7
        }
      },
      "73": {
        start: {
          line: 218,
          column: 45
        },
        end: {
          line: 218,
          column: 63
        }
      },
      "74": {
        start: {
          line: 251,
          column: 85
        },
        end: {
          line: 283,
          column: 49
        }
      },
      "75": {
        start: {
          line: 261,
          column: 67
        },
        end: {
          line: 261,
          column: 100
        }
      },
      "76": {
        start: {
          line: 298,
          column: 47
        },
        end: {
          line: 298,
          column: 79
        }
      },
      "77": {
        start: {
          line: 356,
          column: 45
        },
        end: {
          line: 356,
          column: 63
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 21,
            column: 9
          },
          end: {
            line: 21,
            column: 33
          }
        },
        loc: {
          start: {
            line: 21,
            column: 47
          },
          end: {
            line: 28,
            column: 1
          }
        },
        line: 21
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 39
          },
          end: {
            line: 25,
            column: 40
          }
        },
        loc: {
          start: {
            line: 25,
            column: 61
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 34
          }
        },
        loc: {
          start: {
            line: 29,
            column: 53
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 29
      },
      "4": {
        name: "PostReporting",
        decl: {
          start: {
            line: 124,
            column: 9
          },
          end: {
            line: 124,
            column: 22
          }
        },
        loc: {
          start: {
            line: 124,
            column: 81
          },
          end: {
            line: 380,
            column: 1
          }
        },
        line: 124
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 130,
            column: 31
          },
          end: {
            line: 130,
            column: 32
          }
        },
        loc: {
          start: {
            line: 130,
            column: 41
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 130
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 149,
            column: 59
          },
          end: {
            line: 149,
            column: 60
          }
        },
        loc: {
          start: {
            line: 149,
            column: 64
          },
          end: {
            line: 149,
            column: 87
          }
        },
        line: 149
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 180,
            column: 29
          },
          end: {
            line: 180,
            column: 30
          }
        },
        loc: {
          start: {
            line: 180,
            column: 41
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 180
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 196,
            column: 21
          },
          end: {
            line: 196,
            column: 22
          }
        },
        loc: {
          start: {
            line: 196,
            column: 25
          },
          end: {
            line: 196,
            column: 42
          }
        },
        line: 196
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 218,
            column: 41
          },
          end: {
            line: 218,
            column: 42
          }
        },
        loc: {
          start: {
            line: 218,
            column: 45
          },
          end: {
            line: 218,
            column: 63
          }
        },
        line: 218
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 251,
            column: 61
          },
          end: {
            line: 251,
            column: 62
          }
        },
        loc: {
          start: {
            line: 251,
            column: 85
          },
          end: {
            line: 283,
            column: 49
          }
        },
        line: 251
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 261,
            column: 62
          },
          end: {
            line: 261,
            column: 63
          }
        },
        loc: {
          start: {
            line: 261,
            column: 67
          },
          end: {
            line: 261,
            column: 100
          }
        },
        line: 261
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 298,
            column: 42
          },
          end: {
            line: 298,
            column: 43
          }
        },
        loc: {
          start: {
            line: 298,
            column: 47
          },
          end: {
            line: 298,
            column: 79
          }
        },
        line: 298
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 356,
            column: 41
          },
          end: {
            line: 356,
            column: 42
          }
        },
        loc: {
          start: {
            line: 356,
            column: 45
          },
          end: {
            line: 356,
            column: 63
          }
        },
        line: 356
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 26,
            column: 15
          },
          end: {
            line: 26,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 26,
            column: 29
          },
          end: {
            line: 26,
            column: 45
          }
        }, {
          start: {
            line: 26,
            column: 48
          },
          end: {
            line: 26,
            column: 65
          }
        }],
        line: 26
      },
      "2": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 20
          }
        }, {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 27
          }
        }, {
          start: {
            line: 30,
            column: 31
          },
          end: {
            line: 30,
            column: 45
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "5": {
        loc: {
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 33,
            column: 8
          },
          end: {
            line: 33,
            column: 20
          }
        }, {
          start: {
            line: 33,
            column: 24
          },
          end: {
            line: 33,
            column: 47
          }
        }, {
          start: {
            line: 33,
            column: 51
          },
          end: {
            line: 33,
            column: 76
          }
        }],
        line: 33
      },
      "6": {
        loc: {
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 39,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 39
      },
      "7": {
        loc: {
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 39,
            column: 8
          },
          end: {
            line: 39,
            column: 13
          }
        }, {
          start: {
            line: 39,
            column: 17
          },
          end: {
            line: 39,
            column: 31
          }
        }],
        line: 39
      },
      "8": {
        loc: {
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 32
          },
          end: {
            line: 45,
            column: 53
          }
        }, {
          start: {
            line: 45,
            column: 57
          },
          end: {
            line: 45,
            column: 88
          }
        }],
        line: 45
      },
      "9": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 54,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "10": {
        loc: {
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 12
          },
          end: {
            line: 47,
            column: 29
          }
        }, {
          start: {
            line: 47,
            column: 33
          },
          end: {
            line: 47,
            column: 79
          }
        }],
        line: 47
      },
      "11": {
        loc: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 48,
            column: 47
          },
          end: {
            line: 48,
            column: 88
          }
        }, {
          start: {
            line: 48,
            column: 91
          },
          end: {
            line: 48,
            column: 95
          }
        }],
        line: 48
      },
      "12": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 53,
            column: 13
          }
        }, {
          start: {
            line: 51,
            column: 19
          },
          end: {
            line: 53,
            column: 13
          }
        }],
        line: 49
      },
      "13": {
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 49,
            column: 20
          }
        }, {
          start: {
            line: 49,
            column: 25
          },
          end: {
            line: 49,
            column: 33
          }
        }, {
          start: {
            line: 49,
            column: 37
          },
          end: {
            line: 49,
            column: 45
          }
        }],
        line: 49
      },
      "14": {
        loc: {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 59,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 57
      },
      "15": {
        loc: {
          start: {
            line: 124,
            column: 63
          },
          end: {
            line: 124,
            column: 77
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 124,
            column: 75
          },
          end: {
            line: 124,
            column: 77
          }
        }],
        line: 124
      },
      "16": {
        loc: {
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 131,
            column: 8
          },
          end: {
            line: 138,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 131
      },
      "17": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 146,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "18": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 63
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 38
          }
        }, {
          start: {
            line: 139,
            column: 42
          },
          end: {
            line: 139,
            column: 63
          }
        }],
        line: 139
      },
      "19": {
        loc: {
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 86
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 152,
            column: 25
          },
          end: {
            line: 152,
            column: 45
          }
        }, {
          start: {
            line: 152,
            column: 49
          },
          end: {
            line: 152,
            column: 80
          }
        }, {
          start: {
            line: 152,
            column: 84
          },
          end: {
            line: 152,
            column: 86
          }
        }],
        line: 152
      },
      "20": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 168,
            column: 13
          }
        }, {
          start: {
            line: 166,
            column: 19
          },
          end: {
            line: 168,
            column: 13
          }
        }],
        line: 155
      },
      "21": {
        loc: {
          start: {
            line: 170,
            column: 33
          },
          end: {
            line: 170,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 56
          },
          end: {
            line: 170,
            column: 67
          }
        }, {
          start: {
            line: 170,
            column: 70
          },
          end: {
            line: 170,
            column: 95
          }
        }],
        line: 170
      },
      "22": {
        loc: {
          start: {
            line: 181,
            column: 8
          },
          end: {
            line: 190,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 183,
            column: 84
          }
        }, {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 185,
            column: 87
          }
        }, {
          start: {
            line: 186,
            column: 12
          },
          end: {
            line: 187,
            column: 69
          }
        }, {
          start: {
            line: 188,
            column: 12
          },
          end: {
            line: 189,
            column: 68
          }
        }],
        line: 181
      },
      "23": {
        loc: {
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 192,
            column: 4
          },
          end: {
            line: 200,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 192
      },
      "24": {
        loc: {
          start: {
            line: 252,
            column: 115
          },
          end: {
            line: 252,
            column: 222
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 252,
            column: 146
          },
          end: {
            line: 252,
            column: 186
          }
        }, {
          start: {
            line: 252,
            column: 189
          },
          end: {
            line: 252,
            column: 222
          }
        }],
        line: 252
      },
      "25": {
        loc: {
          start: {
            line: 293,
            column: 36
          },
          end: {
            line: 293,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 293,
            column: 36
          },
          end: {
            line: 293,
            column: 62
          }
        }, {
          start: {
            line: 293,
            column: 66
          },
          end: {
            line: 293,
            column: 69
          }
        }],
        line: 293
      },
      "26": {
        loc: {
          start: {
            line: 299,
            column: 45
          },
          end: {
            line: 299,
            column: 179
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 299,
            column: 74
          },
          end: {
            line: 299,
            column: 114
          }
        }, {
          start: {
            line: 299,
            column: 117
          },
          end: {
            line: 299,
            column: 179
          }
        }],
        line: 299
      },
      "27": {
        loc: {
          start: {
            line: 363,
            column: 42
          },
          end: {
            line: 363,
            column: 128
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 363,
            column: 42
          },
          end: {
            line: 363,
            column: 57
          }
        }, {
          start: {
            line: 363,
            column: 61
          },
          end: {
            line: 363,
            column: 73
          }
        }, {
          start: {
            line: 363,
            column: 77
          },
          end: {
            line: 363,
            column: 103
          }
        }, {
          start: {
            line: 363,
            column: 107
          },
          end: {
            line: 363,
            column: 128
          }
        }],
        line: 363
      },
      "28": {
        loc: {
          start: {
            line: 365,
            column: 42
          },
          end: {
            line: 372,
            column: 52
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 365,
            column: 71
          },
          end: {
            line: 372,
            column: 34
          }
        }, {
          start: {
            line: 372,
            column: 37
          },
          end: {
            line: 372,
            column: 52
          }
        }],
        line: 365
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0, 0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0, 0, 0],
      "28": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/posts/PostReporting.tsx"],
      sourcesContent: ["/**\n * Post reporting component for The Robot Overlord\n * Allows users to report posts for moderation review\n */\n\n'use client';\n\nimport React, { useState } from 'react';\nimport { Card, CardContent, CardHeader } from '@/components/ui/Card';\nimport { Button } from '@/components/ui/Button';\nimport { useAppStore } from '@/stores/appStore';\nimport { postsService } from '@/services';\n\ninterface PostReportingProps {\n  postId: string;\n  postTitle: string;\n  onReportSubmitted?: () => void;\n  className?: string;\n}\n\ninterface ReportReason {\n  id: string;\n  label: string;\n  description: string;\n  severity: 'low' | 'medium' | 'high';\n}\n\nconst REPORT_REASONS: ReportReason[] = [\n  {\n    id: 'spam',\n    label: 'Spam or Promotional Content',\n    description: 'Unwanted commercial content or repetitive posts',\n    severity: 'medium'\n  },\n  {\n    id: 'harassment',\n    label: 'Harassment or Bullying',\n    description: 'Targeting individuals with harmful content',\n    severity: 'high'\n  },\n  {\n    id: 'hate_speech',\n    label: 'Hate Speech',\n    description: 'Content promoting hatred against groups or individuals',\n    severity: 'high'\n  },\n  {\n    id: 'misinformation',\n    label: 'Misinformation',\n    description: 'False or misleading information',\n    severity: 'medium'\n  },\n  {\n    id: 'inappropriate_content',\n    label: 'Inappropriate Content',\n    description: 'Content not suitable for the community',\n    severity: 'medium'\n  },\n  {\n    id: 'copyright',\n    label: 'Copyright Violation',\n    description: 'Unauthorized use of copyrighted material',\n    severity: 'medium'\n  },\n  {\n    id: 'off_topic',\n    label: 'Off-Topic',\n    description: 'Content not relevant to the topic or community',\n    severity: 'low'\n  },\n  {\n    id: 'violence',\n    label: 'Violence or Threats',\n    description: 'Content promoting or threatening violence',\n    severity: 'high'\n  },\n  {\n    id: 'privacy',\n    label: 'Privacy Violation',\n    description: 'Sharing personal information without consent',\n    severity: 'high'\n  },\n  {\n    id: 'other',\n    label: 'Other',\n    description: 'Other violation not listed above',\n    severity: 'medium'\n  }\n];\n\nexport function PostReporting({\n  postId,\n  postTitle,\n  onReportSubmitted,\n  className = '',\n}: PostReportingProps) {\n  const { addNotification } = useAppStore();\n  const [selectedReason, setSelectedReason] = useState<string>('');\n  const [customDetails, setCustomDetails] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showForm, setShowForm] = useState(false);\n\n  const handleSubmitReport = async () => {\n    if (!selectedReason) {\n      addNotification({\n        type: 'warning',\n        title: 'Missing Information',\n        message: 'Please select a reason for reporting this post',\n      });\n      return;\n    }\n\n    if (selectedReason === 'other' && !customDetails.trim()) {\n      addNotification({\n        type: 'warning',\n        title: 'Missing Details',\n        message: 'Please provide details for the \"Other\" reason',\n      });\n      return;\n    }\n\n    setIsSubmitting(true);\n\n    try {\n      const selectedReasonData = REPORT_REASONS.find(r => r.id === selectedReason);\n      const reportData = {\n        reason: selectedReason,\n        details: customDetails.trim() || selectedReasonData?.description || '',\n      };\n\n      const response = await postsService.reportPost(postId, reportData);\n\n      if (response.success) {\n        addNotification({\n          type: 'success',\n          title: 'Report Submitted',\n          message: 'Thank you for reporting this post. Our moderators will review it shortly.',\n        });\n\n        // Reset form\n        setSelectedReason('');\n        setCustomDetails('');\n        setShowForm(false);\n        \n        onReportSubmitted?.();\n      } else {\n        throw new Error('Failed to submit report');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to submit report';\n      addNotification({\n        type: 'error',\n        title: 'Report Error',\n        message: errorMessage,\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'high':\n        return 'border-rejected-red/30 bg-rejected-red/5 text-rejected-red';\n      case 'medium':\n        return 'border-warning-amber/30 bg-warning-amber/5 text-warning-amber';\n      case 'low':\n        return 'border-muted/30 bg-muted/5 text-muted-light';\n      default:\n        return 'border-muted/30 bg-muted/5 text-light-text';\n    }\n  };\n\n  if (!showForm) {\n    return (\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={() => setShowForm(true)}\n        className={`text-warning-amber hover:bg-warning-amber/10 ${className}`}\n      >\n        \uD83D\uDEA9 Report Post\n      </Button>\n    );\n  }\n\n  return (\n    <Card variant=\"bordered\" className={`border-warning-amber/30 ${className}`}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-bold text-light-text\">Report Post</h3>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setShowForm(false)}\n            disabled={isSubmitting}\n          >\n            \u2715\n          </Button>\n        </div>\n        <p className=\"text-sm text-muted-light\">\n          Reporting: <span className=\"text-light-text font-medium\">\"{postTitle}\"</span>\n        </p>\n      </CardHeader>\n\n      <CardContent className=\"space-y-4\">\n        {/* Report Reasons */}\n        <div>\n          <label className=\"block text-sm font-medium text-light-text mb-3\">\n            Why are you reporting this post? *\n          </label>\n          <div className=\"space-y-2\">\n            {REPORT_REASONS.map((reason) => (\n              <label\n                key={reason.id}\n                className={`block p-3 rounded-lg border cursor-pointer transition-colors ${\n                  selectedReason === reason.id\n                    ? 'border-overlord-red bg-overlord-red/10'\n                    : getSeverityColor(reason.severity)\n                } hover:bg-opacity-75`}\n              >\n                <div className=\"flex items-start space-x-3\">\n                  <input\n                    type=\"radio\"\n                    name=\"reportReason\"\n                    value={reason.id}\n                    checked={selectedReason === reason.id}\n                    onChange={(e) => setSelectedReason(e.target.value)}\n                    className=\"mt-1 w-4 h-4 text-overlord-red bg-dark-bg border-muted/30 focus:ring-overlord-red focus:ring-2\"\n                  />\n                  <div className=\"flex-1\">\n                    <div className=\"font-medium text-light-text mb-1\">\n                      {reason.label}\n                    </div>\n                    <div className=\"text-sm text-muted-light\">\n                      {reason.description}\n                    </div>\n                  </div>\n                  <div className=\"text-xs px-2 py-1 rounded bg-muted/20 text-muted-light\">\n                    {reason.severity}\n                  </div>\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n\n        {/* Additional Details */}\n        <div>\n          <label className=\"block text-sm font-medium text-light-text mb-2\">\n            Additional Details {selectedReason === 'other' && '*'}\n          </label>\n          <textarea\n            value={customDetails}\n            onChange={(e) => setCustomDetails(e.target.value)}\n            placeholder={\n              selectedReason === 'other'\n                ? 'Please describe the issue in detail...'\n                : 'Optional: Provide additional context or specific examples...'\n            }\n            className=\"w-full px-3 py-2 bg-dark-bg border border-muted/30 rounded-md text-light-text placeholder-muted-light focus:outline-none focus:ring-2 focus:ring-overlord-red focus:border-transparent resize-none\"\n            rows={4}\n            maxLength={500}\n          />\n          <div className=\"text-xs text-muted-light mt-1\">\n            {customDetails.length}/500 characters\n          </div>\n        </div>\n\n        {/* Warning Notice */}\n        <div className=\"bg-warning-amber/10 border border-warning-amber/20 rounded-lg p-3\">\n          <div className=\"flex items-start space-x-2\">\n            <span className=\"text-warning-amber text-lg\">\u26A0\uFE0F</span>\n            <div className=\"text-sm\">\n              <p className=\"text-warning-amber font-medium mb-1\">\n                Important Notice\n              </p>\n              <ul className=\"text-muted-light space-y-1\">\n                <li>\u2022 False reports may result in account restrictions</li>\n                <li>\u2022 Reports are reviewed by human moderators</li>\n                <li>\u2022 You will be notified of the outcome</li>\n                <li>\u2022 Serious violations may result in immediate action</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex items-center justify-end space-x-3 pt-2\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => setShowForm(false)}\n            disabled={isSubmitting}\n          >\n            Cancel\n          </Button>\n          <Button\n            variant=\"primary\"\n            onClick={handleSubmitReport}\n            disabled={!selectedReason || isSubmitting || (selectedReason === 'other' && !customDetails.trim())}\n            className=\"bg-warning-amber hover:bg-warning-amber/80 text-dark-bg\"\n          >\n            {isSubmitting ? (\n              <>\n                <div className=\"w-4 h-4 border-2 border-dark-bg/30 border-t-dark-bg rounded-full animate-spin mr-2\"></div>\n                Submitting...\n              </>\n            ) : (\n              'Submit Report'\n            )}\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],
      names: ["PostReporting", "REPORT_REASONS", "id", "label", "description", "severity", "postId", "postTitle", "onReportSubmitted", "className", "addNotification", "useAppStore", "selectedReason", "setSelectedReason", "useState", "customDetails", "setCustomDetails", "isSubmitting", "setIsSubmitting", "showForm", "setShowForm", "handleSubmitReport", "type", "title", "message", "trim", "selectedReasonData", "find", "r", "reportData", "reason", "details", "response", "postsService", "reportPost", "success", "Error", "err", "errorMessage", "getSeverityColor", "Button", "variant", "size", "onClick", "Card", "CardHeader", "div", "h3", "disabled", "p", "span", "CardContent", "map", "input", "name", "value", "checked", "onChange", "e", "target", "textarea", "placeholder", "rows", "maxLength", "length", "ul", "li"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0ef28dc2e0a2a881fcaf8748023b2adbfc40c51d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_3raklsrev = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_3raklsrev();
cov_3raklsrev().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_3raklsrev().s[1]++;
Object.defineProperty(exports, "PostReporting", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_3raklsrev().f[0]++;
    cov_3raklsrev().s[2]++;
    return PostReporting;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_3raklsrev().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_3raklsrev().s[4]++, _interop_require_wildcard(require("react")));
const _Card =
/* istanbul ignore next */
(cov_3raklsrev().s[5]++, require("../ui/Card"));
const _Button =
/* istanbul ignore next */
(cov_3raklsrev().s[6]++, require("../ui/Button"));
const _appStore =
/* istanbul ignore next */
(cov_3raklsrev().s[7]++, require("../../stores/appStore"));
const _services =
/* istanbul ignore next */
(cov_3raklsrev().s[8]++, require("../../services"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_3raklsrev().f[1]++;
  cov_3raklsrev().s[9]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_3raklsrev().b[0][0]++;
    cov_3raklsrev().s[10]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_3raklsrev().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_3raklsrev().s[11]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_3raklsrev().s[12]++, new WeakMap());
  /* istanbul ignore next */
  cov_3raklsrev().s[13]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_3raklsrev().f[2]++;
    cov_3raklsrev().s[14]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_3raklsrev().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_3raklsrev().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_3raklsrev().f[3]++;
  cov_3raklsrev().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_3raklsrev().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_3raklsrev().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_3raklsrev().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_3raklsrev().b[2][0]++;
    cov_3raklsrev().s[16]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_3raklsrev().b[2][1]++;
  }
  cov_3raklsrev().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_3raklsrev().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_3raklsrev().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_3raklsrev().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_3raklsrev().b[4][0]++;
    cov_3raklsrev().s[18]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_3raklsrev().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_3raklsrev().s[19]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_3raklsrev().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_3raklsrev().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_3raklsrev().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_3raklsrev().b[6][0]++;
    cov_3raklsrev().s[21]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_3raklsrev().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_3raklsrev().s[22]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_3raklsrev().s[23]++,
  /* istanbul ignore next */
  (cov_3raklsrev().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_3raklsrev().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_3raklsrev().s[24]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_3raklsrev().s[25]++;
    if (
    /* istanbul ignore next */
    (cov_3raklsrev().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_3raklsrev().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_3raklsrev().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_3raklsrev().s[26]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_3raklsrev().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_3raklsrev().b[11][1]++, null));
      /* istanbul ignore next */
      cov_3raklsrev().s[27]++;
      if (
      /* istanbul ignore next */
      (cov_3raklsrev().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_3raklsrev().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_3raklsrev().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_3raklsrev().b[12][0]++;
        cov_3raklsrev().s[28]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_3raklsrev().b[12][1]++;
        cov_3raklsrev().s[29]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_3raklsrev().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_3raklsrev().s[30]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_3raklsrev().s[31]++;
  if (cache) {
    /* istanbul ignore next */
    cov_3raklsrev().b[14][0]++;
    cov_3raklsrev().s[32]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_3raklsrev().b[14][1]++;
  }
  cov_3raklsrev().s[33]++;
  return newObj;
}
const REPORT_REASONS =
/* istanbul ignore next */
(cov_3raklsrev().s[34]++, [{
  id: 'spam',
  label: 'Spam or Promotional Content',
  description: 'Unwanted commercial content or repetitive posts',
  severity: 'medium'
}, {
  id: 'harassment',
  label: 'Harassment or Bullying',
  description: 'Targeting individuals with harmful content',
  severity: 'high'
}, {
  id: 'hate_speech',
  label: 'Hate Speech',
  description: 'Content promoting hatred against groups or individuals',
  severity: 'high'
}, {
  id: 'misinformation',
  label: 'Misinformation',
  description: 'False or misleading information',
  severity: 'medium'
}, {
  id: 'inappropriate_content',
  label: 'Inappropriate Content',
  description: 'Content not suitable for the community',
  severity: 'medium'
}, {
  id: 'copyright',
  label: 'Copyright Violation',
  description: 'Unauthorized use of copyrighted material',
  severity: 'medium'
}, {
  id: 'off_topic',
  label: 'Off-Topic',
  description: 'Content not relevant to the topic or community',
  severity: 'low'
}, {
  id: 'violence',
  label: 'Violence or Threats',
  description: 'Content promoting or threatening violence',
  severity: 'high'
}, {
  id: 'privacy',
  label: 'Privacy Violation',
  description: 'Sharing personal information without consent',
  severity: 'high'
}, {
  id: 'other',
  label: 'Other',
  description: 'Other violation not listed above',
  severity: 'medium'
}]);
function PostReporting({
  postId,
  postTitle,
  onReportSubmitted,
  className =
  /* istanbul ignore next */
  (cov_3raklsrev().b[15][0]++, '')
}) {
  /* istanbul ignore next */
  cov_3raklsrev().f[4]++;
  const {
    addNotification
  } =
  /* istanbul ignore next */
  (cov_3raklsrev().s[35]++, (0, _appStore.useAppStore)());
  const [selectedReason, setSelectedReason] =
  /* istanbul ignore next */
  (cov_3raklsrev().s[36]++, (0, _react.useState)(''));
  const [customDetails, setCustomDetails] =
  /* istanbul ignore next */
  (cov_3raklsrev().s[37]++, (0, _react.useState)(''));
  const [isSubmitting, setIsSubmitting] =
  /* istanbul ignore next */
  (cov_3raklsrev().s[38]++, (0, _react.useState)(false));
  const [showForm, setShowForm] =
  /* istanbul ignore next */
  (cov_3raklsrev().s[39]++, (0, _react.useState)(false));
  /* istanbul ignore next */
  cov_3raklsrev().s[40]++;
  const handleSubmitReport = async () => {
    /* istanbul ignore next */
    cov_3raklsrev().f[5]++;
    cov_3raklsrev().s[41]++;
    if (!selectedReason) {
      /* istanbul ignore next */
      cov_3raklsrev().b[16][0]++;
      cov_3raklsrev().s[42]++;
      addNotification({
        type: 'warning',
        title: 'Missing Information',
        message: 'Please select a reason for reporting this post'
      });
      /* istanbul ignore next */
      cov_3raklsrev().s[43]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_3raklsrev().b[16][1]++;
    }
    cov_3raklsrev().s[44]++;
    if (
    /* istanbul ignore next */
    (cov_3raklsrev().b[18][0]++, selectedReason === 'other') &&
    /* istanbul ignore next */
    (cov_3raklsrev().b[18][1]++, !customDetails.trim())) {
      /* istanbul ignore next */
      cov_3raklsrev().b[17][0]++;
      cov_3raklsrev().s[45]++;
      addNotification({
        type: 'warning',
        title: 'Missing Details',
        message: 'Please provide details for the "Other" reason'
      });
      /* istanbul ignore next */
      cov_3raklsrev().s[46]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_3raklsrev().b[17][1]++;
    }
    cov_3raklsrev().s[47]++;
    setIsSubmitting(true);
    /* istanbul ignore next */
    cov_3raklsrev().s[48]++;
    try {
      const selectedReasonData =
      /* istanbul ignore next */
      (cov_3raklsrev().s[49]++, REPORT_REASONS.find(r => {
        /* istanbul ignore next */
        cov_3raklsrev().f[6]++;
        cov_3raklsrev().s[50]++;
        return r.id === selectedReason;
      }));
      const reportData =
      /* istanbul ignore next */
      (cov_3raklsrev().s[51]++, {
        reason: selectedReason,
        details:
        /* istanbul ignore next */
        (cov_3raklsrev().b[19][0]++, customDetails.trim()) ||
        /* istanbul ignore next */
        (cov_3raklsrev().b[19][1]++, selectedReasonData?.description) ||
        /* istanbul ignore next */
        (cov_3raklsrev().b[19][2]++, '')
      });
      const response =
      /* istanbul ignore next */
      (cov_3raklsrev().s[52]++, await _services.postsService.reportPost(postId, reportData));
      /* istanbul ignore next */
      cov_3raklsrev().s[53]++;
      if (response.success) {
        /* istanbul ignore next */
        cov_3raklsrev().b[20][0]++;
        cov_3raklsrev().s[54]++;
        addNotification({
          type: 'success',
          title: 'Report Submitted',
          message: 'Thank you for reporting this post. Our moderators will review it shortly.'
        });
        // Reset form
        /* istanbul ignore next */
        cov_3raklsrev().s[55]++;
        setSelectedReason('');
        /* istanbul ignore next */
        cov_3raklsrev().s[56]++;
        setCustomDetails('');
        /* istanbul ignore next */
        cov_3raklsrev().s[57]++;
        setShowForm(false);
        /* istanbul ignore next */
        cov_3raklsrev().s[58]++;
        onReportSubmitted?.();
      } else {
        /* istanbul ignore next */
        cov_3raklsrev().b[20][1]++;
        cov_3raklsrev().s[59]++;
        throw new Error('Failed to submit report');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_3raklsrev().s[60]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_3raklsrev().b[21][0]++, err.message) :
      /* istanbul ignore next */
      (cov_3raklsrev().b[21][1]++, 'Failed to submit report'));
      /* istanbul ignore next */
      cov_3raklsrev().s[61]++;
      addNotification({
        type: 'error',
        title: 'Report Error',
        message: errorMessage
      });
    } finally {
      /* istanbul ignore next */
      cov_3raklsrev().s[62]++;
      setIsSubmitting(false);
    }
  };
  /* istanbul ignore next */
  cov_3raklsrev().s[63]++;
  const getSeverityColor = severity => {
    /* istanbul ignore next */
    cov_3raklsrev().f[7]++;
    cov_3raklsrev().s[64]++;
    switch (severity) {
      case 'high':
        /* istanbul ignore next */
        cov_3raklsrev().b[22][0]++;
        cov_3raklsrev().s[65]++;
        return 'border-rejected-red/30 bg-rejected-red/5 text-rejected-red';
      case 'medium':
        /* istanbul ignore next */
        cov_3raklsrev().b[22][1]++;
        cov_3raklsrev().s[66]++;
        return 'border-warning-amber/30 bg-warning-amber/5 text-warning-amber';
      case 'low':
        /* istanbul ignore next */
        cov_3raklsrev().b[22][2]++;
        cov_3raklsrev().s[67]++;
        return 'border-muted/30 bg-muted/5 text-muted-light';
      default:
        /* istanbul ignore next */
        cov_3raklsrev().b[22][3]++;
        cov_3raklsrev().s[68]++;
        return 'border-muted/30 bg-muted/5 text-light-text';
    }
  };
  /* istanbul ignore next */
  cov_3raklsrev().s[69]++;
  if (!showForm) {
    /* istanbul ignore next */
    cov_3raklsrev().b[23][0]++;
    cov_3raklsrev().s[70]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
      variant: "ghost",
      size: "sm",
      onClick: () => {
        /* istanbul ignore next */
        cov_3raklsrev().f[8]++;
        cov_3raklsrev().s[71]++;
        return setShowForm(true);
      },
      className: `text-warning-amber hover:bg-warning-amber/10 ${className}`,
      children: "\uD83D\uDEA9 Report Post"
    });
  } else
  /* istanbul ignore next */
  {
    cov_3raklsrev().b[23][1]++;
  }
  cov_3raklsrev().s[72]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
    variant: "bordered",
    className: `border-warning-amber/30 ${className}`,
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.CardHeader, {
      className: "pb-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-between",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-lg font-bold text-light-text",
          children: "Report Post"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "ghost",
          size: "sm",
          onClick: () => {
            /* istanbul ignore next */
            cov_3raklsrev().f[9]++;
            cov_3raklsrev().s[73]++;
            return setShowForm(false);
          },
          disabled: isSubmitting,
          children: "✕"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
        className: "text-sm text-muted-light",
        children: ["Reporting: ", /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "text-light-text font-medium",
          children: ['"', postTitle, '"']
        })]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.CardContent, {
      className: "space-y-4",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("label", {
          className: "block text-sm font-medium text-light-text mb-3",
          children: "Why are you reporting this post? *"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-2",
          children: REPORT_REASONS.map(reason => {
            /* istanbul ignore next */
            cov_3raklsrev().f[10]++;
            cov_3raklsrev().s[74]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)("label", {
              className: `block p-3 rounded-lg border cursor-pointer transition-colors ${selectedReason === reason.id ?
              /* istanbul ignore next */
              (cov_3raklsrev().b[24][0]++, 'border-overlord-red bg-overlord-red/10') :
              /* istanbul ignore next */
              (cov_3raklsrev().b[24][1]++, getSeverityColor(reason.severity))} hover:bg-opacity-75`,
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-start space-x-3",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                  type: "radio",
                  name: "reportReason",
                  value: reason.id,
                  checked: selectedReason === reason.id,
                  onChange: e => {
                    /* istanbul ignore next */
                    cov_3raklsrev().f[11]++;
                    cov_3raklsrev().s[75]++;
                    return setSelectedReason(e.target.value);
                  },
                  className: "mt-1 w-4 h-4 text-overlord-red bg-dark-bg border-muted/30 focus:ring-overlord-red focus:ring-2"
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex-1",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "font-medium text-light-text mb-1",
                    children: reason.label
                  }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                    className: "text-sm text-muted-light",
                    children: reason.description
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "text-xs px-2 py-1 rounded bg-muted/20 text-muted-light",
                  children: reason.severity
                })]
              })
            }, reason.id);
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("label", {
          className: "block text-sm font-medium text-light-text mb-2",
          children: ["Additional Details ",
          /* istanbul ignore next */
          (cov_3raklsrev().b[25][0]++, selectedReason === 'other') &&
          /* istanbul ignore next */
          (cov_3raklsrev().b[25][1]++, '*')]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("textarea", {
          value: customDetails,
          onChange: e => {
            /* istanbul ignore next */
            cov_3raklsrev().f[12]++;
            cov_3raklsrev().s[76]++;
            return setCustomDetails(e.target.value);
          },
          placeholder: selectedReason === 'other' ?
          /* istanbul ignore next */
          (cov_3raklsrev().b[26][0]++, 'Please describe the issue in detail...') :
          /* istanbul ignore next */
          (cov_3raklsrev().b[26][1]++, 'Optional: Provide additional context or specific examples...'),
          className: "w-full px-3 py-2 bg-dark-bg border border-muted/30 rounded-md text-light-text placeholder-muted-light focus:outline-none focus:ring-2 focus:ring-overlord-red focus:border-transparent resize-none",
          rows: 4,
          maxLength: 500
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "text-xs text-muted-light mt-1",
          children: [customDetails.length, "/500 characters"]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "bg-warning-amber/10 border border-warning-amber/20 rounded-lg p-3",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-start space-x-2",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-warning-amber text-lg",
            children: "⚠️"
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-sm",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-warning-amber font-medium mb-1",
              children: "Important Notice"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
              className: "text-muted-light space-y-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "• False reports may result in account restrictions"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "• Reports are reviewed by human moderators"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "• You will be notified of the outcome"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                children: "• Serious violations may result in immediate action"
              })]
            })]
          })]
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-end space-x-3 pt-2",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "ghost",
          onClick: () => {
            /* istanbul ignore next */
            cov_3raklsrev().f[13]++;
            cov_3raklsrev().s[77]++;
            return setShowForm(false);
          },
          disabled: isSubmitting,
          children: "Cancel"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "primary",
          onClick: handleSubmitReport,
          disabled:
          /* istanbul ignore next */
          (cov_3raklsrev().b[27][0]++, !selectedReason) ||
          /* istanbul ignore next */
          (cov_3raklsrev().b[27][1]++, isSubmitting) ||
          /* istanbul ignore next */
          (cov_3raklsrev().b[27][2]++, selectedReason === 'other') &&
          /* istanbul ignore next */
          (cov_3raklsrev().b[27][3]++, !customDetails.trim()),
          className: "bg-warning-amber hover:bg-warning-amber/80 text-dark-bg",
          children: isSubmitting ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_3raklsrev().b[28][0]++, (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-4 h-4 border-2 border-dark-bg/30 border-t-dark-bg rounded-full animate-spin mr-2"
            }), "Submitting..."]
          })) :
          /* istanbul ignore next */
          (cov_3raklsrev().b[28][1]++, 'Submit Report')
        })]
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,