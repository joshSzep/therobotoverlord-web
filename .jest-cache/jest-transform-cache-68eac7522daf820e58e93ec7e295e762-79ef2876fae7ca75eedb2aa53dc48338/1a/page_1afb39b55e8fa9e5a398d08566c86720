e2de688dad06a2e4c76abe319c04cd33
/**
 * Post editing page for The Robot Overlord
 * Allows users to edit their existing posts
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_1ulit5jxfq() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/[id]/edit/page.tsx";
  var hash = "60573a512c442b9edd127d9566e079d2c6b9c3d7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/[id]/edit/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 28
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "7": {
        start: {
          line: 19,
          column: 14
        },
        end: {
          line: 19,
          column: 55
        }
      },
      "8": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 59
        }
      },
      "9": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 21,
          column: 56
        }
      },
      "10": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 49
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "12": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "13": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "14": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "21": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "24": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "25": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "28": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "29": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "30": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "31": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "32": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "33": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "34": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "35": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "36": {
        start: {
          line: 65,
          column: 19
        },
        end: {
          line: 65,
          column: 47
        }
      },
      "37": {
        start: {
          line: 66,
          column: 19
        },
        end: {
          line: 66,
          column: 47
        }
      },
      "38": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "39": {
        start: {
          line: 68,
          column: 28
        },
        end: {
          line: 68,
          column: 54
        }
      },
      "40": {
        start: {
          line: 69,
          column: 38
        },
        end: {
          line: 69,
          column: 64
        }
      },
      "41": {
        start: {
          line: 70,
          column: 30
        },
        end: {
          line: 70,
          column: 56
        }
      },
      "42": {
        start: {
          line: 71,
          column: 19
        },
        end: {
          line: 71,
          column: 28
        }
      },
      "43": {
        start: {
          line: 73,
          column: 21
        },
        end: {
          line: 98,
          column: 5
        }
      },
      "44": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "45": {
        start: {
          line: 75,
          column: 12
        },
        end: {
          line: 75,
          column: 31
        }
      },
      "46": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 27
        }
      },
      "47": {
        start: {
          line: 77,
          column: 29
        },
        end: {
          line: 77,
          column: 73
        }
      },
      "48": {
        start: {
          line: 78,
          column: 12
        },
        end: {
          line: 86,
          column: 13
        }
      },
      "49": {
        start: {
          line: 80,
          column: 16
        },
        end: {
          line: 82,
          column: 17
        }
      },
      "50": {
        start: {
          line: 81,
          column: 20
        },
        end: {
          line: 81,
          column: 84
        }
      },
      "51": {
        start: {
          line: 83,
          column: 16
        },
        end: {
          line: 83,
          column: 39
        }
      },
      "52": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 50
        }
      },
      "53": {
        start: {
          line: 88,
          column: 33
        },
        end: {
          line: 88,
          column: 91
        }
      },
      "54": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 35
        }
      },
      "55": {
        start: {
          line: 90,
          column: 12
        },
        end: {
          line: 94,
          column: 15
        }
      },
      "56": {
        start: {
          line: 96,
          column: 12
        },
        end: {
          line: 96,
          column: 32
        }
      },
      "57": {
        start: {
          line: 100,
          column: 4
        },
        end: {
          line: 104,
          column: 7
        }
      },
      "58": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 19
        }
      },
      "59": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "60": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 26
        }
      },
      "61": {
        start: {
          line: 107,
          column: 19
        },
        end: {
          line: 107,
          column: 26
        }
      },
      "62": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "63": {
        start: {
          line: 109,
          column: 29
        },
        end: {
          line: 109,
          column: 87
        }
      },
      "64": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 124,
          column: 13
        }
      },
      "65": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "66": {
        start: {
          line: 117,
          column: 16
        },
        end: {
          line: 121,
          column: 17
        }
      },
      "67": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 118,
          column: 62
        }
      },
      "68": {
        start: {
          line: 120,
          column: 20
        },
        end: {
          line: 120,
          column: 46
        }
      },
      "69": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 57
        }
      },
      "70": {
        start: {
          line: 126,
          column: 33
        },
        end: {
          line: 126,
          column: 93
        }
      },
      "71": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 131,
          column: 15
        }
      },
      "72": {
        start: {
          line: 135,
          column: 25
        },
        end: {
          line: 141,
          column: 5
        }
      },
      "73": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 140,
          column: 9
        }
      },
      "74": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 54
        }
      },
      "75": {
        start: {
          line: 139,
          column: 12
        },
        end: {
          line: 139,
          column: 26
        }
      },
      "76": {
        start: {
          line: 142,
          column: 4
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "77": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 174,
          column: 11
        }
      },
      "78": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 212,
          column: 5
        }
      },
      "79": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 211,
          column: 11
        }
      },
      "80": {
        start: {
          line: 199,
          column: 45
        },
        end: {
          line: 199,
          column: 58
        }
      },
      "81": {
        start: {
          line: 213,
          column: 4
        },
        end: {
          line: 258,
          column: 7
        }
      },
      "82": {
        start: {
          line: 236,
          column: 53
        },
        end: {
          line: 236,
          column: 94
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "EditPostPage",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 21
          }
        },
        loc: {
          start: {
            line: 64,
            column: 24
          },
          end: {
            line: 259,
            column: 1
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 73,
            column: 22
          }
        },
        loc: {
          start: {
            line: 73,
            column: 31
          },
          end: {
            line: 98,
            column: 5
          }
        },
        line: 73
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 100,
            column: 26
          },
          end: {
            line: 100,
            column: 27
          }
        },
        loc: {
          start: {
            line: 100,
            column: 30
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 100
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 106,
            column: 29
          },
          end: {
            line: 106,
            column: 30
          }
        },
        loc: {
          start: {
            line: 106,
            column: 47
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 106
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 135,
            column: 25
          },
          end: {
            line: 135,
            column: 26
          }
        },
        loc: {
          start: {
            line: 135,
            column: 29
          },
          end: {
            line: 141,
            column: 5
          }
        },
        line: 135
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 199,
            column: 41
          },
          end: {
            line: 199,
            column: 42
          }
        },
        loc: {
          start: {
            line: 199,
            column: 45
          },
          end: {
            line: 199,
            column: 58
          }
        },
        line: 199
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 236,
            column: 49
          },
          end: {
            line: 236,
            column: 50
          }
        },
        loc: {
          start: {
            line: 236,
            column: 53
          },
          end: {
            line: 236,
            column: 94
          }
        },
        line: 236
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 78,
            column: 12
          },
          end: {
            line: 86,
            column: 13
          }
        }, {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 86,
            column: 13
          }
        }],
        line: 78
      },
      "16": {
        loc: {
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 78,
            column: 16
          },
          end: {
            line: 78,
            column: 32
          }
        }, {
          start: {
            line: 78,
            column: 36
          },
          end: {
            line: 78,
            column: 49
          }
        }],
        line: 78
      },
      "17": {
        loc: {
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 82,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 80,
            column: 16
          },
          end: {
            line: 82,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 80
      },
      "18": {
        loc: {
          start: {
            line: 88,
            column: 33
          },
          end: {
            line: 88,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 88,
            column: 56
          },
          end: {
            line: 88,
            column: 67
          }
        }, {
          start: {
            line: 88,
            column: 70
          },
          end: {
            line: 88,
            column: 91
          }
        }],
        line: 88
      },
      "19": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 107,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "20": {
        loc: {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 124,
            column: 13
          }
        }, {
          start: {
            line: 122,
            column: 19
          },
          end: {
            line: 124,
            column: 13
          }
        }],
        line: 110
      },
      "21": {
        loc: {
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 110,
            column: 16
          },
          end: {
            line: 110,
            column: 32
          }
        }, {
          start: {
            line: 110,
            column: 36
          },
          end: {
            line: 110,
            column: 49
          }
        }],
        line: 110
      },
      "22": {
        loc: {
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 117,
            column: 16
          },
          end: {
            line: 121,
            column: 17
          }
        }, {
          start: {
            line: 119,
            column: 23
          },
          end: {
            line: 121,
            column: 17
          }
        }],
        line: 117
      },
      "23": {
        loc: {
          start: {
            line: 126,
            column: 33
          },
          end: {
            line: 126,
            column: 93
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 126,
            column: 56
          },
          end: {
            line: 126,
            column: 67
          }
        }, {
          start: {
            line: 126,
            column: 70
          },
          end: {
            line: 126,
            column: 93
          }
        }],
        line: 126
      },
      "24": {
        loc: {
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 136,
            column: 8
          },
          end: {
            line: 140,
            column: 9
          }
        }, {
          start: {
            line: 138,
            column: 15
          },
          end: {
            line: 140,
            column: 9
          }
        }],
        line: 136
      },
      "25": {
        loc: {
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 142,
            column: 4
          },
          end: {
            line: 175,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 142
      },
      "26": {
        loc: {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 212,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 176
      },
      "27": {
        loc: {
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 176,
            column: 8
          },
          end: {
            line: 176,
            column: 13
          }
        }, {
          start: {
            line: 176,
            column: 17
          },
          end: {
            line: 176,
            column: 22
          }
        }],
        line: 176
      },
      "28": {
        loc: {
          start: {
            line: 192,
            column: 34
          },
          end: {
            line: 192,
            column: 133
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 192,
            column: 34
          },
          end: {
            line: 192,
            column: 39
          }
        }, {
          start: {
            line: 192,
            column: 43
          },
          end: {
            line: 192,
            column: 133
          }
        }],
        line: 192
      },
      "29": {
        loc: {
          start: {
            line: 229,
            column: 28
          },
          end: {
            line: 240,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 229,
            column: 28
          },
          end: {
            line: 229,
            column: 38
          }
        }, {
          start: {
            line: 229,
            column: 56
          },
          end: {
            line: 240,
            column: 30
          }
        }],
        line: 229
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/[id]/edit/page.tsx"],
      sourcesContent: ["/**\n * Post editing page for The Robot Overlord\n * Allows users to edit their existing posts\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { PostForm } from '@/components/posts/PostForm';\nimport { Card, CardContent, CardHeader } from '@/components/ui/Card';\nimport { Button } from '@/components/ui/Button';\nimport { useAppStore } from '@/stores/appStore';\nimport { postsService } from '@/services';\nimport { Post } from '@/types/posts';\nimport { ApiResponse } from '@/types/api';\n\nexport default function EditPostPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { addNotification } = useAppStore();\n  \n  const [post, setPost] = useState<Post | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const postId = params.id as string;\n\n  // Load post data\n  const loadPost = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const response = await postsService.getPost(postId);\n      if (response.success && response.data) {\n        // Check if user can edit this post\n        if (!response.data.userPermissions?.canEdit) {\n          throw new Error('You do not have permission to edit this post');\n        }\n        setPost(response.data);\n      } else {\n        throw new Error('Post not found');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load post';\n      setError(errorMessage);\n      addNotification({\n        type: 'error',\n        title: 'Error Loading Post',\n        message: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initial load\n  useEffect(() => {\n    loadPost();\n  }, [postId]);\n\n  // Handle post update\n  const handlePostSubmit = async (postData: any) => {\n    if (!post) return;\n\n    try {\n      const response = await postsService.updatePost(post.id, postData);\n\n      if (response.success && response.data) {\n        addNotification({\n          type: 'success',\n          title: 'Post Updated',\n          message: 'Your post has been updated successfully',\n        });\n\n        // Redirect back to the post or topic\n        if (post.topic) {\n          router.push(`/topics/${post.topic.slug}`);\n        } else {\n          router.push('/dashboard');\n        }\n      } else {\n        throw new Error('Failed to update post');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to update post';\n      addNotification({\n        type: 'error',\n        title: 'Update Error',\n        message: errorMessage,\n      });\n    }\n  };\n\n  // Handle cancel\n  const handleCancel = () => {\n    if (post?.topic) {\n      router.push(`/topics/${post.topic.slug}`);\n    } else {\n      router.back();\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"max-w-4xl mx-auto\">\n        <Card variant=\"bordered\" className=\"animate-pulse\">\n          <CardHeader className=\"pb-4\">\n            <div className=\"h-8 bg-muted/20 rounded w-1/3\"></div>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"h-4 bg-muted/20 rounded w-1/4\"></div>\n            <div className=\"h-10 bg-muted/20 rounded\"></div>\n            <div className=\"h-4 bg-muted/20 rounded w-1/4\"></div>\n            <div className=\"h-32 bg-muted/20 rounded\"></div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (error || !post) {\n    return (\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">\u26A0\uFE0F</div>\n          <h3 className=\"text-xl font-bold text-light-text mb-2\">\n            Unable to Edit Post\n          </h3>\n          <p className=\"text-muted-light mb-6\">\n            {error || 'The post you are trying to edit does not exist or you do not have permission to edit it.'}\n          </p>\n          <div className=\"flex items-center justify-center space-x-4\">\n            <Button variant=\"ghost\" onClick={() => router.back()}>\n              Go Back\n            </Button>\n            <Button variant=\"primary\" onClick={loadPost}>\n              Try Again\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-light-text\">Edit Post</h1>\n          <p className=\"text-muted-light mt-1\">\n            Make changes to your post\n          </p>\n          {post.topic && (\n            <p className=\"text-sm text-muted-light mt-1\">\n              in{' '}\n              <span \n                className=\"text-overlord-red hover:underline cursor-pointer\"\n                onClick={() => router.push(`/topics/${post.topic!.slug}`)}\n              >\n                {post.topic.title}\n              </span>\n            </p>\n          )}\n        </div>\n        <Button variant=\"ghost\" onClick={handleCancel}>\n          Cancel\n        </Button>\n      </div>\n\n      {/* Edit Form */}\n      <PostForm\n        onSubmit={handlePostSubmit}\n        onCancel={handleCancel}\n        initialData={post}\n        mode=\"edit\"\n        showPreview={true}\n      />\n    </div>\n  );\n}\n"],
      names: ["EditPostPage", "params", "useParams", "router", "useRouter", "addNotification", "useAppStore", "post", "setPost", "useState", "isLoading", "setIsLoading", "error", "setError", "postId", "id", "loadPost", "response", "postsService", "getPost", "success", "data", "userPermissions", "canEdit", "Error", "err", "errorMessage", "message", "type", "title", "useEffect", "handlePostSubmit", "postData", "updatePost", "topic", "push", "slug", "handleCancel", "back", "div", "className", "Card", "variant", "CardHeader", "CardContent", "h3", "p", "Button", "onClick", "h1", "span", "PostForm", "onSubmit", "onCancel", "initialData", "mode", "showPreview"],
      mappings: "AAAA;;;CAGC,GAED;;;;;+BAYA;;;eAAwBA;;;;+DAVmB;4BACN;0BACZ;sBACqB;wBACvB;0BACK;0BACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAId,SAASA;IACtB,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAM,EAAEC,eAAe,EAAE,GAAGC,IAAAA,qBAAW;IAEvC,MAAM,CAACC,MAAMC,QAAQ,GAAGC,IAAAA,eAAQ,EAAc;IAC9C,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAElD,MAAMK,SAASb,OAAOc,EAAE;IAExB,iBAAiB;IACjB,MAAMC,WAAW;QACf,IAAI;YACFL,aAAa;YACbE,SAAS;YAET,MAAMI,WAAW,MAAMC,sBAAY,CAACC,OAAO,CAACL;YAC5C,IAAIG,SAASG,OAAO,IAAIH,SAASI,IAAI,EAAE;gBACrC,mCAAmC;gBACnC,IAAI,CAACJ,SAASI,IAAI,CAACC,eAAe,EAAEC,SAAS;oBAC3C,MAAM,IAAIC,MAAM;gBAClB;gBACAhB,QAAQS,SAASI,IAAI;YACvB,OAAO;gBACL,MAAM,IAAIG,MAAM;YAClB;QACF,EAAE,OAAOC,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG;YAC1Dd,SAASa;YACTrB,gBAAgB;gBACduB,MAAM;gBACNC,OAAO;gBACPF,SAASD;YACX;QACF,SAAU;YACRf,aAAa;QACf;IACF;IAEA,eAAe;IACfmB,IAAAA,gBAAS,EAAC;QACRd;IACF,GAAG;QAACF;KAAO;IAEX,qBAAqB;IACrB,MAAMiB,mBAAmB,OAAOC;QAC9B,IAAI,CAACzB,MAAM;QAEX,IAAI;YACF,MAAMU,WAAW,MAAMC,sBAAY,CAACe,UAAU,CAAC1B,KAAKQ,EAAE,EAAEiB;YAExD,IAAIf,SAASG,OAAO,IAAIH,SAASI,IAAI,EAAE;gBACrChB,gBAAgB;oBACduB,MAAM;oBACNC,OAAO;oBACPF,SAAS;gBACX;gBAEA,qCAAqC;gBACrC,IAAIpB,KAAK2B,KAAK,EAAE;oBACd/B,OAAOgC,IAAI,CAAC,CAAC,QAAQ,EAAE5B,KAAK2B,KAAK,CAACE,IAAI,EAAE;gBAC1C,OAAO;oBACLjC,OAAOgC,IAAI,CAAC;gBACd;YACF,OAAO;gBACL,MAAM,IAAIX,MAAM;YAClB;QACF,EAAE,OAAOC,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG;YAC1DtB,gBAAgB;gBACduB,MAAM;gBACNC,OAAO;gBACPF,SAASD;YACX;QACF;IACF;IAEA,gBAAgB;IAChB,MAAMW,eAAe;QACnB,IAAI9B,MAAM2B,OAAO;YACf/B,OAAOgC,IAAI,CAAC,CAAC,QAAQ,EAAE5B,KAAK2B,KAAK,CAACE,IAAI,EAAE;QAC1C,OAAO;YACLjC,OAAOmC,IAAI;QACb;IACF;IAEA,IAAI5B,WAAW;QACb,qBACE,qBAAC6B;YAAIC,WAAU;sBACb,cAAA,sBAACC,UAAI;gBAACC,SAAQ;gBAAWF,WAAU;;kCACjC,qBAACG,gBAAU;wBAACH,WAAU;kCACpB,cAAA,qBAACD;4BAAIC,WAAU;;;kCAEjB,sBAACI,iBAAW;wBAACJ,WAAU;;0CACrB,qBAACD;gCAAIC,WAAU;;0CACf,qBAACD;gCAAIC,WAAU;;0CACf,qBAACD;gCAAIC,WAAU;;0CACf,qBAACD;gCAAIC,WAAU;;;;;;;IAKzB;IAEA,IAAI5B,SAAS,CAACL,MAAM;QAClB,qBACE,qBAACgC;YAAIC,WAAU;sBACb,cAAA,sBAACD;gBAAIC,WAAU;;kCACb,qBAACD;wBAAIC,WAAU;kCAAgB;;kCAC/B,qBAACK;wBAAGL,WAAU;kCAAyC;;kCAGvD,qBAACM;wBAAEN,WAAU;kCACV5B,SAAS;;kCAEZ,sBAAC2B;wBAAIC,WAAU;;0CACb,qBAACO,cAAM;gCAACL,SAAQ;gCAAQM,SAAS,IAAM7C,OAAOmC,IAAI;0CAAI;;0CAGtD,qBAACS,cAAM;gCAACL,SAAQ;gCAAUM,SAAShC;0CAAU;;;;;;;IAOvD;IAEA,qBACE,sBAACuB;QAAIC,WAAU;;0BAEb,sBAACD;gBAAIC,WAAU;;kCACb,sBAACD;;0CACC,qBAACU;gCAAGT,WAAU;0CAAqC;;0CACnD,qBAACM;gCAAEN,WAAU;0CAAwB;;4BAGpCjC,KAAK2B,KAAK,kBACT,sBAACY;gCAAEN,WAAU;;oCAAgC;oCACxC;kDACH,qBAACU;wCACCV,WAAU;wCACVQ,SAAS,IAAM7C,OAAOgC,IAAI,CAAC,CAAC,QAAQ,EAAE5B,KAAK2B,KAAK,CAAEE,IAAI,EAAE;kDAEvD7B,KAAK2B,KAAK,CAACL,KAAK;;;;;;kCAKzB,qBAACkB,cAAM;wBAACL,SAAQ;wBAAQM,SAASX;kCAAc;;;;0BAMjD,qBAACc,kBAAQ;gBACPC,UAAUrB;gBACVsB,UAAUhB;gBACViB,aAAa/C;gBACbgD,MAAK;gBACLC,aAAa;;;;AAIrB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "60573a512c442b9edd127d9566e079d2c6b9c3d7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ulit5jxfq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ulit5jxfq();
cov_1ulit5jxfq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1ulit5jxfq().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1ulit5jxfq().f[0]++;
    cov_1ulit5jxfq().s[2]++;
    return EditPostPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1ulit5jxfq().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1ulit5jxfq().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_1ulit5jxfq().s[5]++, require("next/navigation"));
const _PostForm =
/* istanbul ignore next */
(cov_1ulit5jxfq().s[6]++, require("../../../../components/posts/PostForm"));
const _Card =
/* istanbul ignore next */
(cov_1ulit5jxfq().s[7]++, require("../../../../components/ui/Card"));
const _Button =
/* istanbul ignore next */
(cov_1ulit5jxfq().s[8]++, require("../../../../components/ui/Button"));
const _appStore =
/* istanbul ignore next */
(cov_1ulit5jxfq().s[9]++, require("../../../../stores/appStore"));
const _services =
/* istanbul ignore next */
(cov_1ulit5jxfq().s[10]++, require("../../../../services"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1ulit5jxfq().f[1]++;
  cov_1ulit5jxfq().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1ulit5jxfq().b[0][0]++;
    cov_1ulit5jxfq().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1ulit5jxfq().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().f[2]++;
    cov_1ulit5jxfq().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1ulit5jxfq().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1ulit5jxfq().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1ulit5jxfq().f[3]++;
  cov_1ulit5jxfq().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().b[2][0]++;
    cov_1ulit5jxfq().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1ulit5jxfq().b[2][1]++;
  }
  cov_1ulit5jxfq().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().b[4][0]++;
    cov_1ulit5jxfq().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1ulit5jxfq().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().b[6][0]++;
    cov_1ulit5jxfq().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1ulit5jxfq().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[25]++,
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_1ulit5jxfq().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1ulit5jxfq().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1ulit5jxfq().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1ulit5jxfq().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1ulit5jxfq().b[12][0]++;
        cov_1ulit5jxfq().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1ulit5jxfq().b[12][1]++;
        cov_1ulit5jxfq().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1ulit5jxfq().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().b[14][0]++;
    cov_1ulit5jxfq().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1ulit5jxfq().b[14][1]++;
  }
  cov_1ulit5jxfq().s[35]++;
  return newObj;
}
function EditPostPage() {
  /* istanbul ignore next */
  cov_1ulit5jxfq().f[4]++;
  const params =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[36]++, (0, _navigation.useParams)());
  const router =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[37]++, (0, _navigation.useRouter)());
  const {
    addNotification
  } =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[38]++, (0, _appStore.useAppStore)());
  const [post, setPost] =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[39]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[40]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[41]++, (0, _react.useState)(null));
  const postId =
  /* istanbul ignore next */
  (cov_1ulit5jxfq().s[42]++, params.id);
  // Load post data
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[43]++;
  const loadPost = async () => {
    /* istanbul ignore next */
    cov_1ulit5jxfq().f[5]++;
    cov_1ulit5jxfq().s[44]++;
    try {
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[45]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[46]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1ulit5jxfq().s[47]++, await _services.postsService.getPost(postId));
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[48]++;
      if (
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[16][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[16][1]++, response.data)) {
        /* istanbul ignore next */
        cov_1ulit5jxfq().b[15][0]++;
        cov_1ulit5jxfq().s[49]++;
        // Check if user can edit this post
        if (!response.data.userPermissions?.canEdit) {
          /* istanbul ignore next */
          cov_1ulit5jxfq().b[17][0]++;
          cov_1ulit5jxfq().s[50]++;
          throw new Error('You do not have permission to edit this post');
        } else
        /* istanbul ignore next */
        {
          cov_1ulit5jxfq().b[17][1]++;
        }
        cov_1ulit5jxfq().s[51]++;
        setPost(response.data);
      } else {
        /* istanbul ignore next */
        cov_1ulit5jxfq().b[15][1]++;
        cov_1ulit5jxfq().s[52]++;
        throw new Error('Post not found');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1ulit5jxfq().s[53]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[18][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[18][1]++, 'Failed to load post'));
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[54]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[55]++;
      addNotification({
        type: 'error',
        title: 'Error Loading Post',
        message: errorMessage
      });
    } finally {
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[56]++;
      setIsLoading(false);
    }
  };
  // Initial load
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[57]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1ulit5jxfq().f[6]++;
    cov_1ulit5jxfq().s[58]++;
    loadPost();
  }, [postId]);
  // Handle post update
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[59]++;
  const handlePostSubmit = async postData => {
    /* istanbul ignore next */
    cov_1ulit5jxfq().f[7]++;
    cov_1ulit5jxfq().s[60]++;
    if (!post) {
      /* istanbul ignore next */
      cov_1ulit5jxfq().b[19][0]++;
      cov_1ulit5jxfq().s[61]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1ulit5jxfq().b[19][1]++;
    }
    cov_1ulit5jxfq().s[62]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1ulit5jxfq().s[63]++, await _services.postsService.updatePost(post.id, postData));
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[64]++;
      if (
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[21][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[21][1]++, response.data)) {
        /* istanbul ignore next */
        cov_1ulit5jxfq().b[20][0]++;
        cov_1ulit5jxfq().s[65]++;
        addNotification({
          type: 'success',
          title: 'Post Updated',
          message: 'Your post has been updated successfully'
        });
        // Redirect back to the post or topic
        /* istanbul ignore next */
        cov_1ulit5jxfq().s[66]++;
        if (post.topic) {
          /* istanbul ignore next */
          cov_1ulit5jxfq().b[22][0]++;
          cov_1ulit5jxfq().s[67]++;
          router.push(`/topics/${post.topic.slug}`);
        } else {
          /* istanbul ignore next */
          cov_1ulit5jxfq().b[22][1]++;
          cov_1ulit5jxfq().s[68]++;
          router.push('/dashboard');
        }
      } else {
        /* istanbul ignore next */
        cov_1ulit5jxfq().b[20][1]++;
        cov_1ulit5jxfq().s[69]++;
        throw new Error('Failed to update post');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1ulit5jxfq().s[70]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[23][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1ulit5jxfq().b[23][1]++, 'Failed to update post'));
      /* istanbul ignore next */
      cov_1ulit5jxfq().s[71]++;
      addNotification({
        type: 'error',
        title: 'Update Error',
        message: errorMessage
      });
    }
  };
  // Handle cancel
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[72]++;
  const handleCancel = () => {
    /* istanbul ignore next */
    cov_1ulit5jxfq().f[8]++;
    cov_1ulit5jxfq().s[73]++;
    if (post?.topic) {
      /* istanbul ignore next */
      cov_1ulit5jxfq().b[24][0]++;
      cov_1ulit5jxfq().s[74]++;
      router.push(`/topics/${post.topic.slug}`);
    } else {
      /* istanbul ignore next */
      cov_1ulit5jxfq().b[24][1]++;
      cov_1ulit5jxfq().s[75]++;
      router.back();
    }
  };
  /* istanbul ignore next */
  cov_1ulit5jxfq().s[76]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().b[25][0]++;
    cov_1ulit5jxfq().s[77]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "max-w-4xl mx-auto",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
        variant: "bordered",
        className: "animate-pulse",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardHeader, {
          className: "pb-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "h-8 bg-muted/20 rounded w-1/3"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.CardContent, {
          className: "space-y-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "h-4 bg-muted/20 rounded w-1/4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "h-10 bg-muted/20 rounded"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "h-4 bg-muted/20 rounded w-1/4"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "h-32 bg-muted/20 rounded"
          })]
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1ulit5jxfq().b[25][1]++;
  }
  cov_1ulit5jxfq().s[78]++;
  if (
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[27][0]++, error) ||
  /* istanbul ignore next */
  (cov_1ulit5jxfq().b[27][1]++, !post)) {
    /* istanbul ignore next */
    cov_1ulit5jxfq().b[26][0]++;
    cov_1ulit5jxfq().s[79]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "max-w-4xl mx-auto",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center py-12",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-6xl mb-4",
          children: "⚠️"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-xl font-bold text-light-text mb-2",
          children: "Unable to Edit Post"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light mb-6",
          children:
          /* istanbul ignore next */
          (cov_1ulit5jxfq().b[28][0]++, error) ||
          /* istanbul ignore next */
          (cov_1ulit5jxfq().b[28][1]++, 'The post you are trying to edit does not exist or you do not have permission to edit it.')
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-center space-x-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            variant: "ghost",
            onClick: () => {
              /* istanbul ignore next */
              cov_1ulit5jxfq().f[9]++;
              cov_1ulit5jxfq().s[80]++;
              return router.back();
            },
            children: "Go Back"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            variant: "primary",
            onClick: loadPost,
            children: "Try Again"
          })]
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1ulit5jxfq().b[26][1]++;
  }
  cov_1ulit5jxfq().s[81]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "max-w-4xl mx-auto space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-light-text",
          children: "Edit Post"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light mt-1",
          children: "Make changes to your post"
        }),
        /* istanbul ignore next */
        (cov_1ulit5jxfq().b[29][0]++, post.topic) &&
        /* istanbul ignore next */
        (cov_1ulit5jxfq().b[29][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
          className: "text-sm text-muted-light mt-1",
          children: ["in", ' ', /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
            className: "text-overlord-red hover:underline cursor-pointer",
            onClick: () => {
              /* istanbul ignore next */
              cov_1ulit5jxfq().f[10]++;
              cov_1ulit5jxfq().s[82]++;
              return router.push(`/topics/${post.topic.slug}`);
            },
            children: post.topic.title
          })]
        }))]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "ghost",
        onClick: handleCancel,
        children: "Cancel"
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_PostForm.PostForm, {
      onSubmit: handlePostSubmit,
      onCancel: handleCancel,
      initialData: post,
      mode: "edit",
      showPreview: true
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,