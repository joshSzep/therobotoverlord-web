7c047988322c9b7d3bcc18abd67d2635
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Button", {
    enumerable: true,
    get: function() {
        return Button;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = require("react");
const _utils = require("../../lib/utils");
const Button = /*#__PURE__*/ (0, _react.forwardRef)(({ className, variant = 'primary', size = 'md', glow = false, ...props }, ref)=>{
    const baseClasses = 'font-bold transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-overlord-red focus:ring-offset-2 focus:ring-offset-background disabled:opacity-50 disabled:cursor-not-allowed rounded-md transform active:scale-95 hover:scale-105';
    const variants = {
        primary: 'bg-overlord-red hover:bg-authority-red text-light-text',
        secondary: 'border border-muted-light hover:bg-surface-dark text-muted-light hover:text-light-text',
        danger: 'bg-rejected-red hover:bg-red-600 text-light-text',
        ghost: 'hover:bg-surface-dark text-muted-light hover:text-light-text'
    };
    const sizes = {
        sm: 'px-4 py-2 text-sm',
        md: 'px-6 py-3 text-base',
        lg: 'px-8 py-4 text-lg'
    };
    const glowClass = glow ? 'glow-red' : '';
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
        className: (0, _utils.cn)(baseClasses, variants[variant], sizes[size], glowClass, className),
        ref: ref,
        ...props
    });
});
Button.displayName = 'Button';

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3Noc3plcC9jb2RlL3RoZXJvYm90b3ZlcmxvcmQtbW9uby90aGVyb2JvdG92ZXJsb3JkLXdlYi9zcmMvY29tcG9uZW50cy91aS9CdXR0b24udHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1dHRvbkhUTUxBdHRyaWJ1dGVzLCBmb3J3YXJkUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY24gfSBmcm9tICdAL2xpYi91dGlscyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQnV0dG9uUHJvcHMgZXh0ZW5kcyBCdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4ge1xuICB2YXJpYW50PzogJ3ByaW1hcnknIHwgJ3NlY29uZGFyeScgfCAnZGFuZ2VyJyB8ICdnaG9zdCc7XG4gIHNpemU/OiAnc20nIHwgJ21kJyB8ICdsZyc7XG4gIGdsb3c/OiBib29sZWFuO1xuICAnYXJpYS1sYWJlbCc/OiBzdHJpbmc7XG4gICdhcmlhLWRlc2NyaWJlZGJ5Jz86IHN0cmluZztcbiAgJ2FyaWEtcHJlc3NlZCc/OiBib29sZWFuO1xuICAnYXJpYS1leHBhbmRlZCc/OiBib29sZWFuO1xuICAnYXJpYS1jb250cm9scyc/OiBzdHJpbmc7XG59XG5cbmNvbnN0IEJ1dHRvbiA9IGZvcndhcmRSZWY8SFRNTEJ1dHRvbkVsZW1lbnQsIEJ1dHRvblByb3BzPihcbiAgKHsgY2xhc3NOYW1lLCB2YXJpYW50ID0gJ3ByaW1hcnknLCBzaXplID0gJ21kJywgZ2xvdyA9IGZhbHNlLCAuLi5wcm9wcyB9LCByZWYpID0+IHtcbiAgICBjb25zdCBiYXNlQ2xhc3NlcyA9ICdmb250LWJvbGQgdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMjAwIGZvY3VzOm91dGxpbmUtbm9uZSBmb2N1czpyaW5nLTIgZm9jdXM6cmluZy1vdmVybG9yZC1yZWQgZm9jdXM6cmluZy1vZmZzZXQtMiBmb2N1czpyaW5nLW9mZnNldC1iYWNrZ3JvdW5kIGRpc2FibGVkOm9wYWNpdHktNTAgZGlzYWJsZWQ6Y3Vyc29yLW5vdC1hbGxvd2VkIHJvdW5kZWQtbWQgdHJhbnNmb3JtIGFjdGl2ZTpzY2FsZS05NSBob3ZlcjpzY2FsZS0xMDUnO1xuICAgIFxuICAgIGNvbnN0IHZhcmlhbnRzID0ge1xuICAgICAgcHJpbWFyeTogJ2JnLW92ZXJsb3JkLXJlZCBob3ZlcjpiZy1hdXRob3JpdHktcmVkIHRleHQtbGlnaHQtdGV4dCcsXG4gICAgICBzZWNvbmRhcnk6ICdib3JkZXIgYm9yZGVyLW11dGVkLWxpZ2h0IGhvdmVyOmJnLXN1cmZhY2UtZGFyayB0ZXh0LW11dGVkLWxpZ2h0IGhvdmVyOnRleHQtbGlnaHQtdGV4dCcsXG4gICAgICBkYW5nZXI6ICdiZy1yZWplY3RlZC1yZWQgaG92ZXI6YmctcmVkLTYwMCB0ZXh0LWxpZ2h0LXRleHQnLFxuICAgICAgZ2hvc3Q6ICdob3ZlcjpiZy1zdXJmYWNlLWRhcmsgdGV4dC1tdXRlZC1saWdodCBob3Zlcjp0ZXh0LWxpZ2h0LXRleHQnXG4gICAgfTtcblxuICAgIGNvbnN0IHNpemVzID0ge1xuICAgICAgc206ICdweC00IHB5LTIgdGV4dC1zbScsXG4gICAgICBtZDogJ3B4LTYgcHktMyB0ZXh0LWJhc2UnLFxuICAgICAgbGc6ICdweC04IHB5LTQgdGV4dC1sZydcbiAgICB9O1xuXG4gICAgY29uc3QgZ2xvd0NsYXNzID0gZ2xvdyA/ICdnbG93LXJlZCcgOiAnJztcblxuICAgIHJldHVybiAoXG4gICAgICA8YnV0dG9uXG4gICAgICAgIGNsYXNzTmFtZT17Y24oXG4gICAgICAgICAgYmFzZUNsYXNzZXMsXG4gICAgICAgICAgdmFyaWFudHNbdmFyaWFudF0sXG4gICAgICAgICAgc2l6ZXNbc2l6ZV0sXG4gICAgICAgICAgZ2xvd0NsYXNzLFxuICAgICAgICAgIGNsYXNzTmFtZVxuICAgICAgICApfVxuICAgICAgICByZWY9e3JlZn1cbiAgICAgICAgey4uLnByb3BzfVxuICAgICAgLz5cbiAgICApO1xuICB9XG4pO1xuXG5CdXR0b24uZGlzcGxheU5hbWUgPSAnQnV0dG9uJztcblxuZXhwb3J0IHsgQnV0dG9uIH07XG4iXSwibmFtZXMiOlsiQnV0dG9uIiwiZm9yd2FyZFJlZiIsImNsYXNzTmFtZSIsInZhcmlhbnQiLCJzaXplIiwiZ2xvdyIsInByb3BzIiwicmVmIiwiYmFzZUNsYXNzZXMiLCJ2YXJpYW50cyIsInByaW1hcnkiLCJzZWNvbmRhcnkiLCJkYW5nZXIiLCJnaG9zdCIsInNpemVzIiwic20iLCJtZCIsImxnIiwiZ2xvd0NsYXNzIiwiYnV0dG9uIiwiY24iLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7OzsrQkFtRFNBOzs7ZUFBQUE7Ozs7dUJBbkR3Qzt1QkFDOUI7QUFhbkIsTUFBTUEsdUJBQVNDLElBQUFBLGlCQUFVLEVBQ3ZCLENBQUMsRUFBRUMsU0FBUyxFQUFFQyxVQUFVLFNBQVMsRUFBRUMsT0FBTyxJQUFJLEVBQUVDLE9BQU8sS0FBSyxFQUFFLEdBQUdDLE9BQU8sRUFBRUM7SUFDeEUsTUFBTUMsY0FBYztJQUVwQixNQUFNQyxXQUFXO1FBQ2ZDLFNBQVM7UUFDVEMsV0FBVztRQUNYQyxRQUFRO1FBQ1JDLE9BQU87SUFDVDtJQUVBLE1BQU1DLFFBQVE7UUFDWkMsSUFBSTtRQUNKQyxJQUFJO1FBQ0pDLElBQUk7SUFDTjtJQUVBLE1BQU1DLFlBQVliLE9BQU8sYUFBYTtJQUV0QyxxQkFDRSxxQkFBQ2M7UUFDQ2pCLFdBQVdrQixJQUFBQSxTQUFFLEVBQ1haLGFBQ0FDLFFBQVEsQ0FBQ04sUUFBUSxFQUNqQlcsS0FBSyxDQUFDVixLQUFLLEVBQ1hjLFdBQ0FoQjtRQUVGSyxLQUFLQTtRQUNKLEdBQUdELEtBQUs7O0FBR2Y7QUFHRk4sT0FBT3FCLFdBQVcsR0FBRyJ9