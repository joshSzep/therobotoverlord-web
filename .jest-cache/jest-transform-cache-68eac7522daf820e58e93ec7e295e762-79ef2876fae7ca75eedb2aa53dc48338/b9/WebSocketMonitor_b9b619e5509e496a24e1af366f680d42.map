{"version":3,"names":["WebSocketHealth","cov_241ldb71oe","f","s","WebSocketMonitor","showDetails","b","className","connected","subscribe","unsubscribe","_WebSocketProvider","useWebSocketContext","stats","setStats","_react","useState","connectionTime","reconnectCount","messagesSent","messagesReceived","latency","lastPing","subscriptions","channels","isExpanded","setIsExpanded","useEffect","pingInterval","connectionStartTime","Date","now","updateStats","prev","handleMessage","handleConnectionStats","data","setInterval","pingStart","setTimeout","clearInterval","getConnectionStatusColor","getConnectionStatusText","formatDuration","ms","seconds","Math","floor","minutes","hours","formatLatency","toFixed","_jsxruntime","jsxs","onClick","jsx","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","length","map","sub","index","channel","toLocaleTimeString","healthScore","setHealthScore","issues","setIssues","score","currentIssues","push","getHealthColor","getHealthStatus","join"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/WebSocketMonitor.tsx"],"sourcesContent":["/**\n * WebSocket connection monitoring and performance dashboard component.\n */\n\n'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { useWebSocketContext } from './WebSocketProvider';\n\ninterface ConnectionStats {\n  connected: boolean;\n  connectionTime: number | null;\n  reconnectCount: number;\n  messagesSent: number;\n  messagesReceived: number;\n  latency: number | null;\n  lastPing: number | null;\n  subscriptions: string[];\n  channels: string[];\n}\n\ninterface WebSocketMonitorProps {\n  showDetails?: boolean;\n  className?: string;\n}\n\nexport function WebSocketMonitor({ showDetails = false, className = '' }: WebSocketMonitorProps) {\n  const { connected, subscribe, unsubscribe } = useWebSocketContext();\n  const [stats, setStats] = useState<ConnectionStats>({\n    connected: false,\n    connectionTime: null,\n    reconnectCount: 0,\n    messagesSent: 0,\n    messagesReceived: 0,\n    latency: null,\n    lastPing: null,\n    subscriptions: [],\n    channels: []\n  });\n\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  useEffect(() => {\n    let pingInterval: NodeJS.Timeout;\n    let connectionStartTime = Date.now();\n\n    const updateStats = () => {\n      setStats(prev => ({\n        ...prev,\n        connected,\n        connectionTime: connected ? connectionStartTime : null,\n        lastPing: Date.now()\n      }));\n    };\n\n    const handleMessage = () => {\n      setStats(prev => ({\n        ...prev,\n        messagesReceived: prev.messagesReceived + 1\n      }));\n    };\n\n    const handleConnectionStats = (data: any) => {\n      setStats(prev => ({\n        ...prev,\n        ...data\n      }));\n    };\n\n    if (connected) {\n      updateStats();\n      pingInterval = setInterval(() => {\n        const pingStart = Date.now();\n        // Send ping and measure latency\n        setStats(prev => ({\n          ...prev,\n          messagesSent: prev.messagesSent + 1\n        }));\n        \n        // Simulate latency measurement (in real implementation, this would be handled by the WebSocket client)\n        setTimeout(() => {\n          setStats(prev => ({\n            ...prev,\n            latency: Date.now() - pingStart,\n            lastPing: Date.now()\n          }));\n        }, 10);\n      }, 30000); // Ping every 30 seconds\n\n      subscribe('connection_stats', handleConnectionStats);\n      subscribe('*', handleMessage); // Listen to all messages for counting\n    } else {\n      connectionStartTime = Date.now();\n      setStats(prev => ({\n        ...prev,\n        connected: false,\n        connectionTime: null,\n        reconnectCount: prev.reconnectCount + (prev.connected ? 1 : 0)\n      }));\n    }\n\n    return () => {\n      if (pingInterval) clearInterval(pingInterval);\n      unsubscribe('connection_stats', handleConnectionStats);\n      unsubscribe('*', handleMessage);\n    };\n  }, [connected, subscribe, unsubscribe]);\n\n  const getConnectionStatusColor = (): string => {\n    if (!stats.connected) return 'text-red-500';\n    if (stats.latency && stats.latency > 1000) return 'text-yellow-500';\n    return 'text-green-500';\n  };\n\n  const getConnectionStatusText = (): string => {\n    if (!stats.connected) return 'Disconnected';\n    if (stats.latency && stats.latency > 1000) return 'Slow Connection';\n    return 'Connected';\n  };\n\n  const formatDuration = (ms: number): string => {\n    const seconds = Math.floor(ms / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n\n    if (hours > 0) return `${hours}h ${minutes % 60}m`;\n    if (minutes > 0) return `${minutes}m ${seconds % 60}s`;\n    return `${seconds}s`;\n  };\n\n  const formatLatency = (ms: number | null): string => {\n    if (ms === null) return 'N/A';\n    if (ms < 100) return `${ms}ms`;\n    if (ms < 1000) return `${ms}ms`;\n    return `${(ms / 1000).toFixed(1)}s`;\n  };\n\n  return (\n    <div className={`bg-white border border-gray-200 rounded-lg ${className}`}>\n      <div \n        className=\"p-3 cursor-pointer flex items-center justify-between\"\n        onClick={() => setIsExpanded(!isExpanded)}\n      >\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-2 h-2 rounded-full ${stats.connected ? 'bg-green-400' : 'bg-red-400'}`}></div>\n          <span className={`text-sm font-medium ${getConnectionStatusColor()}`}>\n            {getConnectionStatusText()}\n          </span>\n          {stats.latency && (\n            <span className=\"text-xs text-gray-500\">\n              ({formatLatency(stats.latency)})\n            </span>\n          )}\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          {stats.reconnectCount > 0 && (\n            <span className=\"text-xs text-orange-500\">\n              {stats.reconnectCount} reconnects\n            </span>\n          )}\n          <svg \n            className={`w-4 h-4 text-gray-400 transform transition-transform ${isExpanded ? 'rotate-180' : ''}`}\n            fill=\"none\" \n            stroke=\"currentColor\" \n            viewBox=\"0 0 24 24\"\n          >\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n          </svg>\n        </div>\n      </div>\n\n      {(isExpanded || showDetails) && (\n        <div className=\"px-3 pb-3 border-t border-gray-100\">\n          <div className=\"grid grid-cols-2 gap-4 mt-3\">\n            <div>\n              <div className=\"text-xs text-gray-500 mb-1\">Connection Time</div>\n              <div className=\"text-sm font-medium\">\n                {stats.connectionTime ? formatDuration(Date.now() - stats.connectionTime) : 'N/A'}\n              </div>\n            </div>\n            <div>\n              <div className=\"text-xs text-gray-500 mb-1\">Latency</div>\n              <div className=\"text-sm font-medium\">\n                {formatLatency(stats.latency)}\n              </div>\n            </div>\n            <div>\n              <div className=\"text-xs text-gray-500 mb-1\">Messages Sent</div>\n              <div className=\"text-sm font-medium\">{stats.messagesSent}</div>\n            </div>\n            <div>\n              <div className=\"text-xs text-gray-500 mb-1\">Messages Received</div>\n              <div className=\"text-sm font-medium\">{stats.messagesReceived}</div>\n            </div>\n          </div>\n\n          {stats.subscriptions.length > 0 && (\n            <div className=\"mt-4\">\n              <div className=\"text-xs text-gray-500 mb-2\">Active Subscriptions</div>\n              <div className=\"flex flex-wrap gap-1\">\n                {stats.subscriptions.map((sub, index) => (\n                  <span \n                    key={index}\n                    className=\"px-2 py-1 text-xs bg-blue-100 text-blue-700 rounded\"\n                  >\n                    {sub}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {stats.channels.length > 0 && (\n            <div className=\"mt-3\">\n              <div className=\"text-xs text-gray-500 mb-2\">Subscribed Channels</div>\n              <div className=\"flex flex-wrap gap-1\">\n                {stats.channels.map((channel, index) => (\n                  <span \n                    key={index}\n                    className=\"px-2 py-1 text-xs bg-green-100 text-green-700 rounded\"\n                  >\n                    {channel}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {stats.lastPing && (\n            <div className=\"mt-3 text-xs text-gray-500\">\n              Last ping: {new Date(stats.lastPing).toLocaleTimeString()}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\ninterface WebSocketHealthProps {\n  className?: string;\n}\n\nexport function WebSocketHealth({ className = '' }: WebSocketHealthProps) {\n  const { connected } = useWebSocketContext();\n  const [healthScore, setHealthScore] = useState<number>(100);\n  const [issues, setIssues] = useState<string[]>([]);\n\n  useEffect(() => {\n    let score = 100;\n    const currentIssues: string[] = [];\n\n    if (!connected) {\n      score -= 50;\n      currentIssues.push('Connection lost');\n    }\n\n    // Add more health checks here based on your requirements\n    // For example: high latency, frequent reconnects, etc.\n\n    setHealthScore(score);\n    setIssues(currentIssues);\n  }, [connected]);\n\n  const getHealthColor = (): string => {\n    if (healthScore >= 80) return 'text-green-500';\n    if (healthScore >= 60) return 'text-yellow-500';\n    return 'text-red-500';\n  };\n\n  const getHealthStatus = (): string => {\n    if (healthScore >= 80) return 'Healthy';\n    if (healthScore >= 60) return 'Warning';\n    return 'Critical';\n  };\n\n  return (\n    <div className={`flex items-center space-x-2 ${className}`}>\n      <div className=\"flex items-center space-x-1\">\n        <div className={`w-2 h-2 rounded-full ${healthScore >= 80 ? 'bg-green-400' : healthScore >= 60 ? 'bg-yellow-400' : 'bg-red-400'}`}></div>\n        <span className={`text-sm font-medium ${getHealthColor()}`}>\n          {getHealthStatus()}\n        </span>\n        <span className=\"text-xs text-gray-500\">\n          ({healthScore}%)\n        </span>\n      </div>\n      {issues.length > 0 && (\n        <div className=\"text-xs text-red-500\">\n          {issues.join(', ')}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"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","ignoreList":[]}