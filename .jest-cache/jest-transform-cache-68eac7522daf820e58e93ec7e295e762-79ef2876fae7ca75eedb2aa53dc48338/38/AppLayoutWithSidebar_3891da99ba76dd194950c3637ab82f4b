18578303d39b730813c7535fc791d1e3
/**
 * Application layout with optional sidebar
 * Provides layout structure with toggleable sidebar navigation
 */ 'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AppLayoutWithSidebar", {
    enumerable: true,
    get: function() {
        return AppLayoutWithSidebar;
    }
});
const _jsxruntime = require("react/jsx-runtime");
const _react = /*#__PURE__*/ _interop_require_default(require("react"));
const _Header = require("../navigation/Header");
const _Sidebar = require("../navigation/Sidebar");
const _appStore = require("../../stores/appStore");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function AppLayoutWithSidebar({ children, showHeader = true, showSidebar = true, sidebarOpen: propSidebarOpen }) {
    const { ui, setSidebarOpen, toggleSidebar } = (0, _appStore.useUI)();
    const sidebarOpen = propSidebarOpen ?? ui.sidebarOpen;
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
        className: "min-h-screen bg-background flex",
        children: [
            showSidebar && /*#__PURE__*/ (0, _jsxruntime.jsx)(_Sidebar.Sidebar, {
                isOpen: sidebarOpen,
                onClose: ()=>setSidebarOpen(false)
            }),
            /*#__PURE__*/ (0, _jsxruntime.jsxs)("div", {
                className: "flex-1 flex flex-col",
                children: [
                    showHeader && /*#__PURE__*/ (0, _jsxruntime.jsx)(_Header.Header, {
                        className: showSidebar ? 'lg:pl-0' : ''
                    }),
                    /*#__PURE__*/ (0, _jsxruntime.jsx)("main", {
                        className: "flex-1",
                        children: children
                    }),
                    showSidebar && /*#__PURE__*/ (0, _jsxruntime.jsx)("button", {
                        onClick: toggleSidebar,
                        className: "fixed bottom-4 left-4 lg:hidden z-30 p-3 bg-overlord-red text-light-text rounded-full shadow-lg hover:bg-authority-red transition-colors",
                        "aria-label": "Toggle sidebar",
                        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("svg", {
                            className: "w-6 h-6",
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24",
                            children: /*#__PURE__*/ (0, _jsxruntime.jsx)("path", {
                                strokeLinecap: "round",
                                strokeLinejoin: "round",
                                strokeWidth: 2,
                                d: "M4 6h16M4 12h16M4 18h16"
                            })
                        })
                    })
                ]
            })
        ]
    });
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3Noc3plcC9jb2RlL3RoZXJvYm90b3ZlcmxvcmQtbW9uby90aGVyb2JvdG92ZXJsb3JkLXdlYi9zcmMvY29tcG9uZW50cy9sYXlvdXQvQXBwTGF5b3V0V2l0aFNpZGViYXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQXBwbGljYXRpb24gbGF5b3V0IHdpdGggb3B0aW9uYWwgc2lkZWJhclxuICogUHJvdmlkZXMgbGF5b3V0IHN0cnVjdHVyZSB3aXRoIHRvZ2dsZWFibGUgc2lkZWJhciBuYXZpZ2F0aW9uXG4gKi9cblxuJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSGVhZGVyIH0gZnJvbSAnQC9jb21wb25lbnRzL25hdmlnYXRpb24vSGVhZGVyJztcbmltcG9ydCB7IFNpZGViYXIgfSBmcm9tICdAL2NvbXBvbmVudHMvbmF2aWdhdGlvbi9TaWRlYmFyJztcbmltcG9ydCB7IHVzZVVJIH0gZnJvbSAnQC9zdG9yZXMvYXBwU3RvcmUnO1xuXG5pbnRlcmZhY2UgQXBwTGF5b3V0V2l0aFNpZGViYXJQcm9wcyB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIHNob3dIZWFkZXI/OiBib29sZWFuO1xuICBzaG93U2lkZWJhcj86IGJvb2xlYW47XG4gIHNpZGViYXJPcGVuPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEFwcExheW91dFdpdGhTaWRlYmFyKHsgXG4gIGNoaWxkcmVuLCBcbiAgc2hvd0hlYWRlciA9IHRydWUsXG4gIHNob3dTaWRlYmFyID0gdHJ1ZSxcbiAgc2lkZWJhck9wZW46IHByb3BTaWRlYmFyT3BlblxufTogQXBwTGF5b3V0V2l0aFNpZGViYXJQcm9wcykge1xuICBjb25zdCB7IHVpLCBzZXRTaWRlYmFyT3BlbiwgdG9nZ2xlU2lkZWJhciB9ID0gdXNlVUkoKTtcbiAgY29uc3Qgc2lkZWJhck9wZW4gPSBwcm9wU2lkZWJhck9wZW4gPz8gdWkuc2lkZWJhck9wZW47XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cIm1pbi1oLXNjcmVlbiBiZy1iYWNrZ3JvdW5kIGZsZXhcIj5cbiAgICAgIHsvKiBTaWRlYmFyICovfVxuICAgICAge3Nob3dTaWRlYmFyICYmIChcbiAgICAgICAgPFNpZGViYXIgXG4gICAgICAgICAgaXNPcGVuPXtzaWRlYmFyT3Blbn0gXG4gICAgICAgICAgb25DbG9zZT17KCkgPT4gc2V0U2lkZWJhck9wZW4oZmFsc2UpfSBcbiAgICAgICAgLz5cbiAgICAgICl9XG5cbiAgICAgIHsvKiBNYWluIENvbnRlbnQgQXJlYSAqL31cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleC0xIGZsZXggZmxleC1jb2xcIj5cbiAgICAgICAgey8qIEhlYWRlciAqL31cbiAgICAgICAge3Nob3dIZWFkZXIgJiYgKFxuICAgICAgICAgIDxIZWFkZXIgXG4gICAgICAgICAgICBjbGFzc05hbWU9e3Nob3dTaWRlYmFyID8gJ2xnOnBsLTAnIDogJyd9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cblxuICAgICAgICB7LyogTWFpbiBDb250ZW50ICovfVxuICAgICAgICA8bWFpbiBjbGFzc05hbWU9XCJmbGV4LTFcIj5cbiAgICAgICAgICB7Y2hpbGRyZW59XG4gICAgICAgIDwvbWFpbj5cblxuICAgICAgICB7LyogU2lkZWJhciBUb2dnbGUgQnV0dG9uIChNb2JpbGUpICovfVxuICAgICAgICB7c2hvd1NpZGViYXIgJiYgKFxuICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgIG9uQ2xpY2s9e3RvZ2dsZVNpZGViYXJ9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJmaXhlZCBib3R0b20tNCBsZWZ0LTQgbGc6aGlkZGVuIHotMzAgcC0zIGJnLW92ZXJsb3JkLXJlZCB0ZXh0LWxpZ2h0LXRleHQgcm91bmRlZC1mdWxsIHNoYWRvdy1sZyBob3ZlcjpiZy1hdXRob3JpdHktcmVkIHRyYW5zaXRpb24tY29sb3JzXCJcbiAgICAgICAgICAgIGFyaWEtbGFiZWw9XCJUb2dnbGUgc2lkZWJhclwiXG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHN2ZyBjbGFzc05hbWU9XCJ3LTYgaC02XCIgZmlsbD1cIm5vbmVcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCI+XG4gICAgICAgICAgICAgIDxwYXRoIHN0cm9rZUxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZUxpbmVqb2luPVwicm91bmRcIiBzdHJva2VXaWR0aD17Mn0gZD1cIk00IDZoMTZNNCAxMmgxNk00IDE4aDE2XCIgLz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICApfVxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59XG4iXSwibmFtZXMiOlsiQXBwTGF5b3V0V2l0aFNpZGViYXIiLCJjaGlsZHJlbiIsInNob3dIZWFkZXIiLCJzaG93U2lkZWJhciIsInNpZGViYXJPcGVuIiwicHJvcFNpZGViYXJPcGVuIiwidWkiLCJzZXRTaWRlYmFyT3BlbiIsInRvZ2dsZVNpZGViYXIiLCJ1c2VVSSIsImRpdiIsImNsYXNzTmFtZSIsIlNpZGViYXIiLCJpc09wZW4iLCJvbkNsb3NlIiwiSGVhZGVyIiwibWFpbiIsImJ1dHRvbiIsIm9uQ2xpY2siLCJhcmlhLWxhYmVsIiwic3ZnIiwiZmlsbCIsInN0cm9rZSIsInZpZXdCb3giLCJwYXRoIiwic3Ryb2tlTGluZWNhcCIsInN0cm9rZUxpbmVqb2luIiwic3Ryb2tlV2lkdGgiLCJkIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0MsR0FFRDs7Ozs7K0JBY2dCQTs7O2VBQUFBOzs7OzhEQVpFO3dCQUNLO3lCQUNDOzBCQUNGOzs7Ozs7QUFTZixTQUFTQSxxQkFBcUIsRUFDbkNDLFFBQVEsRUFDUkMsYUFBYSxJQUFJLEVBQ2pCQyxjQUFjLElBQUksRUFDbEJDLGFBQWFDLGVBQWUsRUFDRjtJQUMxQixNQUFNLEVBQUVDLEVBQUUsRUFBRUMsY0FBYyxFQUFFQyxhQUFhLEVBQUUsR0FBR0MsSUFBQUEsZUFBSztJQUNuRCxNQUFNTCxjQUFjQyxtQkFBbUJDLEdBQUdGLFdBQVc7SUFFckQscUJBQ0Usc0JBQUNNO1FBQUlDLFdBQVU7O1lBRVpSLDZCQUNDLHFCQUFDUyxnQkFBTztnQkFDTkMsUUFBUVQ7Z0JBQ1JVLFNBQVMsSUFBTVAsZUFBZTs7MEJBS2xDLHNCQUFDRztnQkFBSUMsV0FBVTs7b0JBRVpULDRCQUNDLHFCQUFDYSxjQUFNO3dCQUNMSixXQUFXUixjQUFjLFlBQVk7O2tDQUt6QyxxQkFBQ2E7d0JBQUtMLFdBQVU7a0NBQ2JWOztvQkFJRkUsNkJBQ0MscUJBQUNjO3dCQUNDQyxTQUFTVjt3QkFDVEcsV0FBVTt3QkFDVlEsY0FBVztrQ0FFWCxjQUFBLHFCQUFDQzs0QkFBSVQsV0FBVTs0QkFBVVUsTUFBSzs0QkFBT0MsUUFBTzs0QkFBZUMsU0FBUTtzQ0FDakUsY0FBQSxxQkFBQ0M7Z0NBQUtDLGVBQWM7Z0NBQVFDLGdCQUFlO2dDQUFRQyxhQUFhO2dDQUFHQyxHQUFFOzs7Ozs7OztBQU9uRiJ9