{"version":3,"names":["cov_8wgtj74vi","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","LeaderboardService","leaderboardService","_BaseService","BaseService","constructor","getLeaderboard","filters","params","buildParams","undefined","getPaginated","getUserRank","userId","category","get","getTopPerformers","limit","getLeaderboardStats","getUserRankingHistory","timeRange","getActiveCompetitions","getCompetitions","status","page","getCompetition","id","joinCompetition","post","leaveCompetition","getCompetitionLeaderboard","getAchievements","getUserAchievements","getAchievementProgress","getRecentAchievements","getRareAchievements","getUserStreaks","getTopStreaks","createCompetition","data","updateCompetition","patch","deleteCompetition","delete","createAchievement","updateAchievement","deleteAchievement","awardAchievement","achievementId","reason","recalculateLeaderboard","getLeaderboardAnalytics"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/LeaderboardService.ts"],"sourcesContent":["/**\n * Leaderboard service for The Robot Overlord\n * Handles leaderboard rankings, competitions, and achievement tracking\n */\n\nimport { BaseService } from './BaseService';\nimport { ApiResponse, PaginatedResponse } from '@/types/api';\nimport { User } from '@/types/user';\n\nexport interface LeaderboardEntry {\n  rank: number;\n  user: {\n    id: string;\n    username: string;\n    firstName?: string;\n    lastName?: string;\n    avatar?: string;\n    role: string;\n    status: string;\n  };\n  score: number;\n  previousRank?: number;\n  rankChange?: number;\n  badges: Array<{\n    id: string;\n    name: string;\n    icon: string;\n    rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n  }>;\n  stats: {\n    postsCreated: number;\n    topicsCreated: number;\n    upvotesReceived: number;\n    loyaltyScore: number;\n    streakDays: number;\n  };\n}\n\nexport interface LeaderboardFilters {\n  timeRange?: 'day' | 'week' | 'month' | 'quarter' | 'year' | 'all';\n  category?: 'overall' | 'posts' | 'topics' | 'engagement' | 'moderation' | 'loyalty';\n  role?: 'citizen' | 'moderator' | 'admin';\n  minScore?: number;\n  page?: number;\n  limit?: number;\n}\n\nexport interface Competition {\n  id: string;\n  title: string;\n  description: string;\n  type: 'weekly' | 'monthly' | 'seasonal' | 'special';\n  category: 'posts' | 'topics' | 'engagement' | 'loyalty' | 'moderation';\n  status: 'upcoming' | 'active' | 'ended';\n  startDate: string;\n  endDate: string;\n  participantCount: number;\n  prizes: Array<{\n    rank: number;\n    title: string;\n    description: string;\n    badge?: string;\n    loyaltyBonus?: number;\n  }>;\n  rules: string[];\n  currentLeader?: {\n    userId: string;\n    username: string;\n    score: number;\n  };\n}\n\nexport interface Achievement {\n  id: string;\n  name: string;\n  description: string;\n  icon: string;\n  category: 'posting' | 'engagement' | 'social' | 'loyalty' | 'moderation' | 'special';\n  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n  requirements: Array<{\n    type: 'posts_created' | 'upvotes_received' | 'topics_created' | 'days_active' | 'loyalty_score';\n    target: number;\n    timeframe?: 'day' | 'week' | 'month' | 'all';\n  }>;\n  rewards: {\n    loyaltyPoints: number;\n    badge?: string;\n    title?: string;\n  };\n  unlockedBy: number;\n  isSecret: boolean;\n}\n\nexport class LeaderboardService extends BaseService {\n  constructor() {\n    super('/leaderboard');\n  }\n\n  /**\n   * Get main leaderboard with filtering\n   */\n  async getLeaderboard(filters?: LeaderboardFilters): Promise<PaginatedResponse<LeaderboardEntry>> {\n    const params = filters ? this.buildParams(filters) : undefined;\n    return this.getPaginated<LeaderboardEntry>('', params);\n  }\n\n  /**\n   * Get user's leaderboard position\n   */\n  async getUserRank(userId: string, category = 'overall'): Promise<ApiResponse<{\n    rank: number;\n    score: number;\n    totalParticipants: number;\n    percentile: number;\n    category: string;\n    previousRank?: number;\n    rankChange?: number;\n  }>> {\n    return this.get(`/user/${userId}`, { category });\n  }\n\n  /**\n   * Get top performers in specific categories\n   */\n  async getTopPerformers(category: string, limit = 10): Promise<ApiResponse<LeaderboardEntry[]>> {\n    return this.get('/top', { category, limit });\n  }\n\n  /**\n   * Get leaderboard statistics\n   */\n  async getLeaderboardStats(): Promise<ApiResponse<{\n    totalParticipants: number;\n    averageScore: number;\n    topScore: number;\n    categoryBreakdown: Record<string, number>;\n    recentActivity: Array<{\n      userId: string;\n      username: string;\n      action: string;\n      points: number;\n      timestamp: string;\n    }>;\n  }>> {\n    return this.get('/stats');\n  }\n\n  /**\n   * Get user's ranking history\n   */\n  async getUserRankingHistory(userId: string, timeRange = 'month'): Promise<ApiResponse<Array<{\n    date: string;\n    rank: number;\n    score: number;\n    category: string;\n  }>>> {\n    return this.get(`/user/${userId}/history`, { timeRange });\n  }\n\n  // Competitions\n\n  /**\n   * Get active competitions\n   */\n  async getActiveCompetitions(): Promise<ApiResponse<Competition[]>> {\n    return this.get('/competitions/active');\n  }\n\n  /**\n   * Get all competitions\n   */\n  async getCompetitions(status?: Competition['status'], page = 1, limit = 20): Promise<PaginatedResponse<Competition>> {\n    const params = status ? { status, page, limit } : { page, limit };\n    return this.getPaginated<Competition>('/competitions', params);\n  }\n\n  /**\n   * Get competition details\n   */\n  async getCompetition(id: string): Promise<ApiResponse<Competition & {\n    leaderboard: LeaderboardEntry[];\n    userParticipation?: {\n      isParticipating: boolean;\n      currentRank?: number;\n      currentScore?: number;\n    };\n  }>> {\n    return this.get(`/competitions/${id}`);\n  }\n\n  /**\n   * Join competition\n   */\n  async joinCompetition(id: string): Promise<ApiResponse<{ message: string; participating: boolean }>> {\n    return this.post(`/competitions/${id}/join`);\n  }\n\n  /**\n   * Leave competition\n   */\n  async leaveCompetition(id: string): Promise<ApiResponse<{ message: string; participating: boolean }>> {\n    return this.post(`/competitions/${id}/leave`);\n  }\n\n  /**\n   * Get competition leaderboard\n   */\n  async getCompetitionLeaderboard(id: string, page = 1, limit = 50): Promise<PaginatedResponse<LeaderboardEntry>> {\n    return this.getPaginated<LeaderboardEntry>(`/competitions/${id}/leaderboard`, { page, limit });\n  }\n\n  // Achievements\n\n  /**\n   * Get all achievements\n   */\n  async getAchievements(category?: Achievement['category']): Promise<ApiResponse<Achievement[]>> {\n    const params = category ? { category } : undefined;\n    return this.get('/achievements', params);\n  }\n\n  /**\n   * Get user's achievements\n   */\n  async getUserAchievements(userId: string): Promise<ApiResponse<Array<Achievement & {\n    unlockedAt: string;\n    progress?: {\n      current: number;\n      target: number;\n      percentage: number;\n    };\n  }>>> {\n    return this.get(`/achievements/user/${userId}`);\n  }\n\n  /**\n   * Get achievement progress for current user\n   */\n  async getAchievementProgress(): Promise<ApiResponse<Array<{\n    achievement: Achievement;\n    progress: {\n      current: number;\n      target: number;\n      percentage: number;\n    };\n    isUnlocked: boolean;\n    unlockedAt?: string;\n  }>>> {\n    return this.get('/achievements/progress');\n  }\n\n  /**\n   * Get recent achievements\n   */\n  async getRecentAchievements(limit = 10): Promise<ApiResponse<Array<{\n    user: {\n      id: string;\n      username: string;\n      avatar?: string;\n    };\n    achievement: Achievement;\n    unlockedAt: string;\n  }>>> {\n    return this.get('/achievements/recent', { limit });\n  }\n\n  /**\n   * Get rare achievements\n   */\n  async getRareAchievements(): Promise<ApiResponse<Achievement[]>> {\n    return this.get('/achievements/rare');\n  }\n\n  // Streaks and Milestones\n\n  /**\n   * Get user's current streaks\n   */\n  async getUserStreaks(userId: string): Promise<ApiResponse<{\n    daily: {\n      current: number;\n      longest: number;\n      lastActivity: string;\n    };\n    posting: {\n      current: number;\n      longest: number;\n      lastPost: string;\n    };\n    engagement: {\n      current: number;\n      longest: number;\n      lastEngagement: string;\n    };\n  }>> {\n    return this.get(`/streaks/user/${userId}`);\n  }\n\n  /**\n   * Get top streaks\n   */\n  async getTopStreaks(type: 'daily' | 'posting' | 'engagement' = 'daily'): Promise<ApiResponse<Array<{\n    user: {\n      id: string;\n      username: string;\n      avatar?: string;\n    };\n    streak: number;\n    type: string;\n    lastActivity: string;\n  }>>> {\n    return this.get('/streaks/top', { type });\n  }\n\n  // Admin endpoints\n\n  /**\n   * Create competition (admin only)\n   */\n  async createCompetition(data: {\n    title: string;\n    description: string;\n    type: Competition['type'];\n    category: Competition['category'];\n    startDate: string;\n    endDate: string;\n    prizes: Competition['prizes'];\n    rules: string[];\n  }): Promise<ApiResponse<Competition>> {\n    return this.post('/competitions', data);\n  }\n\n  /**\n   * Update competition (admin only)\n   */\n  async updateCompetition(id: string, data: Partial<Competition>): Promise<ApiResponse<Competition>> {\n    return this.patch(`/competitions/${id}`, data);\n  }\n\n  /**\n   * Delete competition (admin only)\n   */\n  async deleteCompetition(id: string): Promise<ApiResponse<{ message: string }>> {\n    return this.delete(`/competitions/${id}`);\n  }\n\n  /**\n   * Create achievement (admin only)\n   */\n  async createAchievement(data: Omit<Achievement, 'id' | 'unlockedBy'>): Promise<ApiResponse<Achievement>> {\n    return this.post('/achievements', data);\n  }\n\n  /**\n   * Update achievement (admin only)\n   */\n  async updateAchievement(id: string, data: Partial<Achievement>): Promise<ApiResponse<Achievement>> {\n    return this.patch(`/achievements/${id}`, data);\n  }\n\n  /**\n   * Delete achievement (admin only)\n   */\n  async deleteAchievement(id: string): Promise<ApiResponse<{ message: string }>> {\n    return this.delete(`/achievements/${id}`);\n  }\n\n  /**\n   * Award achievement manually (admin only)\n   */\n  async awardAchievement(userId: string, achievementId: string, reason?: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/achievements/award', { userId, achievementId, reason });\n  }\n\n  /**\n   * Recalculate leaderboard (admin only)\n   */\n  async recalculateLeaderboard(category?: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/recalculate', { category });\n  }\n\n  /**\n   * Get leaderboard analytics (admin only)\n   */\n  async getLeaderboardAnalytics(): Promise<ApiResponse<{\n    participationTrends: Array<{ date: string; participants: number }>;\n    categoryPopularity: Record<string, number>;\n    averageScoreProgression: Array<{ date: string; averageScore: number }>;\n    competitionEngagement: Record<string, number>;\n    achievementUnlockRates: Record<string, number>;\n  }>> {\n    return this.get('/analytics');\n  }\n}\n\n// Export singleton instance\nexport const leaderboardService = new LeaderboardService();\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;U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","ignoreList":[]}