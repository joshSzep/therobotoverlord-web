{"version":3,"names":["cov_19ej8zqh5w","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/types/topics.ts"],"sourcesContent":["/**\n * Topic type definitions for The Robot Overlord\n * Based on backend API schema\n */\n\nexport interface Topic {\n  id: string;\n  title: string;\n  description: string;\n  slug: string;\n  categoryId: string;\n  category: TopicCategory;\n  createdBy: string;\n  creator: {\n    id: string;\n    username: string;\n    firstName?: string;\n    lastName?: string;\n    avatar?: string;\n    role: string;\n    loyaltyScore: number;\n  };\n  status: 'active' | 'archived' | 'locked' | 'hidden';\n  moderationStatus: 'approved' | 'pending' | 'rejected';\n  moderationReason?: string;\n  moderatedBy?: string;\n  moderatedAt?: string;\n  tags: string[];\n  postCount: number;\n  participantCount: number;\n  subscriberCount: number;\n  viewCount: number;\n  lastPostAt?: string;\n  lastPost?: {\n    id: string;\n    title: string;\n    author: {\n      id: string;\n      username: string;\n      avatar?: string;\n    };\n    createdAt: string;\n  };\n  isPinned: boolean;\n  isLocked: boolean;\n  isFeatured: boolean;\n  userSubscribed?: boolean;\n  userPermissions?: {\n    canPost: boolean;\n    canModerate: boolean;\n    canEdit: boolean;\n    canDelete: boolean;\n  };\n  createdAt: string;\n  updatedAt: string;\n  archivedAt?: string;\n}\n\nexport interface TopicCategory {\n  id: string;\n  name: string;\n  description: string;\n  slug: string;\n  color: string;\n  icon?: string;\n  parentId?: string;\n  parent?: TopicCategory;\n  children?: TopicCategory[];\n  topicCount: number;\n  postCount: number;\n  isVisible: boolean;\n  sortOrder: number;\n  permissions: {\n    canCreateTopics: string[]; // roles\n    canViewTopics: string[]; // roles\n    requiresApproval: boolean;\n  };\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface CreateTopicRequest {\n  title: string;\n  description: string;\n  categoryId: string;\n  tags?: string[];\n  initialPost?: {\n    title: string;\n    content: string;\n  };\n  status?: 'active' | 'draft';\n}\n\nexport interface UpdateTopicRequest {\n  title?: string;\n  description?: string;\n  categoryId?: string;\n  tags?: string[];\n  status?: Topic['status'];\n}\n\nexport interface TopicFilters {\n  categoryId?: string;\n  parentCategoryId?: string;\n  status?: Topic['status'];\n  moderationStatus?: Topic['moderationStatus'];\n  tags?: string[];\n  search?: string;\n  createdBy?: string;\n  sortBy?: 'newest' | 'oldest' | 'popular' | 'active' | 'posts' | 'participants' | 'alphabetical' | 'recent';\n  sortOrder?: 'asc' | 'desc';\n  timeRange?: 'hour' | 'day' | 'week' | 'month' | 'year' | 'all' | 'today' | 'quarter';\n  featured?: boolean;\n  pinned?: boolean;\n  hasActivity?: boolean;\n  minPosts?: number;\n  maxPosts?: number;\n  hasSubscription?: boolean;\n  creatorId?: string;\n  page?: number;\n  limit?: number;\n}\n\nexport interface TopicSubscription {\n  id: string;\n  topicId: string;\n  userId: string;\n  notificationLevel: 'all' | 'mentions' | 'digest' | 'none';\n  subscribedAt: string;\n  lastNotifiedAt?: string;\n}\n\nexport interface TopicModerationAction {\n  id: string;\n  topicId: string;\n  action: 'approve' | 'reject' | 'lock' | 'unlock' | 'pin' | 'unpin' | 'feature' | 'unfeature' | 'archive' | 'restore';\n  reason?: string;\n  moderatedBy: string;\n  moderator: {\n    id: string;\n    username: string;\n    role: string;\n  };\n  previousStatus?: string;\n  newStatus: string;\n  notifyCreator: boolean;\n  createdAt: string;\n}\n\nexport interface TopicStatistics {\n  topicId: string;\n  postCount: number;\n  participantCount: number;\n  subscriberCount: number;\n  viewCount: number;\n  uniqueViewCount: number;\n  activityScore: number;\n  engagementRate: number;\n  averagePostsPerDay: number;\n  averageRepliesPerPost: number;\n  topContributors: Array<{\n    userId: string;\n    username: string;\n    avatar?: string;\n    postCount: number;\n    replyCount: number;\n    loyaltyScore: number;\n    joinedAt: string;\n  }>;\n  activityPattern: Array<{\n    date: string;\n    posts: number;\n    replies: number;\n    views: number;\n    participants: number;\n  }>;\n  tagDistribution: Record<string, number>;\n  moderationHistory: TopicModerationAction[];\n}\n\nexport interface TopicReport {\n  id: string;\n  topicId: string;\n  reportedBy: string;\n  reporter: {\n    id: string;\n    username: string;\n  };\n  reason: string;\n  details?: string;\n  status: 'pending' | 'reviewed' | 'dismissed';\n  reviewedBy?: string;\n  reviewedAt?: string;\n  createdAt: string;\n}\n\nexport interface CreateCategoryRequest {\n  name: string;\n  description: string;\n  color: string;\n  icon?: string;\n  parentId?: string;\n  permissions?: TopicCategory['permissions'];\n  sortOrder?: number;\n}\n\nexport interface UpdateCategoryRequest {\n  name?: string;\n  description?: string;\n  color?: string;\n  icon?: string;\n  parentId?: string;\n  permissions?: Partial<TopicCategory['permissions']>;\n  sortOrder?: number;\n  isVisible?: boolean;\n}\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;IAAAC,SAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA","ignoreList":[]}