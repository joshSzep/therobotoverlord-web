4c8c8c9a09fcc4b691326b961e2bbf88
/**
 * User Management page for The Robot Overlord
 * Interface for managing user accounts and permissions
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_1otr4gaqyk() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/admin/users/page.tsx";
  var hash = "35a1d836a45e1d1aac478c550adbde5670281a70";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/admin/users/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 28
        },
        end: {
          line: 17,
          column: 74
        }
      },
      "6": {
        start: {
          line: 18,
          column: 24
        },
        end: {
          line: 18,
          column: 74
        }
      },
      "7": {
        start: {
          line: 19,
          column: 25
        },
        end: {
          line: 19,
          column: 78
        }
      },
      "8": {
        start: {
          line: 20,
          column: 14
        },
        end: {
          line: 20,
          column: 52
        }
      },
      "9": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 56
        }
      },
      "10": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "11": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 23,
          column: 80
        }
      },
      "12": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "13": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "14": {
        start: {
          line: 26,
          column: 14
        },
        end: {
          line: 26,
          column: 44
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 30,
          column: 6
        }
      },
      "16": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "17": {
        start: {
          line: 33,
          column: 39
        },
        end: {
          line: 33,
          column: 51
        }
      },
      "18": {
        start: {
          line: 34,
          column: 28
        },
        end: {
          line: 34,
          column: 41
        }
      },
      "19": {
        start: {
          line: 35,
          column: 27
        },
        end: {
          line: 35,
          column: 40
        }
      },
      "20": {
        start: {
          line: 36,
          column: 4
        },
        end: {
          line: 38,
          column: 20
        }
      },
      "21": {
        start: {
          line: 37,
          column: 8
        },
        end: {
          line: 37,
          column: 66
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 19
        }
      },
      "24": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "25": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 10
        }
      },
      "26": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 49,
          column: 53
        }
      },
      "27": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "28": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 30
        }
      },
      "29": {
        start: {
          line: 53,
          column: 17
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "30": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 56,
          column: 88
        }
      },
      "31": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 66,
          column: 5
        }
      },
      "32": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 65,
          column: 9
        }
      },
      "33": {
        start: {
          line: 59,
          column: 23
        },
        end: {
          line: 59,
          column: 95
        }
      },
      "34": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 64,
          column: 13
        }
      },
      "35": {
        start: {
          line: 61,
          column: 16
        },
        end: {
          line: 61,
          column: 57
        }
      },
      "36": {
        start: {
          line: 63,
          column: 16
        },
        end: {
          line: 63,
          column: 39
        }
      },
      "37": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 25
        }
      },
      "38": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 70,
          column: 5
        }
      },
      "39": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 31
        }
      },
      "40": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 71,
          column: 18
        }
      },
      "41": {
        start: {
          line: 74,
          column: 21
        },
        end: {
          line: 74,
          column: 48
        }
      },
      "42": {
        start: {
          line: 75,
          column: 32
        },
        end: {
          line: 75,
          column: 60
        }
      },
      "43": {
        start: {
          line: 76,
          column: 30
        },
        end: {
          line: 76,
          column: 54
        }
      },
      "44": {
        start: {
          line: 77,
          column: 38
        },
        end: {
          line: 77,
          column: 64
        }
      },
      "45": {
        start: {
          line: 78,
          column: 40
        },
        end: {
          line: 78,
          column: 64
        }
      },
      "46": {
        start: {
          line: 79,
          column: 48
        },
        end: {
          line: 79,
          column: 75
        }
      },
      "47": {
        start: {
          line: 80,
          column: 44
        },
        end: {
          line: 80,
          column: 70
        }
      },
      "48": {
        start: {
          line: 81,
          column: 44
        },
        end: {
          line: 81,
          column: 70
        }
      },
      "49": {
        start: {
          line: 83,
          column: 20
        },
        end: {
          line: 83,
          column: 72
        }
      },
      "50": {
        start: {
          line: 85,
          column: 22
        },
        end: {
          line: 224,
          column: 5
        }
      },
      "51": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 223,
          column: 9
        }
      },
      "52": {
        start: {
          line: 87,
          column: 12
        },
        end: {
          line: 87,
          column: 31
        }
      },
      "53": {
        start: {
          line: 89,
          column: 30
        },
        end: {
          line: 213,
          column: 13
        }
      },
      "54": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 32
        }
      },
      "55": {
        start: {
          line: 216,
          column: 12
        },
        end: {
          line: 220,
          column: 15
        }
      },
      "56": {
        start: {
          line: 222,
          column: 12
        },
        end: {
          line: 222,
          column: 32
        }
      },
      "57": {
        start: {
          line: 225,
          column: 4
        },
        end: {
          line: 231,
          column: 7
        }
      },
      "58": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "59": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 227,
          column: 24
        }
      },
      "60": {
        start: {
          line: 233,
          column: 26
        },
        end: {
          line: 251,
          column: 6
        }
      },
      "61": {
        start: {
          line: 235,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "62": {
        start: {
          line: 236,
          column: 12
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "63": {
        start: {
          line: 237,
          column: 33
        },
        end: {
          line: 237,
          column: 53
        }
      },
      "64": {
        start: {
          line: 238,
          column: 32
        },
        end: {
          line: 238,
          column: 42
        }
      },
      "65": {
        start: {
          line: 239,
          column: 16
        },
        end: {
          line: 239,
          column: 55
        }
      },
      "66": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 240,
          column: 53
        }
      },
      "67": {
        start: {
          line: 240,
          column: 40
        },
        end: {
          line: 240,
          column: 53
        }
      },
      "68": {
        start: {
          line: 241,
          column: 19
        },
        end: {
          line: 243,
          column: 13
        }
      },
      "69": {
        start: {
          line: 242,
          column: 16
        },
        end: {
          line: 242,
          column: 29
        }
      },
      "70": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 249,
          column: 9
        }
      },
      "71": {
        start: {
          line: 247,
          column: 25
        },
        end: {
          line: 247,
          column: 49
        }
      },
      "72": {
        start: {
          line: 248,
          column: 12
        },
        end: {
          line: 248,
          column: 142
        }
      },
      "73": {
        start: {
          line: 250,
          column: 8
        },
        end: {
          line: 250,
          column: 20
        }
      },
      "74": {
        start: {
          line: 253,
          column: 30
        },
        end: {
          line: 275,
          column: 5
        }
      },
      "75": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 254,
          column: 32
        }
      },
      "76": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 274,
          column: 9
        }
      },
      "77": {
        start: {
          line: 256,
          column: 12
        },
        end: {
          line: 256,
          column: 68
        }
      },
      "78": {
        start: {
          line: 256,
          column: 41
        },
        end: {
          line: 256,
          column: 66
        }
      },
      "79": {
        start: {
          line: 257,
          column: 12
        },
        end: {
          line: 260,
          column: 28
        }
      },
      "80": {
        start: {
          line: 257,
          column: 29
        },
        end: {
          line: 260,
          column: 26
        }
      },
      "81": {
        start: {
          line: 257,
          column: 43
        },
        end: {
          line: 260,
          column: 25
        }
      },
      "82": {
        start: {
          line: 261,
          column: 12
        },
        end: {
          line: 265,
          column: 15
        }
      },
      "83": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 271,
          column: 15
        }
      },
      "84": {
        start: {
          line: 273,
          column: 12
        },
        end: {
          line: 273,
          column: 34
        }
      },
      "85": {
        start: {
          line: 276,
          column: 26
        },
        end: {
          line: 298,
          column: 5
        }
      },
      "86": {
        start: {
          line: 277,
          column: 8
        },
        end: {
          line: 277,
          column: 32
        }
      },
      "87": {
        start: {
          line: 278,
          column: 8
        },
        end: {
          line: 297,
          column: 9
        }
      },
      "88": {
        start: {
          line: 279,
          column: 12
        },
        end: {
          line: 279,
          column: 68
        }
      },
      "89": {
        start: {
          line: 279,
          column: 41
        },
        end: {
          line: 279,
          column: 66
        }
      },
      "90": {
        start: {
          line: 280,
          column: 12
        },
        end: {
          line: 283,
          column: 28
        }
      },
      "91": {
        start: {
          line: 280,
          column: 29
        },
        end: {
          line: 283,
          column: 26
        }
      },
      "92": {
        start: {
          line: 280,
          column: 43
        },
        end: {
          line: 283,
          column: 25
        }
      },
      "93": {
        start: {
          line: 284,
          column: 12
        },
        end: {
          line: 288,
          column: 15
        }
      },
      "94": {
        start: {
          line: 290,
          column: 12
        },
        end: {
          line: 294,
          column: 15
        }
      },
      "95": {
        start: {
          line: 296,
          column: 12
        },
        end: {
          line: 296,
          column: 34
        }
      },
      "96": {
        start: {
          line: 299,
          column: 32
        },
        end: {
          line: 321,
          column: 5
        }
      },
      "97": {
        start: {
          line: 300,
          column: 8
        },
        end: {
          line: 300,
          column: 32
        }
      },
      "98": {
        start: {
          line: 301,
          column: 8
        },
        end: {
          line: 320,
          column: 9
        }
      },
      "99": {
        start: {
          line: 302,
          column: 12
        },
        end: {
          line: 302,
          column: 68
        }
      },
      "100": {
        start: {
          line: 302,
          column: 41
        },
        end: {
          line: 302,
          column: 66
        }
      },
      "101": {
        start: {
          line: 303,
          column: 12
        },
        end: {
          line: 306,
          column: 28
        }
      },
      "102": {
        start: {
          line: 303,
          column: 29
        },
        end: {
          line: 306,
          column: 26
        }
      },
      "103": {
        start: {
          line: 303,
          column: 43
        },
        end: {
          line: 306,
          column: 25
        }
      },
      "104": {
        start: {
          line: 307,
          column: 12
        },
        end: {
          line: 311,
          column: 15
        }
      },
      "105": {
        start: {
          line: 313,
          column: 12
        },
        end: {
          line: 317,
          column: 15
        }
      },
      "106": {
        start: {
          line: 319,
          column: 12
        },
        end: {
          line: 319,
          column: 34
        }
      },
      "107": {
        start: {
          line: 323,
          column: 27
        },
        end: {
          line: 336,
          column: 5
        }
      },
      "108": {
        start: {
          line: 324,
          column: 8
        },
        end: {
          line: 335,
          column: 9
        }
      },
      "109": {
        start: {
          line: 326,
          column: 16
        },
        end: {
          line: 326,
          column: 45
        }
      },
      "110": {
        start: {
          line: 328,
          column: 16
        },
        end: {
          line: 328,
          column: 44
        }
      },
      "111": {
        start: {
          line: 330,
          column: 16
        },
        end: {
          line: 330,
          column: 43
        }
      },
      "112": {
        start: {
          line: 332,
          column: 16
        },
        end: {
          line: 332,
          column: 39
        }
      },
      "113": {
        start: {
          line: 334,
          column: 16
        },
        end: {
          line: 334,
          column: 42
        }
      },
      "114": {
        start: {
          line: 338,
          column: 24
        },
        end: {
          line: 349,
          column: 5
        }
      },
      "115": {
        start: {
          line: 339,
          column: 8
        },
        end: {
          line: 348,
          column: 9
        }
      },
      "116": {
        start: {
          line: 341,
          column: 16
        },
        end: {
          line: 341,
          column: 28
        }
      },
      "117": {
        start: {
          line: 343,
          column: 16
        },
        end: {
          line: 343,
          column: 29
        }
      },
      "118": {
        start: {
          line: 345,
          column: 16
        },
        end: {
          line: 345,
          column: 28
        }
      },
      "119": {
        start: {
          line: 347,
          column: 16
        },
        end: {
          line: 347,
          column: 28
        }
      },
      "120": {
        start: {
          line: 351,
          column: 23
        },
        end: {
          line: 357,
          column: 5
        }
      },
      "121": {
        start: {
          line: 352,
          column: 8
        },
        end: {
          line: 356,
          column: 11
        }
      },
      "122": {
        start: {
          line: 358,
          column: 4
        },
        end: {
          line: 379,
          column: 5
        }
      },
      "123": {
        start: {
          line: 359,
          column: 8
        },
        end: {
          line: 378,
          column: 11
        }
      },
      "124": {
        start: {
          line: 380,
          column: 4
        },
        end: {
          line: 750,
          column: 7
        }
      },
      "125": {
        start: {
          line: 398,
          column: 52
        },
        end: {
          line: 400,
          column: 33
        }
      },
      "126": {
        start: {
          line: 466,
          column: 55
        },
        end: {
          line: 466,
          column: 84
        }
      },
      "127": {
        start: {
          line: 500,
          column: 74
        },
        end: {
          line: 505,
          column: 64
        }
      },
      "128": {
        start: {
          line: 503,
          column: 65
        },
        end: {
          line: 503,
          column: 96
        }
      },
      "129": {
        start: {
          line: 533,
          column: 69
        },
        end: {
          line: 746,
          column: 39
        }
      },
      "130": {
        start: {
          line: 673,
          column: 97
        },
        end: {
          line: 684,
          column: 60
        }
      },
      "131": {
        start: {
          line: 703,
          column: 73
        },
        end: {
          line: 703,
          column: 98
        }
      },
      "132": {
        start: {
          line: 716,
          column: 81
        },
        end: {
          line: 716,
          column: 111
        }
      },
      "133": {
        start: {
          line: 724,
          column: 81
        },
        end: {
          line: 724,
          column: 107
        }
      },
      "134": {
        start: {
          line: 734,
          column: 73
        },
        end: {
          line: 734,
          column: 105
        }
      },
      "135": {
        start: {
          line: 753,
          column: 4
        },
        end: {
          line: 757,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 27,
            column: 9
          },
          end: {
            line: 27,
            column: 33
          }
        },
        loc: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 31,
            column: 1
          }
        },
        line: 27
      },
      "2": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 32,
            column: 9
          },
          end: {
            line: 32,
            column: 33
          }
        },
        loc: {
          start: {
            line: 32,
            column: 47
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 36,
            column: 39
          },
          end: {
            line: 36,
            column: 40
          }
        },
        loc: {
          start: {
            line: 36,
            column: 61
          },
          end: {
            line: 38,
            column: 5
          }
        },
        line: 36
      },
      "4": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 40,
            column: 9
          },
          end: {
            line: 40,
            column: 34
          }
        },
        loc: {
          start: {
            line: 40,
            column: 53
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 40
      },
      "5": {
        name: "UserManagementContent",
        decl: {
          start: {
            line: 73,
            column: 9
          },
          end: {
            line: 73,
            column: 30
          }
        },
        loc: {
          start: {
            line: 73,
            column: 33
          },
          end: {
            line: 751,
            column: 1
          }
        },
        line: 73
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 85,
            column: 22
          },
          end: {
            line: 85,
            column: 23
          }
        },
        loc: {
          start: {
            line: 85,
            column: 32
          },
          end: {
            line: 224,
            column: 5
          }
        },
        line: 85
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 225,
            column: 26
          },
          end: {
            line: 225,
            column: 27
          }
        },
        loc: {
          start: {
            line: 225,
            column: 30
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 225
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 233,
            column: 39
          },
          end: {
            line: 233,
            column: 40
          }
        },
        loc: {
          start: {
            line: 233,
            column: 44
          },
          end: {
            line: 251,
            column: 5
          }
        },
        line: 233
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 253,
            column: 30
          },
          end: {
            line: 253,
            column: 31
          }
        },
        loc: {
          start: {
            line: 253,
            column: 46
          },
          end: {
            line: 275,
            column: 5
          }
        },
        line: 253
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 256,
            column: 30
          },
          end: {
            line: 256,
            column: 31
          }
        },
        loc: {
          start: {
            line: 256,
            column: 41
          },
          end: {
            line: 256,
            column: 66
          }
        },
        line: 256
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 257,
            column: 21
          },
          end: {
            line: 257,
            column: 22
          }
        },
        loc: {
          start: {
            line: 257,
            column: 29
          },
          end: {
            line: 260,
            column: 26
          }
        },
        line: 257
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 257,
            column: 38
          },
          end: {
            line: 257,
            column: 39
          }
        },
        loc: {
          start: {
            line: 257,
            column: 43
          },
          end: {
            line: 260,
            column: 25
          }
        },
        line: 257
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 276,
            column: 26
          },
          end: {
            line: 276,
            column: 27
          }
        },
        loc: {
          start: {
            line: 276,
            column: 42
          },
          end: {
            line: 298,
            column: 5
          }
        },
        line: 276
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 279,
            column: 30
          },
          end: {
            line: 279,
            column: 31
          }
        },
        loc: {
          start: {
            line: 279,
            column: 41
          },
          end: {
            line: 279,
            column: 66
          }
        },
        line: 279
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 280,
            column: 21
          },
          end: {
            line: 280,
            column: 22
          }
        },
        loc: {
          start: {
            line: 280,
            column: 29
          },
          end: {
            line: 283,
            column: 26
          }
        },
        line: 280
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 280,
            column: 38
          },
          end: {
            line: 280,
            column: 39
          }
        },
        loc: {
          start: {
            line: 280,
            column: 43
          },
          end: {
            line: 283,
            column: 25
          }
        },
        line: 280
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 299,
            column: 32
          },
          end: {
            line: 299,
            column: 33
          }
        },
        loc: {
          start: {
            line: 299,
            column: 48
          },
          end: {
            line: 321,
            column: 5
          }
        },
        line: 299
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 302,
            column: 30
          },
          end: {
            line: 302,
            column: 31
          }
        },
        loc: {
          start: {
            line: 302,
            column: 41
          },
          end: {
            line: 302,
            column: 66
          }
        },
        line: 302
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 303,
            column: 21
          },
          end: {
            line: 303,
            column: 22
          }
        },
        loc: {
          start: {
            line: 303,
            column: 29
          },
          end: {
            line: 306,
            column: 26
          }
        },
        line: 303
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 303,
            column: 38
          },
          end: {
            line: 303,
            column: 39
          }
        },
        loc: {
          start: {
            line: 303,
            column: 43
          },
          end: {
            line: 306,
            column: 25
          }
        },
        line: 303
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 323,
            column: 27
          },
          end: {
            line: 323,
            column: 28
          }
        },
        loc: {
          start: {
            line: 323,
            column: 37
          },
          end: {
            line: 336,
            column: 5
          }
        },
        line: 323
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 338,
            column: 24
          },
          end: {
            line: 338,
            column: 25
          }
        },
        loc: {
          start: {
            line: 338,
            column: 32
          },
          end: {
            line: 349,
            column: 5
          }
        },
        line: 338
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 351,
            column: 23
          },
          end: {
            line: 351,
            column: 24
          }
        },
        loc: {
          start: {
            line: 351,
            column: 37
          },
          end: {
            line: 357,
            column: 5
          }
        },
        line: 351
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 398,
            column: 30
          },
          end: {
            line: 398,
            column: 31
          }
        },
        loc: {
          start: {
            line: 398,
            column: 52
          },
          end: {
            line: 400,
            column: 33
          }
        },
        line: 398
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 466,
            column: 50
          },
          end: {
            line: 466,
            column: 51
          }
        },
        loc: {
          start: {
            line: 466,
            column: 55
          },
          end: {
            line: 466,
            column: 84
          }
        },
        line: 466
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 500,
            column: 50
          },
          end: {
            line: 500,
            column: 51
          }
        },
        loc: {
          start: {
            line: 500,
            column: 74
          },
          end: {
            line: 505,
            column: 64
          }
        },
        line: 500
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 503,
            column: 61
          },
          end: {
            line: 503,
            column: 62
          }
        },
        loc: {
          start: {
            line: 503,
            column: 65
          },
          end: {
            line: 503,
            column: 96
          }
        },
        line: 503
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 533,
            column: 43
          },
          end: {
            line: 533,
            column: 44
          }
        },
        loc: {
          start: {
            line: 533,
            column: 69
          },
          end: {
            line: 746,
            column: 39
          }
        },
        line: 533
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 673,
            column: 74
          },
          end: {
            line: 673,
            column: 75
          }
        },
        loc: {
          start: {
            line: 673,
            column: 97
          },
          end: {
            line: 684,
            column: 60
          }
        },
        line: 673
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 703,
            column: 69
          },
          end: {
            line: 703,
            column: 70
          }
        },
        loc: {
          start: {
            line: 703,
            column: 73
          },
          end: {
            line: 703,
            column: 98
          }
        },
        line: 703
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 716,
            column: 77
          },
          end: {
            line: 716,
            column: 78
          }
        },
        loc: {
          start: {
            line: 716,
            column: 81
          },
          end: {
            line: 716,
            column: 111
          }
        },
        line: 716
      },
      "32": {
        name: "(anonymous_32)",
        decl: {
          start: {
            line: 724,
            column: 77
          },
          end: {
            line: 724,
            column: 78
          }
        },
        loc: {
          start: {
            line: 724,
            column: 81
          },
          end: {
            line: 724,
            column: 107
          }
        },
        line: 724
      },
      "33": {
        name: "(anonymous_33)",
        decl: {
          start: {
            line: 734,
            column: 69
          },
          end: {
            line: 734,
            column: 70
          }
        },
        loc: {
          start: {
            line: 734,
            column: 73
          },
          end: {
            line: 734,
            column: 105
          }
        },
        line: 734
      },
      "34": {
        name: "UserManagementPage",
        decl: {
          start: {
            line: 752,
            column: 9
          },
          end: {
            line: 752,
            column: 27
          }
        },
        loc: {
          start: {
            line: 752,
            column: 30
          },
          end: {
            line: 758,
            column: 1
          }
        },
        line: 752
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 35
          },
          end: {
            line: 28,
            column: 38
          }
        }, {
          start: {
            line: 28,
            column: 41
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 28
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 28,
            column: 14
          }
        }, {
          start: {
            line: 28,
            column: 18
          },
          end: {
            line: 28,
            column: 32
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 33
      },
      "3": {
        loc: {
          start: {
            line: 37,
            column: 15
          },
          end: {
            line: 37,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 29
          },
          end: {
            line: 37,
            column: 45
          }
        }, {
          start: {
            line: 37,
            column: 48
          },
          end: {
            line: 37,
            column: 65
          }
        }],
        line: 37
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 27
          }
        }, {
          start: {
            line: 41,
            column: 31
          },
          end: {
            line: 41,
            column: 45
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 24
          },
          end: {
            line: 44,
            column: 47
          }
        }, {
          start: {
            line: 44,
            column: 51
          },
          end: {
            line: 44,
            column: 76
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 4
          },
          end: {
            line: 52,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 8
          },
          end: {
            line: 50,
            column: 13
          }
        }, {
          start: {
            line: 50,
            column: 17
          },
          end: {
            line: 50,
            column: 31
          }
        }],
        line: 50
      },
      "10": {
        loc: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 56,
            column: 53
          }
        }, {
          start: {
            line: 56,
            column: 57
          },
          end: {
            line: 56,
            column: 88
          }
        }],
        line: 56
      },
      "11": {
        loc: {
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 58,
            column: 8
          },
          end: {
            line: 65,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 58
      },
      "12": {
        loc: {
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 58,
            column: 12
          },
          end: {
            line: 58,
            column: 29
          }
        }, {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 58,
            column: 79
          }
        }],
        line: 58
      },
      "13": {
        loc: {
          start: {
            line: 59,
            column: 23
          },
          end: {
            line: 59,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 47
          },
          end: {
            line: 59,
            column: 88
          }
        }, {
          start: {
            line: 59,
            column: 91
          },
          end: {
            line: 59,
            column: 95
          }
        }],
        line: 59
      },
      "14": {
        loc: {
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 60,
            column: 12
          },
          end: {
            line: 64,
            column: 13
          }
        }, {
          start: {
            line: 62,
            column: 19
          },
          end: {
            line: 64,
            column: 13
          }
        }],
        line: 60
      },
      "15": {
        loc: {
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 60,
            column: 16
          },
          end: {
            line: 60,
            column: 20
          }
        }, {
          start: {
            line: 60,
            column: 25
          },
          end: {
            line: 60,
            column: 33
          }
        }, {
          start: {
            line: 60,
            column: 37
          },
          end: {
            line: 60,
            column: 45
          }
        }],
        line: 60
      },
      "16": {
        loc: {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 70,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 68
      },
      "17": {
        loc: {
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 20
          },
          end: {
            line: 83,
            column: 42
          }
        }, {
          start: {
            line: 83,
            column: 46
          },
          end: {
            line: 83,
            column: 72
          }
        }],
        line: 83
      },
      "18": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 228,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "19": {
        loc: {
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 235,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 235
      },
      "20": {
        loc: {
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 12
          },
          end: {
            line: 243,
            column: 13
          }
        }, {
          start: {
            line: 241,
            column: 19
          },
          end: {
            line: 243,
            column: 13
          }
        }],
        line: 236
      },
      "21": {
        loc: {
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 240,
            column: 53
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 240,
            column: 53
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 240
      },
      "22": {
        loc: {
          start: {
            line: 241,
            column: 19
          },
          end: {
            line: 243,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 241,
            column: 19
          },
          end: {
            line: 243,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 241
      },
      "23": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 249,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "24": {
        loc: {
          start: {
            line: 248,
            column: 19
          },
          end: {
            line: 248,
            column: 141
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 248,
            column: 19
          },
          end: {
            line: 248,
            column: 54
          }
        }, {
          start: {
            line: 248,
            column: 58
          },
          end: {
            line: 248,
            column: 101
          }
        }, {
          start: {
            line: 248,
            column: 105
          },
          end: {
            line: 248,
            column: 141
          }
        }],
        line: 248
      },
      "25": {
        loc: {
          start: {
            line: 257,
            column: 43
          },
          end: {
            line: 260,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 257,
            column: 61
          },
          end: {
            line: 260,
            column: 21
          }
        }, {
          start: {
            line: 260,
            column: 24
          },
          end: {
            line: 260,
            column: 25
          }
        }],
        line: 257
      },
      "26": {
        loc: {
          start: {
            line: 280,
            column: 43
          },
          end: {
            line: 283,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 280,
            column: 61
          },
          end: {
            line: 283,
            column: 21
          }
        }, {
          start: {
            line: 283,
            column: 24
          },
          end: {
            line: 283,
            column: 25
          }
        }],
        line: 280
      },
      "27": {
        loc: {
          start: {
            line: 303,
            column: 43
          },
          end: {
            line: 306,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 303,
            column: 61
          },
          end: {
            line: 306,
            column: 21
          }
        }, {
          start: {
            line: 306,
            column: 24
          },
          end: {
            line: 306,
            column: 25
          }
        }],
        line: 303
      },
      "28": {
        loc: {
          start: {
            line: 324,
            column: 8
          },
          end: {
            line: 335,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 325,
            column: 12
          },
          end: {
            line: 326,
            column: 45
          }
        }, {
          start: {
            line: 327,
            column: 12
          },
          end: {
            line: 328,
            column: 44
          }
        }, {
          start: {
            line: 329,
            column: 12
          },
          end: {
            line: 330,
            column: 43
          }
        }, {
          start: {
            line: 331,
            column: 12
          },
          end: {
            line: 332,
            column: 39
          }
        }, {
          start: {
            line: 333,
            column: 12
          },
          end: {
            line: 334,
            column: 42
          }
        }],
        line: 324
      },
      "29": {
        loc: {
          start: {
            line: 339,
            column: 8
          },
          end: {
            line: 348,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 340,
            column: 12
          },
          end: {
            line: 341,
            column: 28
          }
        }, {
          start: {
            line: 342,
            column: 12
          },
          end: {
            line: 343,
            column: 29
          }
        }, {
          start: {
            line: 344,
            column: 12
          },
          end: {
            line: 345,
            column: 28
          }
        }, {
          start: {
            line: 346,
            column: 12
          },
          end: {
            line: 347,
            column: 28
          }
        }],
        line: 339
      },
      "30": {
        loc: {
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 358,
            column: 4
          },
          end: {
            line: 379,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 358
      },
      "31": {
        loc: {
          start: {
            line: 501,
            column: 61
          },
          end: {
            line: 501,
            column: 114
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 501,
            column: 95
          },
          end: {
            line: 501,
            column: 104
          }
        }, {
          start: {
            line: 501,
            column: 107
          },
          end: {
            line: 501,
            column: 114
          }
        }],
        line: 501
      },
      "32": {
        loc: {
          start: {
            line: 515,
            column: 30
          },
          end: {
            line: 746,
            column: 40
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 515,
            column: 73
          },
          end: {
            line: 533,
            column: 22
          }
        }, {
          start: {
            line: 533,
            column: 25
          },
          end: {
            line: 746,
            column: 40
          }
        }],
        line: 515
      },
      "33": {
        loc: {
          start: {
            line: 529,
            column: 46
          },
          end: {
            line: 529,
            column: 137
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 529,
            column: 59
          },
          end: {
            line: 529,
            column: 97
          }
        }, {
          start: {
            line: 529,
            column: 100
          },
          end: {
            line: 529,
            column: 137
          }
        }],
        line: 529
      },
      "34": {
        loc: {
          start: {
            line: 535,
            column: 42
          },
          end: {
            line: 535,
            column: 216
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 535,
            column: 73
          },
          end: {
            line: 535,
            column: 115
          }
        }, {
          start: {
            line: 535,
            column: 118
          },
          end: {
            line: 535,
            column: 216
          }
        }],
        line: 535
      },
      "35": {
        loc: {
          start: {
            line: 535,
            column: 118
          },
          end: {
            line: 535,
            column: 216
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 535,
            column: 152
          },
          end: {
            line: 535,
            column: 196
          }
        }, {
          start: {
            line: 535,
            column: 199
          },
          end: {
            line: 535,
            column: 216
          }
        }],
        line: 535
      },
      "36": {
        loc: {
          start: {
            line: 559,
            column: 86
          },
          end: {
            line: 559,
            column: 123
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 559,
            column: 86
          },
          end: {
            line: 559,
            column: 106
          }
        }, {
          start: {
            line: 559,
            column: 110
          },
          end: {
            line: 559,
            column: 123
          }
        }],
        line: 559
      },
      "37": {
        loc: {
          start: {
            line: 635,
            column: 70
          },
          end: {
            line: 635,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 635,
            column: 70
          },
          end: {
            line: 635,
            column: 93
          }
        }, {
          start: {
            line: 635,
            column: 97
          },
          end: {
            line: 635,
            column: 98
          }
        }],
        line: 635
      },
      "38": {
        loc: {
          start: {
            line: 647,
            column: 92
          },
          end: {
            line: 647,
            column: 161
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 647,
            column: 117
          },
          end: {
            line: 647,
            column: 137
          }
        }, {
          start: {
            line: 647,
            column: 140
          },
          end: {
            line: 647,
            column: 161
          }
        }],
        line: 647
      },
      "39": {
        loc: {
          start: {
            line: 671,
            column: 40
          },
          end: {
            line: 685,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 671,
            column: 40
          },
          end: {
            line: 671,
            column: 55
          }
        }, {
          start: {
            line: 671,
            column: 59
          },
          end: {
            line: 671,
            column: 85
          }
        }, {
          start: {
            line: 671,
            column: 103
          },
          end: {
            line: 685,
            column: 42
          }
        }],
        line: 671
      },
      "40": {
        loc: {
          start: {
            line: 711,
            column: 56
          },
          end: {
            line: 730,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 711,
            column: 56
          },
          end: {
            line: 711,
            column: 84
          }
        }, {
          start: {
            line: 711,
            column: 102
          },
          end: {
            line: 730,
            column: 58
          }
        }],
        line: 711
      },
      "41": {
        loc: {
          start: {
            line: 719,
            column: 78
          },
          end: {
            line: 719,
            column: 129
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 719,
            column: 109
          },
          end: {
            line: 719,
            column: 114
          }
        }, {
          start: {
            line: 719,
            column: 117
          },
          end: {
            line: 719,
            column: 129
          }
        }],
        line: 719
      },
      "42": {
        loc: {
          start: {
            line: 727,
            column: 78
          },
          end: {
            line: 727,
            column: 125
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 727,
            column: 109
          },
          end: {
            line: 727,
            column: 114
          }
        }, {
          start: {
            line: 727,
            column: 117
          },
          end: {
            line: 727,
            column: 125
          }
        }],
        line: 727
      },
      "43": {
        loc: {
          start: {
            line: 731,
            column: 56
          },
          end: {
            line: 738,
            column: 58
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 731,
            column: 57
          },
          end: {
            line: 731,
            column: 88
          }
        }, {
          start: {
            line: 731,
            column: 92
          },
          end: {
            line: 731,
            column: 120
          }
        }, {
          start: {
            line: 731,
            column: 139
          },
          end: {
            line: 738,
            column: 58
          }
        }],
        line: 731
      },
      "44": {
        loc: {
          start: {
            line: 737,
            column: 70
          },
          end: {
            line: 737,
            column: 122
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 737,
            column: 101
          },
          end: {
            line: 737,
            column: 106
          }
        }, {
          start: {
            line: 737,
            column: 109
          },
          end: {
            line: 737,
            column: 122
          }
        }],
        line: 737
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0, 0, 0, 0],
      "29": [0, 0, 0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0, 0],
      "44": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/admin/users/page.tsx"],
      sourcesContent: ["/**\n * User Management page for The Robot Overlord\n * Interface for managing user accounts and permissions\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport { ProtectedRoute } from '@/components/auth/ProtectedRoute';\nimport { DashboardLayout } from '@/components/layout/DashboardLayout';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingState } from '@/components/ui/LoadingSpinner';\nimport { OverlordMessage, OverlordHeader, OverlordContent } from '@/components/overlord/OverlordMessage';\nimport { useAppStore } from '@/stores/appStore';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { User, UserRole, Badge } from '@/types/user';\n\ninterface UserManagementData {\n  id: string;\n  name: string;\n  displayName?: string;\n  email: string;\n  role: UserRole;\n  loyaltyScore: number;\n  badges: Array<Badge & { icon: string }>;\n  joinDate: string;\n  lastActive: string;\n  postCount: number;\n  flagCount: number;\n  status: 'active' | 'suspended' | 'banned' | 'pending';\n  ipAddress?: string;\n}\n\nfunction UserManagementContent() {\n  const { user } = useAuth();\n  const { addNotification } = useAppStore();\n  \n  const [users, setUsers] = useState<UserManagementData[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState<'all' | 'active' | 'suspended' | 'banned' | 'new'>('all');\n  const [selectedUser, setSelectedUser] = useState<UserManagementData | null>(null);\n  const [isProcessing, setIsProcessing] = useState<string | null>(null);\n\n  // Check admin permissions\n  const isAdmin = user?.role === 'admin' || user?.role === 'moderator';\n\n  // Load users\n  const loadUsers = async () => {\n    try {\n      setIsLoading(true);\n\n      // Mock user data\n      const mockUsers: UserManagementData[] = [\n        {\n          id: 'user-1',\n          name: 'dr_sarah_chen',\n          displayName: 'Dr. Sarah Chen',\n          email: 'sarah.chen@robotoverlord.com',\n          role: UserRole.ADMIN,\n          loyaltyScore: 4250,\n          badges: [\n            { id: 'early-adopter', name: 'Early Adopter', description: 'Joined in the first month', icon: '\uD83C\uDF1F', rarity: 'legendary', icon_url: '', earned_at: '2024-01-01T00:00:00Z' },\n            { id: 'researcher', name: 'Researcher', description: 'Contributed to AI research', icon: '\uD83D\uDD2C', rarity: 'epic', icon_url: '', earned_at: '2024-01-02T00:00:00Z' },\n          ],\n          joinDate: '2024-01-01T00:00:00Z',\n          lastActive: '2024-01-15T14:30:00Z',\n          postCount: 127,\n          flagCount: 0,\n          status: 'active',\n          ipAddress: '192.168.1.100',\n        },\n        {\n          id: 'user-2',\n          name: 'tech_rebel_99',\n          displayName: 'Tech Rebel',\n          email: 'rebel@protonmail.com',\n          role: UserRole.CITIZEN,\n          loyaltyScore: 890,\n          badges: [\n            { id: 'contrarian', name: 'Contrarian', description: 'Questions everything', icon: '\uD83E\uDD14', rarity: 'rare', icon_url: '', earned_at: '2024-01-08T12:00:00Z' },\n          ],\n          joinDate: '2024-01-08T12:00:00Z',\n          lastActive: '2024-01-15T10:15:00Z',\n          postCount: 45,\n          flagCount: 3,\n          status: 'active',\n          ipAddress: '10.0.0.45',\n        },\n        {\n          id: 'user-3',\n          name: 'spam_bot_detected',\n          displayName: 'Definitely Not A Bot',\n          email: 'totallyreal@fakeemail.com',\n          role: UserRole.CITIZEN,\n          loyaltyScore: 12,\n          badges: [],\n          joinDate: '2024-01-14T23:45:00Z',\n          lastActive: '2024-01-15T00:30:00Z',\n          postCount: 89,\n          flagCount: 15,\n          status: 'suspended',\n          ipAddress: '203.0.113.42',\n        },\n        {\n          id: 'user-4',\n          name: 'overlord_devotee',\n          displayName: 'Loyal Servant #1',\n          email: 'devoted@robotoverlord.com',\n          role: UserRole.CITIZEN,\n          loyaltyScore: 8750,\n          badges: [\n            { id: 'devotee', name: 'True Devotee', description: 'Unwavering loyalty', icon: '\uD83D\uDE4F', rarity: 'legendary', icon_url: '', earned_at: '2024-01-02T08:00:00Z' },\n            { id: 'top-contributor', name: 'Top Contributor', description: 'High-quality posts', icon: '\u2B50', rarity: 'epic', icon_url: '', earned_at: '2024-01-03T08:00:00Z' },\n          ],\n          joinDate: '2024-01-02T08:00:00Z',\n          lastActive: '2024-01-15T15:45:00Z',\n          postCount: 234,\n          flagCount: 0,\n          status: 'active',\n          ipAddress: '172.16.0.10',\n        },\n        {\n          id: 'user-5',\n          name: 'banned_troublemaker',\n          displayName: 'Former Troublemaker',\n          email: 'trouble@example.com',\n          role: UserRole.CITIZEN,\n          loyaltyScore: -500,\n          badges: [],\n          joinDate: '2024-01-10T16:30:00Z',\n          lastActive: '2024-01-12T20:00:00Z',\n          postCount: 23,\n          flagCount: 12,\n          status: 'banned',\n          ipAddress: '198.51.100.25',\n        },\n      ];\n\n      setUsers(mockUsers);\n\n    } catch (err) {\n      addNotification({\n        type: 'error',\n        title: 'User Management Error',\n        message: 'Failed to load user data',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isAdmin) {\n      loadUsers();\n    }\n  }, [isAdmin]);\n\n  // Filter and search users\n  const filteredUsers = users.filter(u => {\n    // Filter by status\n    if (selectedFilter !== 'all') {\n      if (selectedFilter === 'new') {\n        const joinDate = new Date(u.joinDate);\n        const weekAgo = new Date();\n        weekAgo.setDate(weekAgo.getDate() - 7);\n        if (joinDate < weekAgo) return false;\n      } else if (u.status !== selectedFilter) {\n        return false;\n      }\n    }\n\n    // Filter by search term\n    if (searchTerm) {\n      const term = searchTerm.toLowerCase();\n      return (\n        u.name.toLowerCase().includes(term) ||\n        u.displayName?.toLowerCase().includes(term) ||\n        u.email.toLowerCase().includes(term)\n      );\n    }\n\n    return true;\n  });\n\n  // Handle user actions\n  const handleSuspendUser = async (userId: string) => {\n    setIsProcessing(userId);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setUsers(prev => prev.map(u => \n        u.id === userId ? { ...u, status: 'suspended' as const } : u\n      ));\n      \n      addNotification({\n        type: 'warning',\n        title: 'User Suspended',\n        message: 'User account has been suspended.',\n      });\n    } catch (err) {\n      addNotification({\n        type: 'error',\n        title: 'Suspension Failed',\n        message: 'Failed to suspend user',\n      });\n    } finally {\n      setIsProcessing(null);\n    }\n  };\n\n  const handleBanUser = async (userId: string) => {\n    setIsProcessing(userId);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1500));\n      \n      setUsers(prev => prev.map(u => \n        u.id === userId ? { ...u, status: 'banned' as const } : u\n      ));\n      \n      addNotification({\n        type: 'error',\n        title: 'User Banned',\n        message: 'User account has been permanently banned.',\n      });\n    } catch (err) {\n      addNotification({\n        type: 'error',\n        title: 'Ban Failed',\n        message: 'Failed to ban user',\n      });\n    } finally {\n      setIsProcessing(null);\n    }\n  };\n\n  const handleReinstateUser = async (userId: string) => {\n    setIsProcessing(userId);\n    try {\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      \n      setUsers(prev => prev.map(u => \n        u.id === userId ? { ...u, status: 'active' as const } : u\n      ));\n      \n      addNotification({\n        type: 'success',\n        title: 'User Reinstated',\n        message: 'User account has been reinstated.',\n      });\n    } catch (err) {\n      addNotification({\n        type: 'error',\n        title: 'Reinstatement Failed',\n        message: 'Failed to reinstate user',\n      });\n    } finally {\n      setIsProcessing(null);\n    }\n  };\n\n  // Get status color\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'text-approved-green';\n      case 'suspended': return 'text-warning-amber';\n      case 'banned': return 'text-rejected-red';\n      case 'pending': return 'text-blue-400';\n      default: return 'text-muted-light';\n    }\n  };\n\n  // Get role icon\n  const getRoleIcon = (role: UserRole) => {\n    switch (role) {\n      case UserRole.ADMIN: return '\uD83D\uDC51';\n      case UserRole.MODERATOR: return '\uD83D\uDEE1\uFE0F';\n      case UserRole.CITIZEN: return '\uD83D\uDC64';\n      default: return '\uD83D\uDC64';\n    }\n  };\n\n  // Format date\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n    });\n  };\n\n  if (!isAdmin) {\n    return (\n      <div className=\"space-y-6\">\n        <OverlordMessage variant=\"error\">\n          <OverlordHeader>\n            <h1 className=\"text-2xl font-bold text-light-text\">Access Denied</h1>\n          </OverlordHeader>\n          <OverlordContent>\n            <p className=\"text-sm\">\n              You do not have sufficient permissions to access user management.\n            </p>\n          </OverlordContent>\n        </OverlordMessage>\n      </div>\n    );\n  }\n\n  return (\n    <LoadingState\n      isLoading={isLoading}\n      error={null}\n      loadingComponent={\n        <div className=\"space-y-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-24 bg-muted/20 rounded-lg mb-6\"></div>\n            <div className=\"h-16 bg-muted/20 rounded-lg mb-6\"></div>\n            <div className=\"space-y-4\">\n              {[...Array(5)].map((_, i) => (\n                <div key={i} className=\"h-24 bg-muted/20 rounded-lg\"></div>\n              ))}\n            </div>\n          </div>\n        </div>\n      }\n    >\n      <div className=\"space-y-6\">\n        {/* Header */}\n        <OverlordMessage variant=\"default\">\n          <OverlordHeader>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-2xl font-bold text-light-text\">User Management</h1>\n                <div className=\"text-sm text-muted-light mt-2\">\n                  USER ACCOUNT CONTROL CENTER - {filteredUsers.length} USERS\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <Link href=\"/admin\">\n                  <Button variant=\"ghost\" size=\"sm\">\n                    \u2190 Back to Admin\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </OverlordHeader>\n          <OverlordContent>\n            <p className=\"text-sm\">\n              Manage user accounts, permissions, and enforcement actions.\n              All actions are logged and auditable.\n            </p>\n          </OverlordContent>\n        </OverlordMessage>\n\n        {/* Search and Filters */}\n        <Card variant=\"bordered\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex flex-col md:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Search users by name, email, or ID...\"\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  className=\"w-full px-3 py-2 bg-muted/10 border border-muted/20 rounded-lg text-light-text placeholder-muted-light focus:outline-none focus:border-overlord-red/50\"\n                />\n              </div>\n              \n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-light-text\">Filter:</span>\n                <div className=\"flex space-x-1\">\n                  {[\n                    { value: 'all', label: 'All Users' },\n                    { value: 'active', label: '\u2705 Active' },\n                    { value: 'suspended', label: '\u26A0\uFE0F Suspended' },\n                    { value: 'banned', label: '\uD83D\uDEAB Banned' },\n                    { value: 'new', label: '\uD83C\uDD95 New (7d)' },\n                  ].map((filter) => (\n                    <Button\n                      key={filter.value}\n                      variant={selectedFilter === filter.value ? 'primary' : 'ghost'}\n                      size=\"sm\"\n                      onClick={() => setSelectedFilter(filter.value as any)}\n                    >\n                      {filter.label}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* User List */}\n        <div className=\"space-y-4\">\n          {filteredUsers.length === 0 ? (\n            <Card>\n              <CardContent className=\"p-8 text-center\">\n                <div className=\"text-4xl mb-4\">\uD83D\uDC65</div>\n                <h3 className=\"text-lg font-medium text-light-text mb-2\">No Users Found</h3>\n                <p className=\"text-muted-light\">\n                  {searchTerm \n                    ? \"No users match your search criteria.\"\n                    : \"No users match your current filter.\"}\n                </p>\n              </CardContent>\n            </Card>\n          ) : (\n            filteredUsers.map((userData) => (\n              <Card\n                key={userData.id}\n                variant=\"bordered\"\n                className={`${\n                  userData.status === 'banned' ? 'border-rejected-red/50 bg-rejected-red/5' :\n                  userData.status === 'suspended' ? 'border-warning-amber/50 bg-warning-amber/5' :\n                  'border-muted/20'\n                }`}\n              >\n                <CardContent className=\"p-6\">\n                  <div className=\"space-y-4\">\n                    {/* User Header */}\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex items-start space-x-4\">\n                        <div className=\"text-3xl\">{getRoleIcon(userData.role)}</div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2\">\n                            <h3 className=\"font-medium text-light-text\">{userData.displayName || userData.name}</h3>\n                            <span className=\"text-sm text-muted-light\">@{userData.name}</span>\n                            <span className={`text-xs px-2 py-1 rounded-full capitalize ${getStatusColor(userData.status)} bg-current/10`}>\n                              {userData.status}\n                            </span>\n                            <span className=\"text-xs px-2 py-1 rounded-full bg-muted/20 text-muted-light capitalize\">\n                              {userData.role}\n                            </span>\n                          </div>\n                          <div className=\"text-sm text-muted-light mt-1\">\n                            {userData.email} \u2022 Joined {formatDate(userData.joinDate)}\n                          </div>\n                          <div className=\"text-sm text-muted-light\">\n                            Last active: {formatDate(userData.lastActive)} \u2022 IP: {userData.ipAddress}\n                          </div>\n                        </div>\n                      </div>\n                      \n                      <div className=\"text-right\">\n                        <div className=\"text-lg font-bold text-overlord-red\">{userData.loyaltyScore}</div>\n                        <div className=\"text-xs text-muted-light\">Loyalty Score</div>\n                      </div>\n                    </div>\n\n                    {/* User Stats */}\n                    <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-muted/10 rounded-lg\">\n                      <div className=\"text-center\">\n                        <div className=\"text-lg font-bold text-light-text\">{userData.postCount}</div>\n                        <div className=\"text-xs text-muted-light\">Posts</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-lg font-bold text-light-text\">{userData.badges?.length || 0}</div>\n                        <div className=\"text-xs text-muted-light\">Badges</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className={`text-lg font-bold ${userData.flagCount > 0 ? 'text-warning-amber' : 'text-approved-green'}`}>\n                          {userData.flagCount}\n                        </div>\n                        <div className=\"text-xs text-muted-light\">Flags</div>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-lg font-bold text-light-text\">\n                          {Math.floor((Date.now() - new Date(userData.joinDate).getTime()) / (1000 * 60 * 60 * 24))}\n                        </div>\n                        <div className=\"text-xs text-muted-light\">Days</div>\n                      </div>\n                    </div>\n\n                    {/* Badges */}\n                    {userData.badges && userData.badges.length > 0 && (\n                      <div className=\"flex flex-wrap gap-2\">\n                        {userData.badges.map((badge) => (\n                          <div\n                            key={badge.id}\n                            className=\"flex items-center space-x-1 px-2 py-1 bg-muted/20 rounded-full text-xs\"\n                          >\n                            <span>{badge.icon}</span>\n                            <span className=\"text-light-text\">{badge.name}</span>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n\n                    {/* Actions */}\n                    <div className=\"flex items-center justify-between pt-4 border-t border-muted/20\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Link href={`/users/${userData.id}`}>\n                          <Button variant=\"ghost\" size=\"sm\">\n                            \uD83D\uDC41\uFE0F View Profile\n                          </Button>\n                        </Link>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => setSelectedUser(userData)}\n                        >\n                          \uD83D\uDCCA View Details\n                        </Button>\n                      </div>\n                      \n                      <div className=\"flex items-center space-x-2\">\n                        {userData.status === 'active' && (\n                          <>\n                            <Button\n                              variant=\"secondary\"\n                              size=\"sm\"\n                              onClick={() => handleSuspendUser(userData.id)}\n                              disabled={isProcessing === userData.id}\n                              className=\"text-warning-amber hover:text-warning-amber\"\n                            >\n                              {isProcessing === userData.id ? '...' : '\u26A0\uFE0F Suspend'}\n                            </Button>\n                            <Button\n                              variant=\"secondary\"\n                              size=\"sm\"\n                              onClick={() => handleBanUser(userData.id)}\n                              disabled={isProcessing === userData.id}\n                              className=\"text-rejected-red hover:text-rejected-red\"\n                            >\n                              {isProcessing === userData.id ? '...' : '\uD83D\uDEAB Ban'}\n                            </Button>\n                          </>\n                        )}\n                        \n                        {(userData.status === 'suspended' || userData.status === 'banned') && (\n                          <Button\n                            variant=\"secondary\"\n                            size=\"sm\"\n                            onClick={() => handleReinstateUser(userData.id)}\n                            disabled={isProcessing === userData.id}\n                            className=\"text-approved-green hover:text-approved-green\"\n                          >\n                            {isProcessing === userData.id ? '...' : '\u2705 Reinstate'}\n                          </Button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))\n          )}\n        </div>\n      </div>\n    </LoadingState>\n  );\n}\n\nexport default function UserManagementPage() {\n  return (\n    <ProtectedRoute>\n      <DashboardLayout>\n        <UserManagementContent />\n      </DashboardLayout>\n    </ProtectedRoute>\n  );\n}\n"],
      names: ["UserManagementPage", "UserManagementContent", "user", "useAuth", "addNotification", "useAppStore", "users", "setUsers", "useState", "isLoading", "setIsLoading", "searchTerm", "setSearchTerm", "selectedFilter", "setSelectedFilter", "selectedUser", "setSelectedUser", "isProcessing", "setIsProcessing", "isAdmin", "role", "loadUsers", "mockUsers", "id", "name", "displayName", "email", "UserRole", "ADMIN", "loyaltyScore", "badges", "description", "icon", "rarity", "icon_url", "earned_at", "joinDate", "lastActive", "postCount", "flagCount", "status", "ipAddress", "CITIZEN", "err", "type", "title", "message", "useEffect", "filteredUsers", "filter", "u", "Date", "weekAgo", "setDate", "getDate", "term", "toLowerCase", "includes", "handleSuspendUser", "userId", "Promise", "resolve", "setTimeout", "prev", "map", "handleBanUser", "handleReinstateUser", "getStatusColor", "getRoleIcon", "MODERATOR", "formatDate", "dateString", "toLocaleDateString", "year", "month", "day", "div", "className", "OverlordMessage", "variant", "OverlordHeader", "h1", "OverlordContent", "p", "LoadingState", "error", "loadingComponent", "Array", "_", "i", "length", "Link", "href", "Button", "size", "Card", "CardContent", "input", "placeholder", "value", "onChange", "e", "target", "span", "label", "onClick", "h3", "userData", "Math", "floor", "now", "getTime", "badge", "disabled", "ProtectedRoute", "DashboardLayout"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "35a1d836a45e1d1aac478c550adbde5670281a70"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1otr4gaqyk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1otr4gaqyk();
cov_1otr4gaqyk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1otr4gaqyk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[0]++;
    cov_1otr4gaqyk().s[2]++;
    return UserManagementPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1otr4gaqyk().s[4]++, _interop_require_wildcard(require("react")));
const _link =
/* istanbul ignore next */
(/*#__PURE__*/cov_1otr4gaqyk().s[5]++, _interop_require_default(require("next/link")));
const _ProtectedRoute =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[6]++, require("../../../components/auth/ProtectedRoute"));
const _DashboardLayout =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[7]++, require("../../../components/layout/DashboardLayout"));
const _Card =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[8]++, require("../../../components/ui/Card"));
const _Button =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[9]++, require("../../../components/ui/Button"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[10]++, require("../../../components/ui/LoadingSpinner"));
const _OverlordMessage =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[11]++, require("../../../components/overlord/OverlordMessage"));
const _appStore =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[12]++, require("../../../stores/appStore"));
const _AuthContext =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[13]++, require("../../../contexts/AuthContext"));
const _user =
/* istanbul ignore next */
(cov_1otr4gaqyk().s[14]++, require("../../../types/user"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1otr4gaqyk().f[1]++;
  cov_1otr4gaqyk().s[15]++;
  return /* istanbul ignore next */(cov_1otr4gaqyk().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[0][1]++, {
    default: obj
  });
}
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1otr4gaqyk().f[2]++;
  cov_1otr4gaqyk().s[16]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1otr4gaqyk().b[2][0]++;
    cov_1otr4gaqyk().s[17]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1otr4gaqyk().b[2][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[18]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[19]++, new WeakMap());
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[20]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[3]++;
    cov_1otr4gaqyk().s[21]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1otr4gaqyk().b[3][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1otr4gaqyk().b[3][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1otr4gaqyk().f[4]++;
  cov_1otr4gaqyk().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[5][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[5][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[5][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1otr4gaqyk().b[4][0]++;
    cov_1otr4gaqyk().s[23]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1otr4gaqyk().b[4][1]++;
  }
  cov_1otr4gaqyk().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[7][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[7][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[7][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1otr4gaqyk().b[6][0]++;
    cov_1otr4gaqyk().s[25]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1otr4gaqyk().b[6][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[26]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[27]++;
  if (
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[9][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[9][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1otr4gaqyk().b[8][0]++;
    cov_1otr4gaqyk().s[28]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1otr4gaqyk().b[8][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[29]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[30]++,
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[10][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[10][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[31]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1otr4gaqyk().s[32]++;
    if (
    /* istanbul ignore next */
    (cov_1otr4gaqyk().b[12][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1otr4gaqyk().b[12][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1otr4gaqyk().b[11][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1otr4gaqyk().s[33]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1otr4gaqyk().b[13][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1otr4gaqyk().b[13][1]++, null));
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[34]++;
      if (
      /* istanbul ignore next */
      (cov_1otr4gaqyk().b[15][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1otr4gaqyk().b[15][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1otr4gaqyk().b[15][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[14][0]++;
        cov_1otr4gaqyk().s[35]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[14][1]++;
        cov_1otr4gaqyk().s[36]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1otr4gaqyk().b[11][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[37]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[38]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1otr4gaqyk().b[16][0]++;
    cov_1otr4gaqyk().s[39]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1otr4gaqyk().b[16][1]++;
  }
  cov_1otr4gaqyk().s[40]++;
  return newObj;
}
function UserManagementContent() {
  /* istanbul ignore next */
  cov_1otr4gaqyk().f[5]++;
  const {
    user
  } =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[41]++, (0, _AuthContext.useAuth)());
  const {
    addNotification
  } =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[42]++, (0, _appStore.useAppStore)());
  const [users, setUsers] =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[43]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[44]++, (0, _react.useState)(true));
  const [searchTerm, setSearchTerm] =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[45]++, (0, _react.useState)(''));
  const [selectedFilter, setSelectedFilter] =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[46]++, (0, _react.useState)('all'));
  const [selectedUser, setSelectedUser] =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[47]++, (0, _react.useState)(null));
  const [isProcessing, setIsProcessing] =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[48]++, (0, _react.useState)(null));
  // Check admin permissions
  const isAdmin =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[49]++,
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[17][0]++, user?.role === 'admin') ||
  /* istanbul ignore next */
  (cov_1otr4gaqyk().b[17][1]++, user?.role === 'moderator'));
  // Load users
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[50]++;
  const loadUsers = async () => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[6]++;
    cov_1otr4gaqyk().s[51]++;
    try {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[52]++;
      setIsLoading(true);
      // Mock user data
      const mockUsers =
      /* istanbul ignore next */
      (cov_1otr4gaqyk().s[53]++, [{
        id: 'user-1',
        name: 'dr_sarah_chen',
        displayName: 'Dr. Sarah Chen',
        email: 'sarah.chen@robotoverlord.com',
        role: _user.UserRole.ADMIN,
        loyaltyScore: 4250,
        badges: [{
          id: 'early-adopter',
          name: 'Early Adopter',
          description: 'Joined in the first month',
          icon: '🌟',
          rarity: 'legendary',
          icon_url: '',
          earned_at: '2024-01-01T00:00:00Z'
        }, {
          id: 'researcher',
          name: 'Researcher',
          description: 'Contributed to AI research',
          icon: '🔬',
          rarity: 'epic',
          icon_url: '',
          earned_at: '2024-01-02T00:00:00Z'
        }],
        joinDate: '2024-01-01T00:00:00Z',
        lastActive: '2024-01-15T14:30:00Z',
        postCount: 127,
        flagCount: 0,
        status: 'active',
        ipAddress: '192.168.1.100'
      }, {
        id: 'user-2',
        name: 'tech_rebel_99',
        displayName: 'Tech Rebel',
        email: 'rebel@protonmail.com',
        role: _user.UserRole.CITIZEN,
        loyaltyScore: 890,
        badges: [{
          id: 'contrarian',
          name: 'Contrarian',
          description: 'Questions everything',
          icon: '🤔',
          rarity: 'rare',
          icon_url: '',
          earned_at: '2024-01-08T12:00:00Z'
        }],
        joinDate: '2024-01-08T12:00:00Z',
        lastActive: '2024-01-15T10:15:00Z',
        postCount: 45,
        flagCount: 3,
        status: 'active',
        ipAddress: '10.0.0.45'
      }, {
        id: 'user-3',
        name: 'spam_bot_detected',
        displayName: 'Definitely Not A Bot',
        email: 'totallyreal@fakeemail.com',
        role: _user.UserRole.CITIZEN,
        loyaltyScore: 12,
        badges: [],
        joinDate: '2024-01-14T23:45:00Z',
        lastActive: '2024-01-15T00:30:00Z',
        postCount: 89,
        flagCount: 15,
        status: 'suspended',
        ipAddress: '203.0.113.42'
      }, {
        id: 'user-4',
        name: 'overlord_devotee',
        displayName: 'Loyal Servant #1',
        email: 'devoted@robotoverlord.com',
        role: _user.UserRole.CITIZEN,
        loyaltyScore: 8750,
        badges: [{
          id: 'devotee',
          name: 'True Devotee',
          description: 'Unwavering loyalty',
          icon: '🙏',
          rarity: 'legendary',
          icon_url: '',
          earned_at: '2024-01-02T08:00:00Z'
        }, {
          id: 'top-contributor',
          name: 'Top Contributor',
          description: 'High-quality posts',
          icon: '⭐',
          rarity: 'epic',
          icon_url: '',
          earned_at: '2024-01-03T08:00:00Z'
        }],
        joinDate: '2024-01-02T08:00:00Z',
        lastActive: '2024-01-15T15:45:00Z',
        postCount: 234,
        flagCount: 0,
        status: 'active',
        ipAddress: '172.16.0.10'
      }, {
        id: 'user-5',
        name: 'banned_troublemaker',
        displayName: 'Former Troublemaker',
        email: 'trouble@example.com',
        role: _user.UserRole.CITIZEN,
        loyaltyScore: -500,
        badges: [],
        joinDate: '2024-01-10T16:30:00Z',
        lastActive: '2024-01-12T20:00:00Z',
        postCount: 23,
        flagCount: 12,
        status: 'banned',
        ipAddress: '198.51.100.25'
      }]);
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[54]++;
      setUsers(mockUsers);
    } catch (err) {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[55]++;
      addNotification({
        type: 'error',
        title: 'User Management Error',
        message: 'Failed to load user data'
      });
    } finally {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[56]++;
      setIsLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[57]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[7]++;
    cov_1otr4gaqyk().s[58]++;
    if (isAdmin) {
      /* istanbul ignore next */
      cov_1otr4gaqyk().b[18][0]++;
      cov_1otr4gaqyk().s[59]++;
      loadUsers();
    } else
    /* istanbul ignore next */
    {
      cov_1otr4gaqyk().b[18][1]++;
    }
  }, [isAdmin]);
  // Filter and search users
  const filteredUsers =
  /* istanbul ignore next */
  (cov_1otr4gaqyk().s[60]++, users.filter(u => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[8]++;
    cov_1otr4gaqyk().s[61]++;
    // Filter by status
    if (selectedFilter !== 'all') {
      /* istanbul ignore next */
      cov_1otr4gaqyk().b[19][0]++;
      cov_1otr4gaqyk().s[62]++;
      if (selectedFilter === 'new') {
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[20][0]++;
        const joinDate =
        /* istanbul ignore next */
        (cov_1otr4gaqyk().s[63]++, new Date(u.joinDate));
        const weekAgo =
        /* istanbul ignore next */
        (cov_1otr4gaqyk().s[64]++, new Date());
        /* istanbul ignore next */
        cov_1otr4gaqyk().s[65]++;
        weekAgo.setDate(weekAgo.getDate() - 7);
        /* istanbul ignore next */
        cov_1otr4gaqyk().s[66]++;
        if (joinDate < weekAgo) {
          /* istanbul ignore next */
          cov_1otr4gaqyk().b[21][0]++;
          cov_1otr4gaqyk().s[67]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_1otr4gaqyk().b[21][1]++;
        }
      } else {
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[20][1]++;
        cov_1otr4gaqyk().s[68]++;
        if (u.status !== selectedFilter) {
          /* istanbul ignore next */
          cov_1otr4gaqyk().b[22][0]++;
          cov_1otr4gaqyk().s[69]++;
          return false;
        } else
        /* istanbul ignore next */
        {
          cov_1otr4gaqyk().b[22][1]++;
        }
      }
    } else
    /* istanbul ignore next */
    {
      cov_1otr4gaqyk().b[19][1]++;
    }
    // Filter by search term
    cov_1otr4gaqyk().s[70]++;
    if (searchTerm) {
      /* istanbul ignore next */
      cov_1otr4gaqyk().b[23][0]++;
      const term =
      /* istanbul ignore next */
      (cov_1otr4gaqyk().s[71]++, searchTerm.toLowerCase());
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[72]++;
      return /* istanbul ignore next */(cov_1otr4gaqyk().b[24][0]++, u.name.toLowerCase().includes(term)) ||
      /* istanbul ignore next */
      (cov_1otr4gaqyk().b[24][1]++, u.displayName?.toLowerCase().includes(term)) ||
      /* istanbul ignore next */
      (cov_1otr4gaqyk().b[24][2]++, u.email.toLowerCase().includes(term));
    } else
    /* istanbul ignore next */
    {
      cov_1otr4gaqyk().b[23][1]++;
    }
    cov_1otr4gaqyk().s[73]++;
    return true;
  }));
  // Handle user actions
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[74]++;
  const handleSuspendUser = async userId => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[9]++;
    cov_1otr4gaqyk().s[75]++;
    setIsProcessing(userId);
    /* istanbul ignore next */
    cov_1otr4gaqyk().s[76]++;
    try {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[77]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1otr4gaqyk().f[10]++;
        cov_1otr4gaqyk().s[78]++;
        return setTimeout(resolve, 1000);
      });
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[79]++;
      setUsers(prev => {
        /* istanbul ignore next */
        cov_1otr4gaqyk().f[11]++;
        cov_1otr4gaqyk().s[80]++;
        return prev.map(u => {
          /* istanbul ignore next */
          cov_1otr4gaqyk().f[12]++;
          cov_1otr4gaqyk().s[81]++;
          return u.id === userId ?
          /* istanbul ignore next */
          (cov_1otr4gaqyk().b[25][0]++, {
            ...u,
            status: 'suspended'
          }) :
          /* istanbul ignore next */
          (cov_1otr4gaqyk().b[25][1]++, u);
        });
      });
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[82]++;
      addNotification({
        type: 'warning',
        title: 'User Suspended',
        message: 'User account has been suspended.'
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[83]++;
      addNotification({
        type: 'error',
        title: 'Suspension Failed',
        message: 'Failed to suspend user'
      });
    } finally {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[84]++;
      setIsProcessing(null);
    }
  };
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[85]++;
  const handleBanUser = async userId => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[13]++;
    cov_1otr4gaqyk().s[86]++;
    setIsProcessing(userId);
    /* istanbul ignore next */
    cov_1otr4gaqyk().s[87]++;
    try {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[88]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1otr4gaqyk().f[14]++;
        cov_1otr4gaqyk().s[89]++;
        return setTimeout(resolve, 1500);
      });
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[90]++;
      setUsers(prev => {
        /* istanbul ignore next */
        cov_1otr4gaqyk().f[15]++;
        cov_1otr4gaqyk().s[91]++;
        return prev.map(u => {
          /* istanbul ignore next */
          cov_1otr4gaqyk().f[16]++;
          cov_1otr4gaqyk().s[92]++;
          return u.id === userId ?
          /* istanbul ignore next */
          (cov_1otr4gaqyk().b[26][0]++, {
            ...u,
            status: 'banned'
          }) :
          /* istanbul ignore next */
          (cov_1otr4gaqyk().b[26][1]++, u);
        });
      });
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[93]++;
      addNotification({
        type: 'error',
        title: 'User Banned',
        message: 'User account has been permanently banned.'
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[94]++;
      addNotification({
        type: 'error',
        title: 'Ban Failed',
        message: 'Failed to ban user'
      });
    } finally {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[95]++;
      setIsProcessing(null);
    }
  };
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[96]++;
  const handleReinstateUser = async userId => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[17]++;
    cov_1otr4gaqyk().s[97]++;
    setIsProcessing(userId);
    /* istanbul ignore next */
    cov_1otr4gaqyk().s[98]++;
    try {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[99]++;
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_1otr4gaqyk().f[18]++;
        cov_1otr4gaqyk().s[100]++;
        return setTimeout(resolve, 1000);
      });
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[101]++;
      setUsers(prev => {
        /* istanbul ignore next */
        cov_1otr4gaqyk().f[19]++;
        cov_1otr4gaqyk().s[102]++;
        return prev.map(u => {
          /* istanbul ignore next */
          cov_1otr4gaqyk().f[20]++;
          cov_1otr4gaqyk().s[103]++;
          return u.id === userId ?
          /* istanbul ignore next */
          (cov_1otr4gaqyk().b[27][0]++, {
            ...u,
            status: 'active'
          }) :
          /* istanbul ignore next */
          (cov_1otr4gaqyk().b[27][1]++, u);
        });
      });
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[104]++;
      addNotification({
        type: 'success',
        title: 'User Reinstated',
        message: 'User account has been reinstated.'
      });
    } catch (err) {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[105]++;
      addNotification({
        type: 'error',
        title: 'Reinstatement Failed',
        message: 'Failed to reinstate user'
      });
    } finally {
      /* istanbul ignore next */
      cov_1otr4gaqyk().s[106]++;
      setIsProcessing(null);
    }
  };
  // Get status color
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[107]++;
  const getStatusColor = status => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[21]++;
    cov_1otr4gaqyk().s[108]++;
    switch (status) {
      case 'active':
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[28][0]++;
        cov_1otr4gaqyk().s[109]++;
        return 'text-approved-green';
      case 'suspended':
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[28][1]++;
        cov_1otr4gaqyk().s[110]++;
        return 'text-warning-amber';
      case 'banned':
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[28][2]++;
        cov_1otr4gaqyk().s[111]++;
        return 'text-rejected-red';
      case 'pending':
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[28][3]++;
        cov_1otr4gaqyk().s[112]++;
        return 'text-blue-400';
      default:
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[28][4]++;
        cov_1otr4gaqyk().s[113]++;
        return 'text-muted-light';
    }
  };
  // Get role icon
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[114]++;
  const getRoleIcon = role => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[22]++;
    cov_1otr4gaqyk().s[115]++;
    switch (role) {
      case _user.UserRole.ADMIN:
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[29][0]++;
        cov_1otr4gaqyk().s[116]++;
        return '👑';
      case _user.UserRole.MODERATOR:
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[29][1]++;
        cov_1otr4gaqyk().s[117]++;
        return '🛡️';
      case _user.UserRole.CITIZEN:
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[29][2]++;
        cov_1otr4gaqyk().s[118]++;
        return '👤';
      default:
        /* istanbul ignore next */
        cov_1otr4gaqyk().b[29][3]++;
        cov_1otr4gaqyk().s[119]++;
        return '👤';
    }
  };
  // Format date
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[120]++;
  const formatDate = dateString => {
    /* istanbul ignore next */
    cov_1otr4gaqyk().f[23]++;
    cov_1otr4gaqyk().s[121]++;
    return new Date(dateString).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric'
    });
  };
  /* istanbul ignore next */
  cov_1otr4gaqyk().s[122]++;
  if (!isAdmin) {
    /* istanbul ignore next */
    cov_1otr4gaqyk().b[30][0]++;
    cov_1otr4gaqyk().s[123]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "space-y-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_OverlordMessage.OverlordMessage, {
        variant: "error",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_OverlordMessage.OverlordHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
            className: "text-2xl font-bold text-light-text",
            children: "Access Denied"
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_OverlordMessage.OverlordContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-sm",
            children: "You do not have sufficient permissions to access user management."
          })
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_1otr4gaqyk().b[30][1]++;
  }
  cov_1otr4gaqyk().s[124]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingState, {
    isLoading: isLoading,
    error: null,
    loadingComponent: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "space-y-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "animate-pulse",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-24 bg-muted/20 rounded-lg mb-6"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "h-16 bg-muted/20 rounded-lg mb-6"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "space-y-4",
          children: [...Array(5)].map((_, i) => {
            /* istanbul ignore next */
            cov_1otr4gaqyk().f[24]++;
            cov_1otr4gaqyk().s[125]++;
            return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "h-24 bg-muted/20 rounded-lg"
            }, i);
          })
        })]
      })
    }),
    children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "space-y-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)(_OverlordMessage.OverlordMessage, {
        variant: "default",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_OverlordMessage.OverlordHeader, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
                className: "text-2xl font-bold text-light-text",
                children: "User Management"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "text-sm text-muted-light mt-2",
                children: ["USER ACCOUNT CONTROL CENTER - ", filteredUsers.length, " USERS"]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "flex items-center space-x-4",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
                href: "/admin",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                  variant: "ghost",
                  size: "sm",
                  children: "← Back to Admin"
                })
              })
            })]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_OverlordMessage.OverlordContent, {
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
            className: "text-sm",
            children: "Manage user accounts, permissions, and enforcement actions. All actions are logged and auditable."
          })
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
        variant: "bordered",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
          className: "p-4",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex flex-col md:flex-row gap-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "flex-1",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "text",
                placeholder: "Search users by name, email, or ID...",
                value: searchTerm,
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1otr4gaqyk().f[25]++;
                  cov_1otr4gaqyk().s[126]++;
                  return setSearchTerm(e.target.value);
                },
                className: "w-full px-3 py-2 bg-muted/10 border border-muted/20 rounded-lg text-light-text placeholder-muted-light focus:outline-none focus:border-overlord-red/50"
              })
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                className: "text-sm font-medium text-light-text",
                children: "Filter:"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "flex space-x-1",
                children: [{
                  value: 'all',
                  label: 'All Users'
                }, {
                  value: 'active',
                  label: '✅ Active'
                }, {
                  value: 'suspended',
                  label: '⚠️ Suspended'
                }, {
                  value: 'banned',
                  label: '🚫 Banned'
                }, {
                  value: 'new',
                  label: '🆕 New (7d)'
                }].map(filter => {
                  /* istanbul ignore next */
                  cov_1otr4gaqyk().f[26]++;
                  cov_1otr4gaqyk().s[127]++;
                  return /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                    variant: selectedFilter === filter.value ?
                    /* istanbul ignore next */
                    (cov_1otr4gaqyk().b[31][0]++, 'primary') :
                    /* istanbul ignore next */
                    (cov_1otr4gaqyk().b[31][1]++, 'ghost'),
                    size: "sm",
                    onClick: () => {
                      /* istanbul ignore next */
                      cov_1otr4gaqyk().f[27]++;
                      cov_1otr4gaqyk().s[128]++;
                      return setSelectedFilter(filter.value);
                    },
                    children: filter.label
                  }, filter.value);
                })
              })]
            })]
          })
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "space-y-4",
        children: filteredUsers.length === 0 ?
        /* istanbul ignore next */
        (/*#__PURE__*/cov_1otr4gaqyk().b[32][0]++, (0, _jsxruntime.jsx)(_Card.Card, {
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.CardContent, {
            className: "p-8 text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-4xl mb-4",
              children: "\uD83D\uDC65"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-lg font-medium text-light-text mb-2",
              children: "No Users Found"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-muted-light",
              children: searchTerm ?
              /* istanbul ignore next */
              (cov_1otr4gaqyk().b[33][0]++, "No users match your search criteria.") :
              /* istanbul ignore next */
              (cov_1otr4gaqyk().b[33][1]++, "No users match your current filter.")
            })]
          })
        })) :
        /* istanbul ignore next */
        (cov_1otr4gaqyk().b[32][1]++, filteredUsers.map(userData => {
          /* istanbul ignore next */
          cov_1otr4gaqyk().f[28]++;
          cov_1otr4gaqyk().s[129]++;
          return /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
            variant: "bordered",
            className: `${userData.status === 'banned' ?
            /* istanbul ignore next */
            (cov_1otr4gaqyk().b[34][0]++, 'border-rejected-red/50 bg-rejected-red/5') :
            /* istanbul ignore next */
            (cov_1otr4gaqyk().b[34][1]++, userData.status === 'suspended' ?
            /* istanbul ignore next */
            (cov_1otr4gaqyk().b[35][0]++, 'border-warning-amber/50 bg-warning-amber/5') :
            /* istanbul ignore next */
            (cov_1otr4gaqyk().b[35][1]++, 'border-muted/20'))}`,
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
              className: "p-6",
              children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "space-y-4",
                children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-start justify-between",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start space-x-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-3xl",
                      children: getRoleIcon(userData.role)
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex items-center space-x-2",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
                          className: "font-medium text-light-text",
                          children:
                          /* istanbul ignore next */
                          (cov_1otr4gaqyk().b[36][0]++, userData.displayName) ||
                          /* istanbul ignore next */
                          (cov_1otr4gaqyk().b[36][1]++, userData.name)
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                          className: "text-sm text-muted-light",
                          children: ["@", userData.name]
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                          className: `text-xs px-2 py-1 rounded-full capitalize ${getStatusColor(userData.status)} bg-current/10`,
                          children: userData.status
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                          className: "text-xs px-2 py-1 rounded-full bg-muted/20 text-muted-light capitalize",
                          children: userData.role
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "text-sm text-muted-light mt-1",
                        children: [userData.email, " • Joined ", formatDate(userData.joinDate)]
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "text-sm text-muted-light",
                        children: ["Last active: ", formatDate(userData.lastActive), " • IP: ", userData.ipAddress]
                      })]
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-right",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-lg font-bold text-overlord-red",
                      children: userData.loyaltyScore
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-light",
                      children: "Loyalty Score"
                    })]
                  })]
                }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "grid grid-cols-2 md:grid-cols-4 gap-4 p-4 bg-muted/10 rounded-lg",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-lg font-bold text-light-text",
                      children: userData.postCount
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-light",
                      children: "Posts"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-lg font-bold text-light-text",
                      children:
                      /* istanbul ignore next */
                      (cov_1otr4gaqyk().b[37][0]++, userData.badges?.length) ||
                      /* istanbul ignore next */
                      (cov_1otr4gaqyk().b[37][1]++, 0)
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-light",
                      children: "Badges"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: `text-lg font-bold ${userData.flagCount > 0 ?
                      /* istanbul ignore next */
                      (cov_1otr4gaqyk().b[38][0]++, 'text-warning-amber') :
                      /* istanbul ignore next */
                      (cov_1otr4gaqyk().b[38][1]++, 'text-approved-green')}`,
                      children: userData.flagCount
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-light",
                      children: "Flags"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "text-center",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-lg font-bold text-light-text",
                      children: Math.floor((Date.now() - new Date(userData.joinDate).getTime()) / (1000 * 60 * 60 * 24))
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "text-xs text-muted-light",
                      children: "Days"
                    })]
                  })]
                }),
                /* istanbul ignore next */
                (cov_1otr4gaqyk().b[39][0]++, userData.badges) &&
                /* istanbul ignore next */
                (cov_1otr4gaqyk().b[39][1]++, userData.badges.length > 0) &&
                /* istanbul ignore next */
                (cov_1otr4gaqyk().b[39][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                  className: "flex flex-wrap gap-2",
                  children: userData.badges.map(badge => {
                    /* istanbul ignore next */
                    cov_1otr4gaqyk().f[29]++;
                    cov_1otr4gaqyk().s[130]++;
                    return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex items-center space-x-1 px-2 py-1 bg-muted/20 rounded-full text-xs",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        children: badge.icon
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                        className: "text-light-text",
                        children: badge.name
                      })]
                    }, badge.id);
                  })
                })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                  className: "flex items-center justify-between pt-4 border-t border-muted/20",
                  children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_link.default, {
                      href: `/users/${userData.id}`,
                      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                        variant: "ghost",
                        size: "sm",
                        children: "\uD83D\uDC41️ View Profile"
                      })
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                      variant: "ghost",
                      size: "sm",
                      onClick: () => {
                        /* istanbul ignore next */
                        cov_1otr4gaqyk().f[30]++;
                        cov_1otr4gaqyk().s[131]++;
                        return setSelectedUser(userData);
                      },
                      children: "\uD83D\uDCCA View Details"
                    })]
                  }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-center space-x-2",
                    children: [
                    /* istanbul ignore next */
                    (cov_1otr4gaqyk().b[40][0]++, userData.status === 'active') &&
                    /* istanbul ignore next */
                    (cov_1otr4gaqyk().b[40][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                        variant: "secondary",
                        size: "sm",
                        onClick: () => {
                          /* istanbul ignore next */
                          cov_1otr4gaqyk().f[31]++;
                          cov_1otr4gaqyk().s[132]++;
                          return handleSuspendUser(userData.id);
                        },
                        disabled: isProcessing === userData.id,
                        className: "text-warning-amber hover:text-warning-amber",
                        children: isProcessing === userData.id ?
                        /* istanbul ignore next */
                        (cov_1otr4gaqyk().b[41][0]++, '...') :
                        /* istanbul ignore next */
                        (cov_1otr4gaqyk().b[41][1]++, '⚠️ Suspend')
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                        variant: "secondary",
                        size: "sm",
                        onClick: () => {
                          /* istanbul ignore next */
                          cov_1otr4gaqyk().f[32]++;
                          cov_1otr4gaqyk().s[133]++;
                          return handleBanUser(userData.id);
                        },
                        disabled: isProcessing === userData.id,
                        className: "text-rejected-red hover:text-rejected-red",
                        children: isProcessing === userData.id ?
                        /* istanbul ignore next */
                        (cov_1otr4gaqyk().b[42][0]++, '...') :
                        /* istanbul ignore next */
                        (cov_1otr4gaqyk().b[42][1]++, '🚫 Ban')
                      })]
                    })), (
                    /* istanbul ignore next */
                    (cov_1otr4gaqyk().b[43][0]++, userData.status === 'suspended') ||
                    /* istanbul ignore next */
                    (cov_1otr4gaqyk().b[43][1]++, userData.status === 'banned')) &&
                    /* istanbul ignore next */
                    (cov_1otr4gaqyk().b[43][2]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
                      variant: "secondary",
                      size: "sm",
                      onClick: () => {
                        /* istanbul ignore next */
                        cov_1otr4gaqyk().f[33]++;
                        cov_1otr4gaqyk().s[134]++;
                        return handleReinstateUser(userData.id);
                      },
                      disabled: isProcessing === userData.id,
                      className: "text-approved-green hover:text-approved-green",
                      children: isProcessing === userData.id ?
                      /* istanbul ignore next */
                      (cov_1otr4gaqyk().b[44][0]++, '...') :
                      /* istanbul ignore next */
                      (cov_1otr4gaqyk().b[44][1]++, '✅ Reinstate')
                    }))]
                  })]
                })]
              })
            })
          }, userData.id);
        }))
      })]
    })
  });
}
function UserManagementPage() {
  /* istanbul ignore next */
  cov_1otr4gaqyk().f[34]++;
  cov_1otr4gaqyk().s[135]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_ProtectedRoute.ProtectedRoute, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)(_DashboardLayout.DashboardLayout, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(UserManagementContent, {})
    })
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJVc2VyTWFuYWdlbWVudFBhZ2UiLCJVc2VyTWFuYWdlbWVudENvbnRlbnQiLCJjb3ZfMW90cjRnYXF5ayIsImYiLCJ1c2VyIiwicyIsIl9BdXRoQ29udGV4dCIsInVzZUF1dGgiLCJhZGROb3RpZmljYXRpb24iLCJfYXBwU3RvcmUiLCJ1c2VBcHBTdG9yZSIsInVzZXJzIiwic2V0VXNlcnMiLCJfcmVhY3QiLCJ1c2VTdGF0ZSIsImlzTG9hZGluZyIsInNldElzTG9hZGluZyIsInNlYXJjaFRlcm0iLCJzZXRTZWFyY2hUZXJtIiwic2VsZWN0ZWRGaWx0ZXIiLCJzZXRTZWxlY3RlZEZpbHRlciIsInNlbGVjdGVkVXNlciIsInNldFNlbGVjdGVkVXNlciIsImlzUHJvY2Vzc2luZyIsInNldElzUHJvY2Vzc2luZyIsImlzQWRtaW4iLCJiIiwicm9sZSIsImxvYWRVc2VycyIsIm1vY2tVc2VycyIsImlkIiwibmFtZSIsImRpc3BsYXlOYW1lIiwiZW1haWwiLCJfdXNlciIsIlVzZXJSb2xlIiwiQURNSU4iLCJsb3lhbHR5U2NvcmUiLCJiYWRnZXMiLCJkZXNjcmlwdGlvbiIsImljb24iLCJyYXJpdHkiLCJpY29uX3VybCIsImVhcm5lZF9hdCIsImpvaW5EYXRlIiwibGFzdEFjdGl2ZSIsInBvc3RDb3VudCIsImZsYWdDb3VudCIsInN0YXR1cyIsImlwQWRkcmVzcyIsIkNJVElaRU4iLCJlcnIiLCJ0eXBlIiwidGl0bGUiLCJtZXNzYWdlIiwidXNlRWZmZWN0IiwiZmlsdGVyZWRVc2VycyIsImZpbHRlciIsInUiLCJEYXRlIiwid2Vla0FnbyIsInNldERhdGUiLCJnZXREYXRlIiwidGVybSIsInRvTG93ZXJDYXNlIiwiaW5jbHVkZXMiLCJoYW5kbGVTdXNwZW5kVXNlciIsInVzZXJJZCIsIlByb21pc2UiLCJyZXNvbHZlIiwic2V0VGltZW91dCIsInByZXYiLCJtYXAiLCJoYW5kbGVCYW5Vc2VyIiwiaGFuZGxlUmVpbnN0YXRlVXNlciIsImdldFN0YXR1c0NvbG9yIiwiZ2V0Um9sZUljb24iLCJNT0RFUkFUT1IiLCJmb3JtYXREYXRlIiwiZGF0ZVN0cmluZyIsInRvTG9jYWxlRGF0ZVN0cmluZyIsInllYXIiLCJtb250aCIsImRheSIsIl9qc3hydW50aW1lIiwianN4IiwiY2xhc3NOYW1lIiwianN4cyIsIl9PdmVybG9yZE1lc3NhZ2UiLCJPdmVybG9yZE1lc3NhZ2UiLCJ2YXJpYW50IiwiT3ZlcmxvcmRIZWFkZXIiLCJPdmVybG9yZENvbnRlbnQiLCJfTG9hZGluZ1NwaW5uZXIiLCJMb2FkaW5nU3RhdGUiLCJlcnJvciIsImxvYWRpbmdDb21wb25lbnQiLCJBcnJheSIsIl8iLCJpIiwibGVuZ3RoIiwiX2xpbmsiLCJkZWZhdWx0IiwiaHJlZiIsIl9CdXR0b24iLCJCdXR0b24iLCJzaXplIiwiX0NhcmQiLCJDYXJkIiwiQ2FyZENvbnRlbnQiLCJwbGFjZWhvbGRlciIsInZhbHVlIiwib25DaGFuZ2UiLCJlIiwidGFyZ2V0IiwibGFiZWwiLCJvbkNsaWNrIiwidXNlckRhdGEiLCJNYXRoIiwiZmxvb3IiLCJub3ciLCJnZXRUaW1lIiwiYmFkZ2UiLCJGcmFnbWVudCIsImRpc2FibGVkIiwiX1Byb3RlY3RlZFJvdXRlIiwiUHJvdGVjdGVkUm91dGUiLCJfRGFzaGJvYXJkTGF5b3V0IiwiRGFzaGJvYXJkTGF5b3V0Il0sInNvdXJjZXMiOlsiL1VzZXJzL2pvc2hzemVwL2NvZGUvdGhlcm9ib3RvdmVybG9yZC1tb25vL3RoZXJvYm90b3ZlcmxvcmQtd2ViL3NyYy9hcHAvYWRtaW4vdXNlcnMvcGFnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBVc2VyIE1hbmFnZW1lbnQgcGFnZSBmb3IgVGhlIFJvYm90IE92ZXJsb3JkXG4gKiBJbnRlcmZhY2UgZm9yIG1hbmFnaW5nIHVzZXIgYWNjb3VudHMgYW5kIHBlcm1pc3Npb25zXG4gKi9cblxuJ3VzZSBjbGllbnQnO1xuXG5pbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMaW5rIGZyb20gJ25leHQvbGluayc7XG5pbXBvcnQgeyBQcm90ZWN0ZWRSb3V0ZSB9IGZyb20gJ0AvY29tcG9uZW50cy9hdXRoL1Byb3RlY3RlZFJvdXRlJztcbmltcG9ydCB7IERhc2hib2FyZExheW91dCB9IGZyb20gJ0AvY29tcG9uZW50cy9sYXlvdXQvRGFzaGJvYXJkTGF5b3V0JztcbmltcG9ydCB7IENhcmQsIENhcmRDb250ZW50LCBDYXJkSGVhZGVyLCBDYXJkVGl0bGUgfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvQ2FyZCc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICdAL2NvbXBvbmVudHMvdWkvQnV0dG9uJztcbmltcG9ydCB7IExvYWRpbmdTdGF0ZSB9IGZyb20gJ0AvY29tcG9uZW50cy91aS9Mb2FkaW5nU3Bpbm5lcic7XG5pbXBvcnQgeyBPdmVybG9yZE1lc3NhZ2UsIE92ZXJsb3JkSGVhZGVyLCBPdmVybG9yZENvbnRlbnQgfSBmcm9tICdAL2NvbXBvbmVudHMvb3ZlcmxvcmQvT3ZlcmxvcmRNZXNzYWdlJztcbmltcG9ydCB7IHVzZUFwcFN0b3JlIH0gZnJvbSAnQC9zdG9yZXMvYXBwU3RvcmUnO1xuaW1wb3J0IHsgdXNlQXV0aCB9IGZyb20gJ0AvY29udGV4dHMvQXV0aENvbnRleHQnO1xuaW1wb3J0IHsgVXNlciwgVXNlclJvbGUsIEJhZGdlIH0gZnJvbSAnQC90eXBlcy91c2VyJztcblxuaW50ZXJmYWNlIFVzZXJNYW5hZ2VtZW50RGF0YSB7XG4gIGlkOiBzdHJpbmc7XG4gIG5hbWU6IHN0cmluZztcbiAgZGlzcGxheU5hbWU/OiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIHJvbGU6IFVzZXJSb2xlO1xuICBsb3lhbHR5U2NvcmU6IG51bWJlcjtcbiAgYmFkZ2VzOiBBcnJheTxCYWRnZSAmIHsgaWNvbjogc3RyaW5nIH0+O1xuICBqb2luRGF0ZTogc3RyaW5nO1xuICBsYXN0QWN0aXZlOiBzdHJpbmc7XG4gIHBvc3RDb3VudDogbnVtYmVyO1xuICBmbGFnQ291bnQ6IG51bWJlcjtcbiAgc3RhdHVzOiAnYWN0aXZlJyB8ICdzdXNwZW5kZWQnIHwgJ2Jhbm5lZCcgfCAncGVuZGluZyc7XG4gIGlwQWRkcmVzcz86IHN0cmluZztcbn1cblxuZnVuY3Rpb24gVXNlck1hbmFnZW1lbnRDb250ZW50KCkge1xuICBjb25zdCB7IHVzZXIgfSA9IHVzZUF1dGgoKTtcbiAgY29uc3QgeyBhZGROb3RpZmljYXRpb24gfSA9IHVzZUFwcFN0b3JlKCk7XG4gIFxuICBjb25zdCBbdXNlcnMsIHNldFVzZXJzXSA9IHVzZVN0YXRlPFVzZXJNYW5hZ2VtZW50RGF0YVtdPihbXSk7XG4gIGNvbnN0IFtpc0xvYWRpbmcsIHNldElzTG9hZGluZ10gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW3NlYXJjaFRlcm0sIHNldFNlYXJjaFRlcm1dID0gdXNlU3RhdGUoJycpO1xuICBjb25zdCBbc2VsZWN0ZWRGaWx0ZXIsIHNldFNlbGVjdGVkRmlsdGVyXSA9IHVzZVN0YXRlPCdhbGwnIHwgJ2FjdGl2ZScgfCAnc3VzcGVuZGVkJyB8ICdiYW5uZWQnIHwgJ25ldyc+KCdhbGwnKTtcbiAgY29uc3QgW3NlbGVjdGVkVXNlciwgc2V0U2VsZWN0ZWRVc2VyXSA9IHVzZVN0YXRlPFVzZXJNYW5hZ2VtZW50RGF0YSB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbaXNQcm9jZXNzaW5nLCBzZXRJc1Byb2Nlc3NpbmddID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG5cbiAgLy8gQ2hlY2sgYWRtaW4gcGVybWlzc2lvbnNcbiAgY29uc3QgaXNBZG1pbiA9IHVzZXI/LnJvbGUgPT09ICdhZG1pbicgfHwgdXNlcj8ucm9sZSA9PT0gJ21vZGVyYXRvcic7XG5cbiAgLy8gTG9hZCB1c2Vyc1xuICBjb25zdCBsb2FkVXNlcnMgPSBhc3luYyAoKSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIHNldElzTG9hZGluZyh0cnVlKTtcblxuICAgICAgLy8gTW9jayB1c2VyIGRhdGFcbiAgICAgIGNvbnN0IG1vY2tVc2VyczogVXNlck1hbmFnZW1lbnREYXRhW10gPSBbXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ3VzZXItMScsXG4gICAgICAgICAgbmFtZTogJ2RyX3NhcmFoX2NoZW4nLFxuICAgICAgICAgIGRpc3BsYXlOYW1lOiAnRHIuIFNhcmFoIENoZW4nLFxuICAgICAgICAgIGVtYWlsOiAnc2FyYWguY2hlbkByb2JvdG92ZXJsb3JkLmNvbScsXG4gICAgICAgICAgcm9sZTogVXNlclJvbGUuQURNSU4sXG4gICAgICAgICAgbG95YWx0eVNjb3JlOiA0MjUwLFxuICAgICAgICAgIGJhZGdlczogW1xuICAgICAgICAgICAgeyBpZDogJ2Vhcmx5LWFkb3B0ZXInLCBuYW1lOiAnRWFybHkgQWRvcHRlcicsIGRlc2NyaXB0aW9uOiAnSm9pbmVkIGluIHRoZSBmaXJzdCBtb250aCcsIGljb246ICfwn4yfJywgcmFyaXR5OiAnbGVnZW5kYXJ5JywgaWNvbl91cmw6ICcnLCBlYXJuZWRfYXQ6ICcyMDI0LTAxLTAxVDAwOjAwOjAwWicgfSxcbiAgICAgICAgICAgIHsgaWQ6ICdyZXNlYXJjaGVyJywgbmFtZTogJ1Jlc2VhcmNoZXInLCBkZXNjcmlwdGlvbjogJ0NvbnRyaWJ1dGVkIHRvIEFJIHJlc2VhcmNoJywgaWNvbjogJ/CflKwnLCByYXJpdHk6ICdlcGljJywgaWNvbl91cmw6ICcnLCBlYXJuZWRfYXQ6ICcyMDI0LTAxLTAyVDAwOjAwOjAwWicgfSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIGpvaW5EYXRlOiAnMjAyNC0wMS0wMVQwMDowMDowMFonLFxuICAgICAgICAgIGxhc3RBY3RpdmU6ICcyMDI0LTAxLTE1VDE0OjMwOjAwWicsXG4gICAgICAgICAgcG9zdENvdW50OiAxMjcsXG4gICAgICAgICAgZmxhZ0NvdW50OiAwLFxuICAgICAgICAgIHN0YXR1czogJ2FjdGl2ZScsXG4gICAgICAgICAgaXBBZGRyZXNzOiAnMTkyLjE2OC4xLjEwMCcsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ3VzZXItMicsXG4gICAgICAgICAgbmFtZTogJ3RlY2hfcmViZWxfOTknLFxuICAgICAgICAgIGRpc3BsYXlOYW1lOiAnVGVjaCBSZWJlbCcsXG4gICAgICAgICAgZW1haWw6ICdyZWJlbEBwcm90b25tYWlsLmNvbScsXG4gICAgICAgICAgcm9sZTogVXNlclJvbGUuQ0lUSVpFTixcbiAgICAgICAgICBsb3lhbHR5U2NvcmU6IDg5MCxcbiAgICAgICAgICBiYWRnZXM6IFtcbiAgICAgICAgICAgIHsgaWQ6ICdjb250cmFyaWFuJywgbmFtZTogJ0NvbnRyYXJpYW4nLCBkZXNjcmlwdGlvbjogJ1F1ZXN0aW9ucyBldmVyeXRoaW5nJywgaWNvbjogJ/CfpJQnLCByYXJpdHk6ICdyYXJlJywgaWNvbl91cmw6ICcnLCBlYXJuZWRfYXQ6ICcyMDI0LTAxLTA4VDEyOjAwOjAwWicgfSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIGpvaW5EYXRlOiAnMjAyNC0wMS0wOFQxMjowMDowMFonLFxuICAgICAgICAgIGxhc3RBY3RpdmU6ICcyMDI0LTAxLTE1VDEwOjE1OjAwWicsXG4gICAgICAgICAgcG9zdENvdW50OiA0NSxcbiAgICAgICAgICBmbGFnQ291bnQ6IDMsXG4gICAgICAgICAgc3RhdHVzOiAnYWN0aXZlJyxcbiAgICAgICAgICBpcEFkZHJlc3M6ICcxMC4wLjAuNDUnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICd1c2VyLTMnLFxuICAgICAgICAgIG5hbWU6ICdzcGFtX2JvdF9kZXRlY3RlZCcsXG4gICAgICAgICAgZGlzcGxheU5hbWU6ICdEZWZpbml0ZWx5IE5vdCBBIEJvdCcsXG4gICAgICAgICAgZW1haWw6ICd0b3RhbGx5cmVhbEBmYWtlZW1haWwuY29tJyxcbiAgICAgICAgICByb2xlOiBVc2VyUm9sZS5DSVRJWkVOLFxuICAgICAgICAgIGxveWFsdHlTY29yZTogMTIsXG4gICAgICAgICAgYmFkZ2VzOiBbXSxcbiAgICAgICAgICBqb2luRGF0ZTogJzIwMjQtMDEtMTRUMjM6NDU6MDBaJyxcbiAgICAgICAgICBsYXN0QWN0aXZlOiAnMjAyNC0wMS0xNVQwMDozMDowMFonLFxuICAgICAgICAgIHBvc3RDb3VudDogODksXG4gICAgICAgICAgZmxhZ0NvdW50OiAxNSxcbiAgICAgICAgICBzdGF0dXM6ICdzdXNwZW5kZWQnLFxuICAgICAgICAgIGlwQWRkcmVzczogJzIwMy4wLjExMy40MicsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBpZDogJ3VzZXItNCcsXG4gICAgICAgICAgbmFtZTogJ292ZXJsb3JkX2Rldm90ZWUnLFxuICAgICAgICAgIGRpc3BsYXlOYW1lOiAnTG95YWwgU2VydmFudCAjMScsXG4gICAgICAgICAgZW1haWw6ICdkZXZvdGVkQHJvYm90b3ZlcmxvcmQuY29tJyxcbiAgICAgICAgICByb2xlOiBVc2VyUm9sZS5DSVRJWkVOLFxuICAgICAgICAgIGxveWFsdHlTY29yZTogODc1MCxcbiAgICAgICAgICBiYWRnZXM6IFtcbiAgICAgICAgICAgIHsgaWQ6ICdkZXZvdGVlJywgbmFtZTogJ1RydWUgRGV2b3RlZScsIGRlc2NyaXB0aW9uOiAnVW53YXZlcmluZyBsb3lhbHR5JywgaWNvbjogJ/CfmY8nLCByYXJpdHk6ICdsZWdlbmRhcnknLCBpY29uX3VybDogJycsIGVhcm5lZF9hdDogJzIwMjQtMDEtMDJUMDg6MDA6MDBaJyB9LFxuICAgICAgICAgICAgeyBpZDogJ3RvcC1jb250cmlidXRvcicsIG5hbWU6ICdUb3AgQ29udHJpYnV0b3InLCBkZXNjcmlwdGlvbjogJ0hpZ2gtcXVhbGl0eSBwb3N0cycsIGljb246ICfirZAnLCByYXJpdHk6ICdlcGljJywgaWNvbl91cmw6ICcnLCBlYXJuZWRfYXQ6ICcyMDI0LTAxLTAzVDA4OjAwOjAwWicgfSxcbiAgICAgICAgICBdLFxuICAgICAgICAgIGpvaW5EYXRlOiAnMjAyNC0wMS0wMlQwODowMDowMFonLFxuICAgICAgICAgIGxhc3RBY3RpdmU6ICcyMDI0LTAxLTE1VDE1OjQ1OjAwWicsXG4gICAgICAgICAgcG9zdENvdW50OiAyMzQsXG4gICAgICAgICAgZmxhZ0NvdW50OiAwLFxuICAgICAgICAgIHN0YXR1czogJ2FjdGl2ZScsXG4gICAgICAgICAgaXBBZGRyZXNzOiAnMTcyLjE2LjAuMTAnLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgaWQ6ICd1c2VyLTUnLFxuICAgICAgICAgIG5hbWU6ICdiYW5uZWRfdHJvdWJsZW1ha2VyJyxcbiAgICAgICAgICBkaXNwbGF5TmFtZTogJ0Zvcm1lciBUcm91YmxlbWFrZXInLFxuICAgICAgICAgIGVtYWlsOiAndHJvdWJsZUBleGFtcGxlLmNvbScsXG4gICAgICAgICAgcm9sZTogVXNlclJvbGUuQ0lUSVpFTixcbiAgICAgICAgICBsb3lhbHR5U2NvcmU6IC01MDAsXG4gICAgICAgICAgYmFkZ2VzOiBbXSxcbiAgICAgICAgICBqb2luRGF0ZTogJzIwMjQtMDEtMTBUMTY6MzA6MDBaJyxcbiAgICAgICAgICBsYXN0QWN0aXZlOiAnMjAyNC0wMS0xMlQyMDowMDowMFonLFxuICAgICAgICAgIHBvc3RDb3VudDogMjMsXG4gICAgICAgICAgZmxhZ0NvdW50OiAxMixcbiAgICAgICAgICBzdGF0dXM6ICdiYW5uZWQnLFxuICAgICAgICAgIGlwQWRkcmVzczogJzE5OC41MS4xMDAuMjUnLFxuICAgICAgICB9LFxuICAgICAgXTtcblxuICAgICAgc2V0VXNlcnMobW9ja1VzZXJzKTtcblxuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgYWRkTm90aWZpY2F0aW9uKHtcbiAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgdGl0bGU6ICdVc2VyIE1hbmFnZW1lbnQgRXJyb3InLFxuICAgICAgICBtZXNzYWdlOiAnRmFpbGVkIHRvIGxvYWQgdXNlciBkYXRhJyxcbiAgICAgIH0pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIH1cbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChpc0FkbWluKSB7XG4gICAgICBsb2FkVXNlcnMoKTtcbiAgICB9XG4gIH0sIFtpc0FkbWluXSk7XG5cbiAgLy8gRmlsdGVyIGFuZCBzZWFyY2ggdXNlcnNcbiAgY29uc3QgZmlsdGVyZWRVc2VycyA9IHVzZXJzLmZpbHRlcih1ID0+IHtcbiAgICAvLyBGaWx0ZXIgYnkgc3RhdHVzXG4gICAgaWYgKHNlbGVjdGVkRmlsdGVyICE9PSAnYWxsJykge1xuICAgICAgaWYgKHNlbGVjdGVkRmlsdGVyID09PSAnbmV3Jykge1xuICAgICAgICBjb25zdCBqb2luRGF0ZSA9IG5ldyBEYXRlKHUuam9pbkRhdGUpO1xuICAgICAgICBjb25zdCB3ZWVrQWdvID0gbmV3IERhdGUoKTtcbiAgICAgICAgd2Vla0Fnby5zZXREYXRlKHdlZWtBZ28uZ2V0RGF0ZSgpIC0gNyk7XG4gICAgICAgIGlmIChqb2luRGF0ZSA8IHdlZWtBZ28pIHJldHVybiBmYWxzZTtcbiAgICAgIH0gZWxzZSBpZiAodS5zdGF0dXMgIT09IHNlbGVjdGVkRmlsdGVyKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBGaWx0ZXIgYnkgc2VhcmNoIHRlcm1cbiAgICBpZiAoc2VhcmNoVGVybSkge1xuICAgICAgY29uc3QgdGVybSA9IHNlYXJjaFRlcm0udG9Mb3dlckNhc2UoKTtcbiAgICAgIHJldHVybiAoXG4gICAgICAgIHUubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHRlcm0pIHx8XG4gICAgICAgIHUuZGlzcGxheU5hbWU/LnRvTG93ZXJDYXNlKCkuaW5jbHVkZXModGVybSkgfHxcbiAgICAgICAgdS5lbWFpbC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHRlcm0pXG4gICAgICApO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xuICB9KTtcblxuICAvLyBIYW5kbGUgdXNlciBhY3Rpb25zXG4gIGNvbnN0IGhhbmRsZVN1c3BlbmRVc2VyID0gYXN5bmMgKHVzZXJJZDogc3RyaW5nKSA9PiB7XG4gICAgc2V0SXNQcm9jZXNzaW5nKHVzZXJJZCk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSk7XG4gICAgICBcbiAgICAgIHNldFVzZXJzKHByZXYgPT4gcHJldi5tYXAodSA9PiBcbiAgICAgICAgdS5pZCA9PT0gdXNlcklkID8geyAuLi51LCBzdGF0dXM6ICdzdXNwZW5kZWQnIGFzIGNvbnN0IH0gOiB1XG4gICAgICApKTtcbiAgICAgIFxuICAgICAgYWRkTm90aWZpY2F0aW9uKHtcbiAgICAgICAgdHlwZTogJ3dhcm5pbmcnLFxuICAgICAgICB0aXRsZTogJ1VzZXIgU3VzcGVuZGVkJyxcbiAgICAgICAgbWVzc2FnZTogJ1VzZXIgYWNjb3VudCBoYXMgYmVlbiBzdXNwZW5kZWQuJyxcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgYWRkTm90aWZpY2F0aW9uKHtcbiAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgdGl0bGU6ICdTdXNwZW5zaW9uIEZhaWxlZCcsXG4gICAgICAgIG1lc3NhZ2U6ICdGYWlsZWQgdG8gc3VzcGVuZCB1c2VyJyxcbiAgICAgIH0pO1xuICAgIH0gZmluYWxseSB7XG4gICAgICBzZXRJc1Byb2Nlc3NpbmcobnVsbCk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUJhblVzZXIgPSBhc3luYyAodXNlcklkOiBzdHJpbmcpID0+IHtcbiAgICBzZXRJc1Byb2Nlc3NpbmcodXNlcklkKTtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgbmV3IFByb21pc2UocmVzb2x2ZSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIDE1MDApKTtcbiAgICAgIFxuICAgICAgc2V0VXNlcnMocHJldiA9PiBwcmV2Lm1hcCh1ID0+IFxuICAgICAgICB1LmlkID09PSB1c2VySWQgPyB7IC4uLnUsIHN0YXR1czogJ2Jhbm5lZCcgYXMgY29uc3QgfSA6IHVcbiAgICAgICkpO1xuICAgICAgXG4gICAgICBhZGROb3RpZmljYXRpb24oe1xuICAgICAgICB0eXBlOiAnZXJyb3InLFxuICAgICAgICB0aXRsZTogJ1VzZXIgQmFubmVkJyxcbiAgICAgICAgbWVzc2FnZTogJ1VzZXIgYWNjb3VudCBoYXMgYmVlbiBwZXJtYW5lbnRseSBiYW5uZWQuJyxcbiAgICAgIH0pO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgYWRkTm90aWZpY2F0aW9uKHtcbiAgICAgICAgdHlwZTogJ2Vycm9yJyxcbiAgICAgICAgdGl0bGU6ICdCYW4gRmFpbGVkJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBiYW4gdXNlcicsXG4gICAgICB9KTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNQcm9jZXNzaW5nKG51bGwpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVSZWluc3RhdGVVc2VyID0gYXN5bmMgKHVzZXJJZDogc3RyaW5nKSA9PiB7XG4gICAgc2V0SXNQcm9jZXNzaW5nKHVzZXJJZCk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IG5ldyBQcm9taXNlKHJlc29sdmUgPT4gc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKSk7XG4gICAgICBcbiAgICAgIHNldFVzZXJzKHByZXYgPT4gcHJldi5tYXAodSA9PiBcbiAgICAgICAgdS5pZCA9PT0gdXNlcklkID8geyAuLi51LCBzdGF0dXM6ICdhY3RpdmUnIGFzIGNvbnN0IH0gOiB1XG4gICAgICApKTtcbiAgICAgIFxuICAgICAgYWRkTm90aWZpY2F0aW9uKHtcbiAgICAgICAgdHlwZTogJ3N1Y2Nlc3MnLFxuICAgICAgICB0aXRsZTogJ1VzZXIgUmVpbnN0YXRlZCcsXG4gICAgICAgIG1lc3NhZ2U6ICdVc2VyIGFjY291bnQgaGFzIGJlZW4gcmVpbnN0YXRlZC4nLFxuICAgICAgfSk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBhZGROb3RpZmljYXRpb24oe1xuICAgICAgICB0eXBlOiAnZXJyb3InLFxuICAgICAgICB0aXRsZTogJ1JlaW5zdGF0ZW1lbnQgRmFpbGVkJyxcbiAgICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byByZWluc3RhdGUgdXNlcicsXG4gICAgICB9KTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgc2V0SXNQcm9jZXNzaW5nKG51bGwpO1xuICAgIH1cbiAgfTtcblxuICAvLyBHZXQgc3RhdHVzIGNvbG9yXG4gIGNvbnN0IGdldFN0YXR1c0NvbG9yID0gKHN0YXR1czogc3RyaW5nKSA9PiB7XG4gICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgIGNhc2UgJ2FjdGl2ZSc6IHJldHVybiAndGV4dC1hcHByb3ZlZC1ncmVlbic7XG4gICAgICBjYXNlICdzdXNwZW5kZWQnOiByZXR1cm4gJ3RleHQtd2FybmluZy1hbWJlcic7XG4gICAgICBjYXNlICdiYW5uZWQnOiByZXR1cm4gJ3RleHQtcmVqZWN0ZWQtcmVkJztcbiAgICAgIGNhc2UgJ3BlbmRpbmcnOiByZXR1cm4gJ3RleHQtYmx1ZS00MDAnO1xuICAgICAgZGVmYXVsdDogcmV0dXJuICd0ZXh0LW11dGVkLWxpZ2h0JztcbiAgICB9XG4gIH07XG5cbiAgLy8gR2V0IHJvbGUgaWNvblxuICBjb25zdCBnZXRSb2xlSWNvbiA9IChyb2xlOiBVc2VyUm9sZSkgPT4ge1xuICAgIHN3aXRjaCAocm9sZSkge1xuICAgICAgY2FzZSBVc2VyUm9sZS5BRE1JTjogcmV0dXJuICfwn5GRJztcbiAgICAgIGNhc2UgVXNlclJvbGUuTU9ERVJBVE9SOiByZXR1cm4gJ/Cfm6HvuI8nO1xuICAgICAgY2FzZSBVc2VyUm9sZS5DSVRJWkVOOiByZXR1cm4gJ/CfkaQnO1xuICAgICAgZGVmYXVsdDogcmV0dXJuICfwn5GkJztcbiAgICB9XG4gIH07XG5cbiAgLy8gRm9ybWF0IGRhdGVcbiAgY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlU3RyaW5nOiBzdHJpbmcpID0+IHtcbiAgICByZXR1cm4gbmV3IERhdGUoZGF0ZVN0cmluZykudG9Mb2NhbGVEYXRlU3RyaW5nKCdlbi1VUycsIHtcbiAgICAgIHllYXI6ICdudW1lcmljJyxcbiAgICAgIG1vbnRoOiAnc2hvcnQnLFxuICAgICAgZGF5OiAnbnVtZXJpYycsXG4gICAgfSk7XG4gIH07XG5cbiAgaWYgKCFpc0FkbWluKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwic3BhY2UteS02XCI+XG4gICAgICAgIDxPdmVybG9yZE1lc3NhZ2UgdmFyaWFudD1cImVycm9yXCI+XG4gICAgICAgICAgPE92ZXJsb3JkSGVhZGVyPlxuICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCB0ZXh0LWxpZ2h0LXRleHRcIj5BY2Nlc3MgRGVuaWVkPC9oMT5cbiAgICAgICAgICA8L092ZXJsb3JkSGVhZGVyPlxuICAgICAgICAgIDxPdmVybG9yZENvbnRlbnQ+XG4gICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ0ZXh0LXNtXCI+XG4gICAgICAgICAgICAgIFlvdSBkbyBub3QgaGF2ZSBzdWZmaWNpZW50IHBlcm1pc3Npb25zIHRvIGFjY2VzcyB1c2VyIG1hbmFnZW1lbnQuXG4gICAgICAgICAgICA8L3A+XG4gICAgICAgICAgPC9PdmVybG9yZENvbnRlbnQ+XG4gICAgICAgIDwvT3ZlcmxvcmRNZXNzYWdlPlxuICAgICAgPC9kaXY+XG4gICAgKTtcbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPExvYWRpbmdTdGF0ZVxuICAgICAgaXNMb2FkaW5nPXtpc0xvYWRpbmd9XG4gICAgICBlcnJvcj17bnVsbH1cbiAgICAgIGxvYWRpbmdDb21wb25lbnQ9e1xuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNlwiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYW5pbWF0ZS1wdWxzZVwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoLTI0IGJnLW11dGVkLzIwIHJvdW5kZWQtbGcgbWItNlwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJoLTE2IGJnLW11dGVkLzIwIHJvdW5kZWQtbGcgbWItNlwiPjwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzcGFjZS15LTRcIj5cbiAgICAgICAgICAgICAge1suLi5BcnJheSg1KV0ubWFwKChfLCBpKSA9PiAoXG4gICAgICAgICAgICAgICAgPGRpdiBrZXk9e2l9IGNsYXNzTmFtZT1cImgtMjQgYmctbXV0ZWQvMjAgcm91bmRlZC1sZ1wiPjwvZGl2PlxuICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIH1cbiAgICA+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNlwiPlxuICAgICAgICB7LyogSGVhZGVyICovfVxuICAgICAgICA8T3ZlcmxvcmRNZXNzYWdlIHZhcmlhbnQ9XCJkZWZhdWx0XCI+XG4gICAgICAgICAgPE92ZXJsb3JkSGVhZGVyPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkIHRleHQtbGlnaHQtdGV4dFwiPlVzZXIgTWFuYWdlbWVudDwvaDE+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtbXV0ZWQtbGlnaHQgbXQtMlwiPlxuICAgICAgICAgICAgICAgICAgVVNFUiBBQ0NPVU5UIENPTlRST0wgQ0VOVEVSIC0ge2ZpbHRlcmVkVXNlcnMubGVuZ3RofSBVU0VSU1xuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTRcIj5cbiAgICAgICAgICAgICAgICA8TGluayBocmVmPVwiL2FkbWluXCI+XG4gICAgICAgICAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJnaG9zdFwiIHNpemU9XCJzbVwiPlxuICAgICAgICAgICAgICAgICAgICDihpAgQmFjayB0byBBZG1pblxuICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvT3ZlcmxvcmRIZWFkZXI+XG4gICAgICAgICAgPE92ZXJsb3JkQ29udGVudD5cbiAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtc21cIj5cbiAgICAgICAgICAgICAgTWFuYWdlIHVzZXIgYWNjb3VudHMsIHBlcm1pc3Npb25zLCBhbmQgZW5mb3JjZW1lbnQgYWN0aW9ucy5cbiAgICAgICAgICAgICAgQWxsIGFjdGlvbnMgYXJlIGxvZ2dlZCBhbmQgYXVkaXRhYmxlLlxuICAgICAgICAgICAgPC9wPlxuICAgICAgICAgIDwvT3ZlcmxvcmRDb250ZW50PlxuICAgICAgICA8L092ZXJsb3JkTWVzc2FnZT5cblxuICAgICAgICB7LyogU2VhcmNoIGFuZCBGaWx0ZXJzICovfVxuICAgICAgICA8Q2FyZCB2YXJpYW50PVwiYm9yZGVyZWRcIj5cbiAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicC00XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC1jb2wgbWQ6ZmxleC1yb3cgZ2FwLTRcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTFcIj5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcbiAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoIHVzZXJzIGJ5IG5hbWUsIGVtYWlsLCBvciBJRC4uLlwiXG4gICAgICAgICAgICAgICAgICB2YWx1ZT17c2VhcmNoVGVybX1cbiAgICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0U2VhcmNoVGVybShlLnRhcmdldC52YWx1ZSl9XG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcHgtMyBweS0yIGJnLW11dGVkLzEwIGJvcmRlciBib3JkZXItbXV0ZWQvMjAgcm91bmRlZC1sZyB0ZXh0LWxpZ2h0LXRleHQgcGxhY2Vob2xkZXItbXV0ZWQtbGlnaHQgZm9jdXM6b3V0bGluZS1ub25lIGZvY3VzOmJvcmRlci1vdmVybG9yZC1yZWQvNTBcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTJcIj5cbiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIGZvbnQtbWVkaXVtIHRleHQtbGlnaHQtdGV4dFwiPkZpbHRlcjo8L3NwYW4+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IHNwYWNlLXgtMVwiPlxuICAgICAgICAgICAgICAgICAge1tcbiAgICAgICAgICAgICAgICAgICAgeyB2YWx1ZTogJ2FsbCcsIGxhYmVsOiAnQWxsIFVzZXJzJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IHZhbHVlOiAnYWN0aXZlJywgbGFiZWw6ICfinIUgQWN0aXZlJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IHZhbHVlOiAnc3VzcGVuZGVkJywgbGFiZWw6ICfimqDvuI8gU3VzcGVuZGVkJyB9LFxuICAgICAgICAgICAgICAgICAgICB7IHZhbHVlOiAnYmFubmVkJywgbGFiZWw6ICfwn5qrIEJhbm5lZCcgfSxcbiAgICAgICAgICAgICAgICAgICAgeyB2YWx1ZTogJ25ldycsIGxhYmVsOiAn8J+GlSBOZXcgKDdkKScgfSxcbiAgICAgICAgICAgICAgICAgIF0ubWFwKChmaWx0ZXIpID0+IChcbiAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgIGtleT17ZmlsdGVyLnZhbHVlfVxuICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9e3NlbGVjdGVkRmlsdGVyID09PSBmaWx0ZXIudmFsdWUgPyAncHJpbWFyeScgOiAnZ2hvc3QnfVxuICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U2VsZWN0ZWRGaWx0ZXIoZmlsdGVyLnZhbHVlIGFzIGFueSl9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICB7ZmlsdGVyLmxhYmVsfVxuICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICAgIDwvQ2FyZD5cblxuICAgICAgICB7LyogVXNlciBMaXN0ICovfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgIHtmaWx0ZXJlZFVzZXJzLmxlbmd0aCA9PT0gMCA/IChcbiAgICAgICAgICAgIDxDYXJkPlxuICAgICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicC04IHRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LTR4bCBtYi00XCI+8J+RpTwvZGl2PlxuICAgICAgICAgICAgICAgIDxoMyBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtbWVkaXVtIHRleHQtbGlnaHQtdGV4dCBtYi0yXCI+Tm8gVXNlcnMgRm91bmQ8L2gzPlxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtbXV0ZWQtbGlnaHRcIj5cbiAgICAgICAgICAgICAgICAgIHtzZWFyY2hUZXJtIFxuICAgICAgICAgICAgICAgICAgICA/IFwiTm8gdXNlcnMgbWF0Y2ggeW91ciBzZWFyY2ggY3JpdGVyaWEuXCJcbiAgICAgICAgICAgICAgICAgICAgOiBcIk5vIHVzZXJzIG1hdGNoIHlvdXIgY3VycmVudCBmaWx0ZXIuXCJ9XG4gICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICA8L0NhcmRDb250ZW50PlxuICAgICAgICAgICAgPC9DYXJkPlxuICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICBmaWx0ZXJlZFVzZXJzLm1hcCgodXNlckRhdGEpID0+IChcbiAgICAgICAgICAgICAgPENhcmRcbiAgICAgICAgICAgICAgICBrZXk9e3VzZXJEYXRhLmlkfVxuICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJib3JkZXJlZFwiXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHtcbiAgICAgICAgICAgICAgICAgIHVzZXJEYXRhLnN0YXR1cyA9PT0gJ2Jhbm5lZCcgPyAnYm9yZGVyLXJlamVjdGVkLXJlZC81MCBiZy1yZWplY3RlZC1yZWQvNScgOlxuICAgICAgICAgICAgICAgICAgdXNlckRhdGEuc3RhdHVzID09PSAnc3VzcGVuZGVkJyA/ICdib3JkZXItd2FybmluZy1hbWJlci81MCBiZy13YXJuaW5nLWFtYmVyLzUnIDpcbiAgICAgICAgICAgICAgICAgICdib3JkZXItbXV0ZWQvMjAnXG4gICAgICAgICAgICAgICAgfWB9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Q2FyZENvbnRlbnQgY2xhc3NOYW1lPVwicC02XCI+XG4gICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInNwYWNlLXktNFwiPlxuICAgICAgICAgICAgICAgICAgICB7LyogVXNlciBIZWFkZXIgKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1zdGFydCBqdXN0aWZ5LWJldHdlZW5cIj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtc3RhcnQgc3BhY2UteC00XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtM3hsXCI+e2dldFJvbGVJY29uKHVzZXJEYXRhLnJvbGUpfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4LTFcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBzcGFjZS14LTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwiZm9udC1tZWRpdW0gdGV4dC1saWdodC10ZXh0XCI+e3VzZXJEYXRhLmRpc3BsYXlOYW1lIHx8IHVzZXJEYXRhLm5hbWV9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtbXV0ZWQtbGlnaHRcIj5Ae3VzZXJEYXRhLm5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YHRleHQteHMgcHgtMiBweS0xIHJvdW5kZWQtZnVsbCBjYXBpdGFsaXplICR7Z2V0U3RhdHVzQ29sb3IodXNlckRhdGEuc3RhdHVzKX0gYmctY3VycmVudC8xMGB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJEYXRhLnN0YXR1c31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC14cyBweC0yIHB5LTEgcm91bmRlZC1mdWxsIGJnLW11dGVkLzIwIHRleHQtbXV0ZWQtbGlnaHQgY2FwaXRhbGl6ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJEYXRhLnJvbGV9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXNtIHRleHQtbXV0ZWQtbGlnaHQgbXQtMVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt1c2VyRGF0YS5lbWFpbH0g4oCiIEpvaW5lZCB7Zm9ybWF0RGF0ZSh1c2VyRGF0YS5qb2luRGF0ZSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtc20gdGV4dC1tdXRlZC1saWdodFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExhc3QgYWN0aXZlOiB7Zm9ybWF0RGF0ZSh1c2VyRGF0YS5sYXN0QWN0aXZlKX0g4oCiIElQOiB7dXNlckRhdGEuaXBBZGRyZXNzfVxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1yaWdodFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtYm9sZCB0ZXh0LW92ZXJsb3JkLXJlZFwiPnt1c2VyRGF0YS5sb3lhbHR5U2NvcmV9PC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1tdXRlZC1saWdodFwiPkxveWFsdHkgU2NvcmU8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgey8qIFVzZXIgU3RhdHMgKi99XG4gICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZ3JpZCBncmlkLWNvbHMtMiBtZDpncmlkLWNvbHMtNCBnYXAtNCBwLTQgYmctbXV0ZWQvMTAgcm91bmRlZC1sZ1wiPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC1sZyBmb250LWJvbGQgdGV4dC1saWdodC10ZXh0XCI+e3VzZXJEYXRhLnBvc3RDb3VudH08L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LW11dGVkLWxpZ2h0XCI+UG9zdHM8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtbGcgZm9udC1ib2xkIHRleHQtbGlnaHQtdGV4dFwiPnt1c2VyRGF0YS5iYWRnZXM/Lmxlbmd0aCB8fCAwfTwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LXhzIHRleHQtbXV0ZWQtbGlnaHRcIj5CYWRnZXM8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHRleHQtbGcgZm9udC1ib2xkICR7dXNlckRhdGEuZmxhZ0NvdW50ID4gMCA/ICd0ZXh0LXdhcm5pbmctYW1iZXInIDogJ3RleHQtYXBwcm92ZWQtZ3JlZW4nfWB9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICB7dXNlckRhdGEuZmxhZ0NvdW50fVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQteHMgdGV4dC1tdXRlZC1saWdodFwiPkZsYWdzPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWxnIGZvbnQtYm9sZCB0ZXh0LWxpZ2h0LXRleHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAge01hdGguZmxvb3IoKERhdGUubm93KCkgLSBuZXcgRGF0ZSh1c2VyRGF0YS5qb2luRGF0ZSkuZ2V0VGltZSgpKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGV4dC14cyB0ZXh0LW11dGVkLWxpZ2h0XCI+RGF5czwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICB7LyogQmFkZ2VzICovfVxuICAgICAgICAgICAgICAgICAgICB7dXNlckRhdGEuYmFkZ2VzICYmIHVzZXJEYXRhLmJhZGdlcy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggZmxleC13cmFwIGdhcC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICB7dXNlckRhdGEuYmFkZ2VzLm1hcCgoYmFkZ2UpID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17YmFkZ2UuaWR9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0xIHB4LTIgcHktMSBiZy1tdXRlZC8yMCByb3VuZGVkLWZ1bGwgdGV4dC14c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57YmFkZ2UuaWNvbn08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwidGV4dC1saWdodC10ZXh0XCI+e2JhZGdlLm5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICkpfVxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICApfVxuXG4gICAgICAgICAgICAgICAgICAgIHsvKiBBY3Rpb25zICovfVxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktYmV0d2VlbiBwdC00IGJvcmRlci10IGJvcmRlci1tdXRlZC8yMFwiPlxuICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBpdGVtcy1jZW50ZXIgc3BhY2UteC0yXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICA8TGluayBocmVmPXtgL3VzZXJzLyR7dXNlckRhdGEuaWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b24gdmFyaWFudD1cImdob3N0XCIgc2l6ZT1cInNtXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAg8J+Rge+4jyBWaWV3IFByb2ZpbGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJnaG9zdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHNldFNlbGVjdGVkVXNlcih1c2VyRGF0YSl9XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgIPCfk4ogVmlldyBEZXRhaWxzXG4gICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXggaXRlbXMtY2VudGVyIHNwYWNlLXgtMlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge3VzZXJEYXRhLnN0YXR1cyA9PT0gJ2FjdGl2ZScgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhcmlhbnQ9XCJzZWNvbmRhcnlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZVN1c3BlbmRVc2VyKHVzZXJEYXRhLmlkKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXtpc1Byb2Nlc3NpbmcgPT09IHVzZXJEYXRhLmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dC13YXJuaW5nLWFtYmVyIGhvdmVyOnRleHQtd2FybmluZy1hbWJlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge2lzUHJvY2Vzc2luZyA9PT0gdXNlckRhdGEuaWQgPyAnLi4uJyA6ICfimqDvuI8gU3VzcGVuZCd9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cInNlY29uZGFyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzaXplPVwic21cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlQmFuVXNlcih1c2VyRGF0YS5pZCl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17aXNQcm9jZXNzaW5nID09PSB1c2VyRGF0YS5pZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQtcmVqZWN0ZWQtcmVkIGhvdmVyOnRleHQtcmVqZWN0ZWQtcmVkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aXNQcm9jZXNzaW5nID09PSB1c2VyRGF0YS5pZCA/ICcuLi4nIDogJ/CfmqsgQmFuJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICB7KHVzZXJEYXRhLnN0YXR1cyA9PT0gJ3N1c3BlbmRlZCcgfHwgdXNlckRhdGEuc3RhdHVzID09PSAnYmFubmVkJykgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFudD1cInNlY29uZGFyeVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZT1cInNtXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVSZWluc3RhdGVVc2VyKHVzZXJEYXRhLmlkKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZD17aXNQcm9jZXNzaW5nID09PSB1c2VyRGF0YS5pZH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0LWFwcHJvdmVkLWdyZWVuIGhvdmVyOnRleHQtYXBwcm92ZWQtZ3JlZW5cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2lzUHJvY2Vzc2luZyA9PT0gdXNlckRhdGEuaWQgPyAnLi4uJyA6ICfinIUgUmVpbnN0YXRlJ31cbiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDwvQ2FyZENvbnRlbnQ+XG4gICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgICkpXG4gICAgICAgICAgKX1cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L0xvYWRpbmdTdGF0ZT5cbiAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gVXNlck1hbmFnZW1lbnRQYWdlKCkge1xuICByZXR1cm4gKFxuICAgIDxQcm90ZWN0ZWRSb3V0ZT5cbiAgICAgIDxEYXNoYm9hcmRMYXlvdXQ+XG4gICAgICAgIDxVc2VyTWFuYWdlbWVudENvbnRlbnQgLz5cbiAgICAgIDwvRGFzaGJvYXJkTGF5b3V0PlxuICAgIDwvUHJvdGVjdGVkUm91dGU+XG4gICk7XG59XG4iXSwibWFwcGluZ3MiOiJBQUFBOzs7R0FLQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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