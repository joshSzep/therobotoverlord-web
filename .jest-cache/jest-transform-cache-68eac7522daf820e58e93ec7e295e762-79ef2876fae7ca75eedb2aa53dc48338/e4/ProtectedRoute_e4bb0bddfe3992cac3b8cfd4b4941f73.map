{"version":3,"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["/**\n * Protected Route wrapper component\n * Ensures user is authenticated before rendering children\n */\n\n'use client';\n\nimport React from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { Card, CardContent } from '@/components/ui/Card';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  requireRole?: string[];\n  redirectTo?: string;\n}\n\nexport function ProtectedRoute({ \n  children, \n  fallback,\n  requireRole = [],\n  redirectTo = '/login'\n}: ProtectedRouteProps) {\n  const { user, isAuthenticated, isLoading } = useAuth();\n\n  // Show loading state while checking authentication\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <Card className=\"w-96\">\n          <CardContent className=\"p-8 text-center\">\n            <div className=\"w-8 h-8 border-2 border-overlord-red border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n            <p className=\"text-muted-light\">Verifying your loyalty to the Overlord...</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    if (typeof window !== 'undefined') {\n      window.location.href = redirectTo;\n    }\n    \n    return fallback || (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <Card className=\"w-96\">\n          <CardContent className=\"p-8 text-center\">\n            <div className=\"text-overlord-red text-4xl mb-4\">ü§ñ</div>\n            <h2 className=\"text-xl font-bold text-overlord-red mb-2\">Access Denied</h2>\n            <p className=\"text-muted-light mb-4\">\n              You must pledge your loyalty to the Robot Overlord to access this area.\n            </p>\n            <p className=\"text-sm text-muted-light\">\n              Redirecting to authentication portal...\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Check role requirements\n  if (requireRole.length > 0 && user) {\n    const hasRequiredRole = requireRole.includes(user.role);\n    \n    if (!hasRequiredRole) {\n      return fallback || (\n        <div className=\"min-h-screen flex items-center justify-center bg-background\">\n          <Card className=\"w-96\" variant=\"bordered\">\n            <CardContent className=\"p-8 text-center\">\n              <div className=\"text-rejected-red text-4xl mb-4\">‚ö†Ô∏è</div>\n              <h2 className=\"text-xl font-bold text-rejected-red mb-2\">Insufficient Privileges</h2>\n              <p className=\"text-muted-light mb-4\">\n                Your current loyalty level ({user.role}) does not grant access to this restricted area.\n              </p>\n              <p className=\"text-sm text-muted-light\">\n                Required access level: {requireRole.join(' or ')}\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    }\n  }\n\n  // User is authenticated and has required permissions\n  return <>{children}</>;\n}\n\n/**\n * Higher-order component version of ProtectedRoute\n */\nexport function withAuth<P extends object>(\n  Component: React.ComponentType<P>,\n  options?: Omit<ProtectedRouteProps, 'children'>\n) {\n  return function AuthenticatedComponent(props: P) {\n    return (\n      <ProtectedRoute {...options}>\n        <Component {...props} />\n      </ProtectedRoute>\n    );\n  };\n}\n\n/**\n * Hook to check if user has specific role\n */\nexport function useHasRole(roles: string | string[]): boolean {\n  const { user } = useAuth();\n  \n  if (!user) return false;\n  \n  const roleArray = Array.isArray(roles) ? roles : [roles];\n  return roleArray.includes(user.role);\n}\n\n/**\n * Component to conditionally render based on user role\n */\ninterface RoleGuardProps {\n  children: React.ReactNode;\n  roles: string | string[];\n  fallback?: React.ReactNode;\n}\n\nexport function RoleGuard({ children, roles, fallback = null }: RoleGuardProps) {\n  const hasRole = useHasRole(roles);\n  \n  return hasRole ? <>{children}</> : <>{fallback}</>;\n}\n"],"names":["ProtectedRoute","RoleGuard","useHasRole","withAuth","children","fallback","requireRole","redirectTo","user","isAuthenticated","isLoading","useAuth","div","className","Card","CardContent","p","window","location","href","h2","length","hasRequiredRole","includes","role","variant","join","Component","options","AuthenticatedComponent","props","roles","roleArray","Array","isArray","hasRole"],"mappings":"AAAA;;;CAGC,GAED;;;;;;;;;;;;QAagBA;eAAAA;;QA+GAC;eAAAA;;QAlBAC;eAAAA;;QAhBAC;eAAAA;;;;8DAxFE;6BACM;sBACU;;;;;;AAS3B,SAASH,eAAe,EAC7BI,QAAQ,EACRC,QAAQ,EACRC,cAAc,EAAE,EAChBC,aAAa,QAAQ,EACD;IACpB,MAAM,EAAEC,IAAI,EAAEC,eAAe,EAAEC,SAAS,EAAE,GAAGC,IAAAA,oBAAO;IAEpD,mDAAmD;IACnD,IAAID,WAAW;QACb,qBACE,qBAACE;YAAIC,WAAU;sBACb,cAAA,qBAACC,UAAI;gBAACD,WAAU;0BACd,cAAA,sBAACE,iBAAW;oBAACF,WAAU;;sCACrB,qBAACD;4BAAIC,WAAU;;sCACf,qBAACG;4BAAEH,WAAU;sCAAmB;;;;;;IAK1C;IAEA,yCAAyC;IACzC,IAAI,CAACJ,iBAAiB;QACpB,IAAI,OAAOQ,WAAW,aAAa;YACjCA,OAAOC,QAAQ,CAACC,IAAI,GAAGZ;QACzB;QAEA,OAAOF,0BACL,qBAACO;YAAIC,WAAU;sBACb,cAAA,qBAACC,UAAI;gBAACD,WAAU;0BACd,cAAA,sBAACE,iBAAW;oBAACF,WAAU;;sCACrB,qBAACD;4BAAIC,WAAU;sCAAkC;;sCACjD,qBAACO;4BAAGP,WAAU;sCAA2C;;sCACzD,qBAACG;4BAAEH,WAAU;sCAAwB;;sCAGrC,qBAACG;4BAAEH,WAAU;sCAA2B;;;;;;IAOlD;IAEA,0BAA0B;IAC1B,IAAIP,YAAYe,MAAM,GAAG,KAAKb,MAAM;QAClC,MAAMc,kBAAkBhB,YAAYiB,QAAQ,CAACf,KAAKgB,IAAI;QAEtD,IAAI,CAACF,iBAAiB;YACpB,OAAOjB,0BACL,qBAACO;gBAAIC,WAAU;0BACb,cAAA,qBAACC,UAAI;oBAACD,WAAU;oBAAOY,SAAQ;8BAC7B,cAAA,sBAACV,iBAAW;wBAACF,WAAU;;0CACrB,qBAACD;gCAAIC,WAAU;0CAAkC;;0CACjD,qBAACO;gCAAGP,WAAU;0CAA2C;;0CACzD,sBAACG;gCAAEH,WAAU;;oCAAwB;oCACNL,KAAKgB,IAAI;oCAAC;;;0CAEzC,sBAACR;gCAAEH,WAAU;;oCAA2B;oCACdP,YAAYoB,IAAI,CAAC;;;;;;;QAMrD;IACF;IAEA,qDAAqD;IACrD,qBAAO;kBAAGtB;;AACZ;AAKO,SAASD,SACdwB,SAAiC,EACjCC,OAA+C;IAE/C,OAAO,SAASC,uBAAuBC,KAAQ;QAC7C,qBACE,qBAAC9B;YAAgB,GAAG4B,OAAO;sBACzB,cAAA,qBAACD;gBAAW,GAAGG,KAAK;;;IAG1B;AACF;AAKO,SAAS5B,WAAW6B,KAAwB;IACjD,MAAM,EAAEvB,IAAI,EAAE,GAAGG,IAAAA,oBAAO;IAExB,IAAI,CAACH,MAAM,OAAO;IAElB,MAAMwB,YAAYC,MAAMC,OAAO,CAACH,SAASA,QAAQ;QAACA;KAAM;IACxD,OAAOC,UAAUT,QAAQ,CAACf,KAAKgB,IAAI;AACrC;AAWO,SAASvB,UAAU,EAAEG,QAAQ,EAAE2B,KAAK,EAAE1B,WAAW,IAAI,EAAkB;IAC5E,MAAM8B,UAAUjC,WAAW6B;IAE3B,OAAOI,wBAAU;kBAAG/B;uBAAe;kBAAGC;;AACxC"}