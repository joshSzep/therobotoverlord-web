{"version":3,"names":["PostActions","post","onPostDeleted","onPostUpdated","className","cov_ptm8lq9ba","b","f","addNotification","s","_appStore","useAppStore","showDeleteConfirm","setShowDeleteConfirm","_react","useState","isDeleting","setIsDeleting","handleDelete","response","_services","postsService","deletePost","id","success","type","title","message","Error","err","errorMessage","handleReport","reportPost","reason","details","_jsxruntime","jsxs","_Card","Card","variant","jsx","CardHeader","CardContent","_Button","Button","onClick","disabled","userPermissions","canEdit","window","location","href","canDelete","canModerate","Fragment","console","log"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/posts/PostActions.tsx"],"sourcesContent":["/**\n * Post actions component for The Robot Overlord\n * Handles post deletion and other administrative actions\n */\n\n'use client';\n\nimport React, { useState } from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { Card, CardContent, CardHeader } from '@/components/ui/Card';\nimport { useAppStore } from '@/stores/appStore';\nimport { postsService } from '@/services';\nimport { Post } from '@/types/posts';\n\ninterface PostActionsProps {\n  post: Post;\n  onPostDeleted?: () => void;\n  onPostUpdated?: (updatedPost: Post) => void;\n  className?: string;\n}\n\nexport function PostActions({\n  post,\n  onPostDeleted,\n  onPostUpdated,\n  className = '',\n}: PostActionsProps) {\n  const { addNotification } = useAppStore();\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  // Handle post deletion\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    \n    try {\n      const response = await postsService.deletePost(post.id);\n      \n      if (response.success) {\n        addNotification({\n          type: 'success',\n          title: 'Post Deleted',\n          message: 'The post has been deleted successfully',\n        });\n        \n        onPostDeleted?.();\n      } else {\n        throw new Error('Failed to delete post');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to delete post';\n      addNotification({\n        type: 'error',\n        title: 'Delete Error',\n        message: errorMessage,\n      });\n    } finally {\n      setIsDeleting(false);\n      setShowDeleteConfirm(false);\n    }\n  };\n\n  // Handle post reporting\n  const handleReport = async () => {\n    try {\n      const response = await postsService.reportPost(post.id, {\n        reason: 'inappropriate_content',\n        details: 'Reported via post actions',\n      });\n      \n      if (response.success) {\n        addNotification({\n          type: 'success',\n          title: 'Post Reported',\n          message: 'The post has been reported to moderators',\n        });\n      } else {\n        throw new Error('Failed to report post');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to report post';\n      addNotification({\n        type: 'error',\n        title: 'Report Error',\n        message: errorMessage,\n      });\n    }\n  };\n\n  if (showDeleteConfirm) {\n    return (\n      <Card variant=\"bordered\" className={`border-rejected-red/50 ${className}`}>\n        <CardHeader className=\"pb-4\">\n          <h3 className=\"text-lg font-bold text-rejected-red\">Delete Post</h3>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <p className=\"text-light-text\">\n              Are you sure you want to delete this post? This action cannot be undone.\n            </p>\n            \n            <div className=\"bg-rejected-red/10 border border-rejected-red/20 rounded-lg p-4\">\n              <p className=\"text-sm text-rejected-red font-medium mb-2\">\n                ‚ö†Ô∏è Warning\n              </p>\n              <ul className=\"text-sm text-muted-light space-y-1\">\n                <li>‚Ä¢ The post content will be permanently removed</li>\n                <li>‚Ä¢ All replies to this post will also be deleted</li>\n                <li>‚Ä¢ This action cannot be reversed</li>\n              </ul>\n            </div>\n            \n            <div className=\"flex items-center justify-end space-x-3\">\n              <Button\n                variant=\"ghost\"\n                onClick={() => setShowDeleteConfirm(false)}\n                disabled={isDeleting}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={handleDelete}\n                disabled={isDeleting}\n                className=\"bg-rejected-red hover:bg-rejected-red/80 flex items-center space-x-2\"\n              >\n                {isDeleting && (\n                  <div className=\"w-4 h-4 border-2 border-white/30 border-t-white rounded-full animate-spin\"></div>\n                )}\n                <span>{isDeleting ? 'Deleting...' : 'Delete Post'}</span>\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card variant=\"bordered\" className={className}>\n      <CardHeader className=\"pb-4\">\n        <h3 className=\"text-lg font-bold text-light-text\">Post Actions</h3>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-3\">\n          {/* Edit Action */}\n          {post.userPermissions?.canEdit && (\n            <Button\n              variant=\"ghost\"\n              className=\"w-full justify-start text-light-text hover:text-overlord-red\"\n              onClick={() => window.location.href = `/posts/${post.id}/edit`}\n            >\n              <span className=\"mr-2\">‚úèÔ∏è</span>\n              Edit Post\n            </Button>\n          )}\n\n          {/* Delete Action */}\n          {post.userPermissions?.canDelete && (\n            <Button\n              variant=\"ghost\"\n              className=\"w-full justify-start text-rejected-red hover:bg-rejected-red/10\"\n              onClick={() => setShowDeleteConfirm(true)}\n            >\n              <span className=\"mr-2\">üóëÔ∏è</span>\n              Delete Post\n            </Button>\n          )}\n\n          {/* Report Action */}\n          <Button\n            variant=\"ghost\"\n            className=\"w-full justify-start text-warning-amber hover:bg-warning-amber/10\"\n            onClick={handleReport}\n          >\n            <span className=\"mr-2\">üö©</span>\n            Report Post\n          </Button>\n\n          {/* Moderation Actions (for moderators) */}\n          {post.userPermissions?.canModerate && (\n            <>\n              <div className=\"border-t border-muted/20 pt-3 mt-3\">\n                <p className=\"text-sm font-medium text-light-text mb-2\">\n                  Moderation Actions\n                </p>\n                \n                <Button\n                  variant=\"ghost\"\n                  className=\"w-full justify-start text-warning-amber hover:bg-warning-amber/10 mb-2\"\n                  onClick={() => console.log('Pin post')}\n                >\n                  <span className=\"mr-2\">üìå</span>\n                  Pin Post\n                </Button>\n                \n                <Button\n                  variant=\"ghost\"\n                  className=\"w-full justify-start text-rejected-red hover:bg-rejected-red/10\"\n                  onClick={() => console.log('Lock post')}\n                >\n                  <span className=\"mr-2\">üîí</span>\n                  Lock Post\n                </Button>\n              </div>\n            </>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"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","ignoreList":[]}