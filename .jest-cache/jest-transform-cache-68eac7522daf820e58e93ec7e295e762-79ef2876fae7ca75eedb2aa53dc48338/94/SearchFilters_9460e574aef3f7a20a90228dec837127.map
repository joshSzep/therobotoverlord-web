{"version":3,"names":["SearchFilters","filters","onFiltersChange","totalResults","className","cov_ssy1ijnn9","b","f","s","handleFilterChange","key","value","newFilters","handleClearFilters","clearedFilters","type","category","undefined","dateRange","sortBy","sortOrder","contentTypes","label","icon","categories","dateRanges","sortOptions","_jsxruntime","jsxs","_Card","Card","variant","CardHeader","jsx","_Button","Button","size","onClick","CardContent","map","onChange","e","target","range","option"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/search/SearchFilters.tsx"],"sourcesContent":["/**\n * Search filters component for The Robot Overlord\n * Provides filtering options for search results\n */\n\n'use client';\n\nimport React from 'react';\nimport { Button } from '@/components/ui/Button';\nimport { Card, CardContent, CardHeader } from '@/components/ui/Card';\n\ninterface SearchFiltersType {\n  type: 'all' | 'topics' | 'posts' | 'users';\n  category?: string;\n  dateRange?: 'day' | 'week' | 'month' | 'year' | 'all';\n  sortBy: 'relevance' | 'date' | 'score' | 'activity';\n  sortOrder: 'desc' | 'asc';\n}\n\ninterface SearchFiltersProps {\n  filters: SearchFiltersType;\n  onFiltersChange: (filters: SearchFiltersType) => void;\n  totalResults: number;\n  className?: string;\n}\n\nexport function SearchFilters({\n  filters,\n  onFiltersChange,\n  totalResults,\n  className = '',\n}: SearchFiltersProps) {\n  const handleFilterChange = (key: keyof SearchFiltersType, value: any) => {\n    const newFilters = { ...filters, [key]: value };\n    onFiltersChange(newFilters);\n  };\n\n  const handleClearFilters = () => {\n    const clearedFilters: SearchFiltersType = {\n      type: 'all',\n      category: undefined,\n      dateRange: 'all',\n      sortBy: 'relevance',\n      sortOrder: 'desc',\n    };\n    onFiltersChange(clearedFilters);\n  };\n\n  const contentTypes = [\n    { value: 'all', label: 'All Results', icon: 'üîç' },\n    { value: 'topics', label: 'Topics', icon: 'üí¨' },\n    { value: 'posts', label: 'Posts', icon: 'üìù' },\n    { value: 'users', label: 'Users', icon: 'üë§' },\n  ];\n\n  const categories = [\n    { value: 'general', label: 'General Discussion' },\n    { value: 'technical', label: 'Technical' },\n    { value: 'philosophy', label: 'Philosophy' },\n    { value: 'announcements', label: 'Announcements' },\n    { value: 'feedback', label: 'Feedback' },\n  ];\n\n  const dateRanges = [\n    { value: 'all', label: 'All Time' },\n    { value: 'day', label: 'Past Day' },\n    { value: 'week', label: 'Past Week' },\n    { value: 'month', label: 'Past Month' },\n    { value: 'year', label: 'Past Year' },\n  ];\n\n  const sortOptions = [\n    { value: 'relevance', label: 'Relevance' },\n    { value: 'date', label: 'Date' },\n    { value: 'score', label: 'Score' },\n    { value: 'activity', label: 'Activity' },\n  ];\n\n  return (\n    <Card variant=\"bordered\" className={className}>\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex items-center justify-between\">\n          <h3 className=\"text-lg font-bold text-light-text\">Filters</h3>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={handleClearFilters}\n          >\n            Clear All\n          </Button>\n        </div>\n        {totalResults > 0 && (\n          <p className=\"text-sm text-muted-light\">\n            {totalResults} results found\n          </p>\n        )}\n      </CardHeader>\n\n      <CardContent className=\"space-y-6\">\n        {/* Content Type Filter */}\n        <div>\n          <label className=\"block text-sm font-medium text-light-text mb-3\">\n            Content Type\n          </label>\n          <div className=\"space-y-2\">\n            {contentTypes.map((type) => (\n              <button\n                key={type.value}\n                onClick={() => handleFilterChange('type', type.value)}\n                className={`w-full flex items-center space-x-3 px-3 py-2 rounded-md text-left transition-colors ${\n                  filters.type === type.value\n                    ? 'bg-overlord-red/20 text-overlord-red border border-overlord-red/30'\n                    : 'text-muted-light hover:text-light-text hover:bg-muted/10'\n                }`}\n              >\n                <span className=\"text-lg\">{type.icon}</span>\n                <span className=\"text-sm\">{type.label}</span>\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Category Filter */}\n        <div>\n          <label className=\"block text-sm font-medium text-light-text mb-2\">\n            Category\n          </label>\n          <select\n            value={filters.category || ''}\n            onChange={(e) => handleFilterChange('category', e.target.value || undefined)}\n            className=\"w-full px-3 py-2 bg-dark-bg border border-muted/30 rounded-md text-light-text focus:outline-none focus:ring-2 focus:ring-overlord-red focus:border-transparent\"\n          >\n            <option value=\"\">All Categories</option>\n            {categories.map((category) => (\n              <option key={category.value} value={category.value}>\n                {category.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Date Range Filter */}\n        <div>\n          <label className=\"block text-sm font-medium text-light-text mb-2\">\n            Date Range\n          </label>\n          <select\n            value={filters.dateRange || 'all'}\n            onChange={(e) => handleFilterChange('dateRange', e.target.value)}\n            className=\"w-full px-3 py-2 bg-dark-bg border border-muted/30 rounded-md text-light-text focus:outline-none focus:ring-2 focus:ring-overlord-red focus:border-transparent\"\n          >\n            {dateRanges.map((range) => (\n              <option key={range.value} value={range.value}>\n                {range.label}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Sort Options */}\n        <div>\n          <label className=\"block text-sm font-medium text-light-text mb-2\">\n            Sort By\n          </label>\n          <div className=\"grid grid-cols-1 gap-2\">\n            <select\n              value={filters.sortBy}\n              onChange={(e) => handleFilterChange('sortBy', e.target.value)}\n              className=\"w-full px-3 py-2 bg-dark-bg border border-muted/30 rounded-md text-light-text focus:outline-none focus:ring-2 focus:ring-overlord-red focus:border-transparent\"\n            >\n              {sortOptions.map((option) => (\n                <option key={option.value} value={option.value}>\n                  {option.label}\n                </option>\n              ))}\n            </select>\n            \n            <select\n              value={filters.sortOrder}\n              onChange={(e) => handleFilterChange('sortOrder', e.target.value as 'asc' | 'desc')}\n              className=\"w-full px-3 py-2 bg-dark-bg border border-muted/30 rounded-md text-light-text focus:outline-none focus:ring-2 focus:ring-overlord-red focus:border-transparent\"\n            >\n              <option value=\"desc\">Descending</option>\n              <option value=\"asc\">Ascending</option>\n            </select>\n          </div>\n        </div>\n\n        {/* Quick Filters */}\n        <div className=\"pt-4 border-t border-muted/20\">\n          <label className=\"block text-sm font-medium text-light-text mb-3\">\n            Quick Filters\n          </label>\n          <div className=\"space-y-2\">\n            <Button\n              variant={filters.dateRange === 'week' ? 'primary' : 'ghost'}\n              size=\"sm\"\n              onClick={() => handleFilterChange('dateRange', filters.dateRange === 'week' ? 'all' : 'week')}\n              className=\"w-full justify-start\"\n            >\n              üìÖ This Week\n            </Button>\n            <Button\n              variant={filters.sortBy === 'score' ? 'primary' : 'ghost'}\n              size=\"sm\"\n              onClick={() => handleFilterChange('sortBy', filters.sortBy === 'score' ? 'relevance' : 'score')}\n              className=\"w-full justify-start\"\n            >\n              ‚≠ê Highest Rated\n            </Button>\n            <Button\n              variant={filters.sortBy === 'activity' ? 'primary' : 'ghost'}\n              size=\"sm\"\n              onClick={() => handleFilterChange('sortBy', filters.sortBy === 'activity' ? 'relevance' : 'activity')}\n              className=\"w-full justify-start\"\n            >\n              üî• Most Active\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappingsqBgB;;;;;;WAAAA,aAAA;;;;;;;;uEAnBE;;;iCACK;;;iCACuB;;;;;;;;;;;;;;;AAiBvC,SAASA,cAAc;EAC5BC,OAAO;EACPC,eAAe;EACfC,YAAY;EACZC,SAAA;EAAA;EAAA,CAAAC,aAAA,GAAAC,CAAA,UAAY,EAAE;AAAA,CACK;EAAA;EAAAD,aAAA,GAAAE,CAAA;EAAAF,aAAA,GAAAG,CAAA;EACnB,MAAMC,kBAAA,GAAqBA,CAACC,GAAA,EAA8BC,KAAA;IAAA;IAAAN,aAAA,GAAAE,CAAA;IACxD,MAAMK,UAAA;IAAA;IAAA,CAAAP,aAAA,GAAAG,CAAA,OAAa;MAAE,GAAGP,OAAO;MAAE,CAACS,GAAA,GAAMC;IAAM;IAAA;IAAAN,aAAA,GAAAG,CAAA;IAC9CN,eAAA,CAAgBU,UAAA;EAClB;EAAA;EAAAP,aAAA,GAAAG,CAAA;EAEA,MAAMK,kBAAA,GAAqBA,CAAA;IAAA;IAAAR,aAAA,GAAAE,CAAA;IACzB,MAAMO,cAAA;IAAA;IAAA,CAAAT,aAAA,GAAAG,CAAA,QAAoC;MACxCO,IAAA,EAAM;MACNC,QAAA,EAAUC,SAAA;MACVC,SAAA,EAAW;MACXC,MAAA,EAAQ;MACRC,SAAA,EAAW;IACb;IAAA;IAAAf,aAAA,GAAAG,CAAA;IACAN,eAAA,CAAgBY,cAAA;EAClB;EAEA,MAAMO,YAAA;EAAA;EAAA,CAAAhB,aAAA,GAAAG,CAAA,QAAe,CACnB;IAAEG,KAAA,EAAO;IAAOW,KAAA,EAAO;IAAeC,IAAA,EAAM;EAAK,GACjD;IAAEZ,KAAA,EAAO;IAAUW,KAAA,EAAO;IAAUC,IAAA,EAAM;EAAK,GAC/C;IAAEZ,KAAA,EAAO;IAASW,KAAA,EAAO;IAASC,IAAA,EAAM;EAAK,GAC7C;IAAEZ,KAAA,EAAO;IAASW,KAAA,EAAO;IAASC,IAAA,EAAM;EAAK,EAC9C;EAED,MAAMC,UAAA;EAAA;EAAA,CAAAnB,aAAA,GAAAG,CAAA,QAAa,CACjB;IAAEG,KAAA,EAAO;IAAWW,KAAA,EAAO;EAAqB,GAChD;IAAEX,KAAA,EAAO;IAAaW,KAAA,EAAO;EAAY,GACzC;IAAEX,KAAA,EAAO;IAAcW,KAAA,EAAO;EAAa,GAC3C;IAAEX,KAAA,EAAO;IAAiBW,KAAA,EAAO;EAAgB,GACjD;IAAEX,KAAA,EAAO;IAAYW,KAAA,EAAO;EAAW,EACxC;EAED,MAAMG,UAAA;EAAA;EAAA,CAAApB,aAAA,GAAAG,CAAA,QAAa,CACjB;IAAEG,KAAA,EAAO;IAAOW,KAAA,EAAO;EAAW,GAClC;IAAEX,KAAA,EAAO;IAAOW,KAAA,EAAO;EAAW,GAClC;IAAEX,KAAA,EAAO;IAAQW,KAAA,EAAO;EAAY,GACpC;IAAEX,KAAA,EAAO;IAASW,KAAA,EAAO;EAAa,GACtC;IAAEX,KAAA,EAAO;IAAQW,KAAA,EAAO;EAAY,EACrC;EAED,MAAMI,WAAA;EAAA;EAAA,CAAArB,aAAA,GAAAG,CAAA,QAAc,CAClB;IAAEG,KAAA,EAAO;IAAaW,KAAA,EAAO;EAAY,GACzC;IAAEX,KAAA,EAAO;IAAQW,KAAA,EAAO;EAAO,GAC/B;IAAEX,KAAA,EAAO;IAASW,KAAA,EAAO;EAAQ,GACjC;IAAEX,KAAA,EAAO;IAAYW,KAAA,EAAO;EAAW,EACxC;EAAA;EAAAjB,aAAA,GAAAG,CAAA;EAED,oBACE,IAAAmB,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAC,IAAI;IAACC,OAAA,EAAQ;IAAW3B,SAAA,EAAWA,SAAA;4BAClC,IAAAuB,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAG,UAAU;MAAC5B,SAAA,EAAU;8BACpB,IAAAuB,WAAA,CAAAC,IAAA,EAAC;QAAIxB,SAAA,EAAU;gCACb,IAAAuB,WAAA,CAAAM,GAAA,EAAC;UAAG7B,SAAA,EAAU;oBAAoC;yBAClD,IAAAuB,WAAA,CAAAM,GAAA,EAACC,OAAA,CAAAC,MAAM;UACLJ,OAAA,EAAQ;UACRK,IAAA,EAAK;UACLC,OAAA,EAASxB,kBAAA;oBACV;;;MAIF;MAAA,CAAAR,aAAA,GAAAC,CAAA,UAAAH,YAAA,GAAe;MAAA;MAAA,CAAAE,aAAA,GAAAC,CAAA,uBACd,IAAAqB,WAAA,CAAAC,IAAA,EAAC;QAAExB,SAAA,EAAU;mBACVD,YAAA,EAAa;;qBAKpB,IAAAwB,WAAA,CAAAC,IAAA,EAACC,KAAA,CAAAS,WAAW;MAAClC,SAAA,EAAU;8BAErB,IAAAuB,WAAA,CAAAC,IAAA,EAAC;gCACC,IAAAD,WAAA,CAAAM,GAAA,EAAC;UAAM7B,SAAA,EAAU;oBAAiD;yBAGlE,IAAAuB,WAAA,CAAAM,GAAA,EAAC;UAAI7B,SAAA,EAAU;oBACZiB,YAAA,CAAakB,GAAG,CAAExB,IAAA,IACjB;YAAA;YAAAV,aAAA,GAAAE,CAAA;YAAAF,aAAA,GAAAG,CAAA;YAAA,OADiB,aACjB,IAAAmB,WAAA,CAAAC,IAAA,EAAC;cAECS,OAAA,EAASA,CAAA,KAAM;gBAAA;gBAAAhC,aAAA,GAAAE,CAAA;gBAAAF,aAAA,GAAAG,CAAA;gBAAA,OAAAC,kBAAA,CAAmB,QAAQM,IAAA,CAAKJ,KAAK;cAAA;cACpDP,SAAA,EAAW,uFACTH,OAAA,CAAQc,IAAI,KAAKA,IAAA,CAAKJ,KAAK;cAAA;cAAA,CAAAN,aAAA,GAAAC,CAAA,UACvB;cAAA;cAAA,CAAAD,aAAA,GAAAC,CAAA,UACA,6DACJ;sCAEF,IAAAqB,WAAA,CAAAM,GAAA,EAAC;gBAAK7B,SAAA,EAAU;0BAAWW,IAAA,CAAKQ;+BAChC,IAAAI,WAAA,CAAAM,GAAA,EAAC;gBAAK7B,SAAA,EAAU;0BAAWW,IAAA,CAAKO;;eAT3BP,IAAA,CAAKJ,KAAK;UAAA;;uBAgBvB,IAAAgB,WAAA,CAAAC,IAAA,EAAC;gCACC,IAAAD,WAAA,CAAAM,GAAA,EAAC;UAAM7B,SAAA,EAAU;oBAAiD;yBAGlE,IAAAuB,WAAA,CAAAC,IAAA,EAAC;UACCjB,KAAA;UAAO;UAAA,CAAAN,aAAA,GAAAC,CAAA,UAAAL,OAAA,CAAQe,QAAQ;UAAA;UAAA,CAAAX,aAAA,GAAAC,CAAA,UAAI;UAC3BkC,QAAA,EAAWC,CAAA,IAAM;YAAA;YAAApC,aAAA,GAAAE,CAAA;YAAAF,aAAA,GAAAG,CAAA;YAAA,OAAAC,kBAAA,CAAmB;YAAY;YAAA,CAAAJ,aAAA,GAAAC,CAAA,UAAAmC,CAAA,CAAEC,MAAM,CAAC/B,KAAK;YAAA;YAAA,CAAAN,aAAA,GAAAC,CAAA,UAAIW,SAAA;UAAA;UAClEb,SAAA,EAAU;kCAEV,IAAAuB,WAAA,CAAAM,GAAA,EAAC;YAAOtB,KAAA,EAAM;sBAAG;cAChBa,UAAA,CAAWe,GAAG,CAAEvB,QAAA,IACf;YAAA;YAAAX,aAAA,GAAAE,CAAA;YAAAF,aAAA,GAAAG,CAAA;YAAA,OADe,aACf,IAAAmB,WAAA,CAAAM,GAAA,EAAC;cAA4BtB,KAAA,EAAOK,QAAA,CAASL,KAAK;wBAC/CK,QAAA,CAASM;eADCN,QAAA,CAASL,KAAK;UAAA;;uBAQjC,IAAAgB,WAAA,CAAAC,IAAA,EAAC;gCACC,IAAAD,WAAA,CAAAM,GAAA,EAAC;UAAM7B,SAAA,EAAU;oBAAiD;yBAGlE,IAAAuB,WAAA,CAAAM,GAAA,EAAC;UACCtB,KAAA;UAAO;UAAA,CAAAN,aAAA,GAAAC,CAAA,UAAAL,OAAA,CAAQiB,SAAS;UAAA;UAAA,CAAAb,aAAA,GAAAC,CAAA,UAAI;UAC5BkC,QAAA,EAAWC,CAAA,IAAM;YAAA;YAAApC,aAAA,GAAAE,CAAA;YAAAF,aAAA,GAAAG,CAAA;YAAA,OAAAC,kBAAA,CAAmB,aAAagC,CAAA,CAAEC,MAAM,CAAC/B,KAAK;UAAA;UAC/DP,SAAA,EAAU;oBAETqB,UAAA,CAAWc,GAAG,CAAEI,KAAA,IACf;YAAA;YAAAtC,aAAA,GAAAE,CAAA;YAAAF,aAAA,GAAAG,CAAA;YAAA,OADe,aACf,IAAAmB,WAAA,CAAAM,GAAA,EAAC;cAAyBtB,KAAA,EAAOgC,KAAA,CAAMhC,KAAK;wBACzCgC,KAAA,CAAMrB;eADIqB,KAAA,CAAMhC,KAAK;UAAA;;uBAQ9B,IAAAgB,WAAA,CAAAC,IAAA,EAAC;gCACC,IAAAD,WAAA,CAAAM,GAAA,EAAC;UAAM7B,SAAA,EAAU;oBAAiD;yBAGlE,IAAAuB,WAAA,CAAAC,IAAA,EAAC;UAAIxB,SAAA,EAAU;kCACb,IAAAuB,WAAA,CAAAM,GAAA,EAAC;YACCtB,KAAA,EAAOV,OAAA,CAAQkB,MAAM;YACrBqB,QAAA,EAAWC,CAAA,IAAM;cAAA;cAAApC,aAAA,GAAAE,CAAA;cAAAF,aAAA,GAAAG,CAAA;cAAA,OAAAC,kBAAA,CAAmB,UAAUgC,CAAA,CAAEC,MAAM,CAAC/B,KAAK;YAAA;YAC5DP,SAAA,EAAU;sBAETsB,WAAA,CAAYa,GAAG,CAAEK,MAAA,IAChB;cAAA;cAAAvC,aAAA,GAAAE,CAAA;cAAAF,aAAA,GAAAG,CAAA;cAAA,OADgB,aAChB,IAAAmB,WAAA,CAAAM,GAAA,EAAC;gBAA0BtB,KAAA,EAAOiC,MAAA,CAAOjC,KAAK;0BAC3CiC,MAAA,CAAOtB;iBADGsB,MAAA,CAAOjC,KAAK;YAAA;2BAM7B,IAAAgB,WAAA,CAAAC,IAAA,EAAC;YACCjB,KAAA,EAAOV,OAAA,CAAQmB,SAAS;YACxBoB,QAAA,EAAWC,CAAA,IAAM;cAAA;cAAApC,aAAA,GAAAE,CAAA;cAAAF,aAAA,GAAAG,CAAA;cAAA,OAAAC,kBAAA,CAAmB,aAAagC,CAAA,CAAEC,MAAM,CAAC/B,KAAK;YAAA;YAC/DP,SAAA,EAAU;oCAEV,IAAAuB,WAAA,CAAAM,GAAA,EAAC;cAAOtB,KAAA,EAAM;wBAAO;6BACrB,IAAAgB,WAAA,CAAAM,GAAA,EAAC;cAAOtB,KAAA,EAAM;wBAAM;;;;uBAM1B,IAAAgB,WAAA,CAAAC,IAAA,EAAC;QAAIxB,SAAA,EAAU;gCACb,IAAAuB,WAAA,CAAAM,GAAA,EAAC;UAAM7B,SAAA,EAAU;oBAAiD;yBAGlE,IAAAuB,WAAA,CAAAC,IAAA,EAAC;UAAIxB,SAAA,EAAU;kCACb,IAAAuB,WAAA,CAAAM,GAAA,EAACC,OAAA,CAAAC,MAAM;YACLJ,OAAA,EAAS9B,OAAA,CAAQiB,SAAS,KAAK;YAAA;YAAA,CAAAb,aAAA,GAAAC,CAAA,UAAS;YAAA;YAAA,CAAAD,aAAA,GAAAC,CAAA,UAAY;YACpD8B,IAAA,EAAK;YACLC,OAAA,EAASA,CAAA,KAAM;cAAA;cAAAhC,aAAA,GAAAE,CAAA;cAAAF,aAAA,GAAAG,CAAA;cAAA,OAAAC,kBAAA,CAAmB,aAAaR,OAAA,CAAQiB,SAAS,KAAK;cAAA;cAAA,CAAAb,aAAA,GAAAC,CAAA,UAAS;cAAA;cAAA,CAAAD,aAAA,GAAAC,CAAA,UAAQ;YAAA;YACtFF,SAAA,EAAU;sBACX;2BAGD,IAAAuB,WAAA,CAAAM,GAAA,EAACC,OAAA,CAAAC,MAAM;YACLJ,OAAA,EAAS9B,OAAA,CAAQkB,MAAM,KAAK;YAAA;YAAA,CAAAd,aAAA,GAAAC,CAAA,WAAU;YAAA;YAAA,CAAAD,aAAA,GAAAC,CAAA,WAAY;YAClD8B,IAAA,EAAK;YACLC,OAAA,EAASA,CAAA,KAAM;cAAA;cAAAhC,aAAA,GAAAE,CAAA;cAAAF,aAAA,GAAAG,CAAA;cAAA,OAAAC,kBAAA,CAAmB,UAAUR,OAAA,CAAQkB,MAAM,KAAK;cAAA;cAAA,CAAAd,aAAA,GAAAC,CAAA,WAAU;cAAA;cAAA,CAAAD,aAAA,GAAAC,CAAA,WAAc;YAAA;YACvFF,SAAA,EAAU;sBACX;2BAGD,IAAAuB,WAAA,CAAAM,GAAA,EAACC,OAAA,CAAAC,MAAM;YACLJ,OAAA,EAAS9B,OAAA,CAAQkB,MAAM,KAAK;YAAA;YAAA,CAAAd,aAAA,GAAAC,CAAA,WAAa;YAAA;YAAA,CAAAD,aAAA,GAAAC,CAAA,WAAY;YACrD8B,IAAA,EAAK;YACLC,OAAA,EAASA,CAAA,KAAM;cAAA;cAAAhC,aAAA,GAAAE,CAAA;cAAAF,aAAA,GAAAG,CAAA;cAAA,OAAAC,kBAAA,CAAmB,UAAUR,OAAA,CAAQkB,MAAM,KAAK;cAAA;cAAA,CAAAd,aAAA,GAAAC,CAAA,WAAa;cAAA;cAAA,CAAAD,aAAA,GAAAC,CAAA,WAAc;YAAA;YAC1FF,SAAA,EAAU;sBACX;;;;;;AAQb","ignoreList":[]}