{"version":3,"names":["cov_a63tpu01q","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","branchMap","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/types/posts.ts"],"sourcesContent":["/**\n * Post type definitions for The Robot Overlord\n * Based on backend API schema\n */\n\nexport interface Post {\n  id: string;\n  title: string;\n  content: string;\n  authorId: string;\n  author: {\n    id: string;\n    username: string;\n    firstName?: string;\n    lastName?: string;\n    avatar?: string;\n    role: string;\n    loyaltyScore: number;\n    badges?: Array<{\n      id: string;\n      name: string;\n      icon: string;\n      rarity: string;\n    }>;\n  };\n  topicId: string;\n  topic: {\n    id: string;\n    title: string;\n    slug: string;\n    category: {\n      id: string;\n      name: string;\n      color: string;\n    };\n  };\n  parentId?: string; // For replies\n  status: 'draft' | 'published' | 'moderated' | 'removed';\n  moderationStatus: 'pending' | 'approved' | 'rejected' | 'flagged';\n  moderationReason?: string;\n  moderatedBy?: string;\n  moderatedAt?: string;\n  tags: string[];\n  upvotes: number;\n  downvotes: number;\n  score: number;\n  userVote?: 'up' | 'down' | null;\n  replyCount: number;\n  viewCount: number;\n  isPinned: boolean;\n  isLocked: boolean;\n  isEdited: boolean;\n  createdAt: string;\n  updatedAt: string;\n  editedAt?: string;\n  publishedAt?: string;\n  userPermissions?: {\n    canEdit: boolean;\n    canDelete: boolean;\n    canModerate: boolean;\n    canReport: boolean;\n  };\n  editHistory?: Array<{\n    id: string;\n    content: string;\n    editedAt: string;\n    editedBy: string;\n    reason?: string;\n  }>;\n  attachments?: Array<{\n    id: string;\n    filename: string;\n    url: string;\n    type: string;\n    size: number;\n  }>;\n  metadata?: {\n    readTime?: number;\n    wordCount?: number;\n    contentWarnings?: string[];\n  };\n}\n\nexport interface CreatePostRequest {\n  title: string;\n  content: string;\n  topicId: string;\n  parentId?: string;\n  tags?: string[];\n  status?: 'draft' | 'published';\n  attachments?: string[];\n}\n\nexport interface UpdatePostRequest {\n  title?: string;\n  content?: string;\n  tags?: string[];\n  editReason?: string;\n  attachments?: string[];\n}\n\nexport interface PostFilters {\n  topicId?: string;\n  authorId?: string;\n  parentId?: string;\n  status?: Post['status'];\n  moderationStatus?: Post['moderationStatus'];\n  tags?: string[];\n  search?: string;\n  sortBy?: 'newest' | 'oldest' | 'popular' | 'controversial' | 'trending' | 'replies';\n  timeRange?: 'hour' | 'day' | 'week' | 'month' | 'year' | 'all';\n  hasAttachments?: boolean;\n  isPinned?: boolean;\n  isLocked?: boolean;\n  page?: number;\n  limit?: number;\n}\n\nexport interface PostVote {\n  postId: string;\n  userId: string;\n  vote: 'up' | 'down';\n  createdAt: string;\n}\n\nexport interface PostReport {\n  id: string;\n  postId: string;\n  reportedBy: string;\n  reporter: {\n    id: string;\n    username: string;\n  };\n  reason: string;\n  details?: string;\n  status: 'pending' | 'reviewed' | 'dismissed';\n  reviewedBy?: string;\n  reviewedAt?: string;\n  createdAt: string;\n}\n\nexport interface PostModerationAction {\n  id: string;\n  postId: string;\n  action: 'approve' | 'reject' | 'flag' | 'remove' | 'pin' | 'unpin' | 'lock' | 'unlock' | 'edit';\n  reason?: string;\n  moderatedBy: string;\n  moderator: {\n    id: string;\n    username: string;\n    role: string;\n  };\n  previousStatus?: string;\n  newStatus: string;\n  notifyAuthor: boolean;\n  createdAt: string;\n}\n\nexport interface PostAnalytics {\n  postId: string;\n  views: number;\n  uniqueViews: number;\n  engagement: number;\n  engagementRate: number;\n  votingPattern: {\n    upvotes: number;\n    downvotes: number;\n    netScore: number;\n  };\n  replyPattern: Array<{\n    date: string;\n    count: number;\n  }>;\n  viewPattern: Array<{\n    date: string;\n    views: number;\n    uniqueViews: number;\n  }>;\n  moderationActions: number;\n  reportCount: number;\n  shareCount: number;\n  bookmarkCount: number;\n}\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;IAAAC,SAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,CAAA;IAAAC,CAAA;IAAAC,cAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAArB,IAAA;EAAA;EAAA,IAAAsB,QAAA,GAAArB,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAmB,QAAA,CAAAvB,IAAA,KAAAuB,QAAA,CAAAvB,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAAsB,QAAA,CAAAvB,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAmB,cAAA,GAAAD,QAAA,CAAAvB,IAAA;EAAA","ignoreList":[]}