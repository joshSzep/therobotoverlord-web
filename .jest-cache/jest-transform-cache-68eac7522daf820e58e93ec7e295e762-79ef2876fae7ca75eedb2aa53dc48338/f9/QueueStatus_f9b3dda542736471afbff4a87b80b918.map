{"version":3,"names":["QueueStatus","userId","cov_2pe8n2csnc","f","connected","subscribe","unsubscribe","s","_WebSocketProvider","useWebSocketContext","queuePositions","setQueuePositions","_react","useState","Map","lastUpdate","setLastUpdate","useEffect","handleQueueUpdate","data","prev","updated","set","queue_type","Date","handleQueueStatusChange","b","formatWaitTime","seconds","Math","floor","getQueueDisplayName","queueType","replace","l","toUpperCase","_jsxruntime","jsx","className","jsxs","size","Array","from","entries","map","position","new_position","total_queue_size","style","width","max","old_position","estimated_wait_time","toLocaleTimeString"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/QueueStatus.tsx"],"sourcesContent":["/**\n * Real-time queue status component.\n */\n\n'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { useWebSocketContext } from './WebSocketProvider';\n\ninterface QueuePosition {\n  queue_type: string;\n  old_position: number | null;\n  new_position: number;\n  estimated_wait_time: number | null;\n  total_queue_size: number;\n}\n\ninterface QueueStatusProps {\n  userId: string;\n}\n\nexport function QueueStatus({ userId }: QueueStatusProps) {\n  const { connected, subscribe, unsubscribe } = useWebSocketContext();\n  const [queuePositions, setQueuePositions] = useState<Map<string, QueuePosition>>(new Map());\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n\n  useEffect(() => {\n    const handleQueueUpdate = (data: QueuePosition) => {\n      setQueuePositions(prev => {\n        const updated = new Map(prev);\n        updated.set(data.queue_type, data);\n        return updated;\n      });\n      setLastUpdate(new Date());\n    };\n\n    const handleQueueStatusChange = (data: any) => {\n      // Handle general queue status changes\n      setLastUpdate(new Date());\n    };\n\n    if (connected) {\n      subscribe('queue_position_update', handleQueueUpdate);\n      subscribe('queue_status_change', handleQueueStatusChange);\n    }\n\n    return () => {\n      unsubscribe('queue_position_update', handleQueueUpdate);\n      unsubscribe('queue_status_change', handleQueueStatusChange);\n    };\n  }, [connected, subscribe, unsubscribe]);\n\n  const formatWaitTime = (seconds: number | null): string => {\n    if (!seconds) return 'Unknown';\n    \n    if (seconds < 60) return `${seconds}s`;\n    if (seconds < 3600) return `${Math.floor(seconds / 60)}m`;\n    return `${Math.floor(seconds / 3600)}h ${Math.floor((seconds % 3600) / 60)}m`;\n  };\n\n  const getQueueDisplayName = (queueType: string): string => {\n    switch (queueType) {\n      case 'topic_creation': return 'Topic Creation';\n      case 'post_moderation': return 'Post Moderation';\n      case 'private_message': return 'Message Moderation';\n      default: return queueType.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    }\n  };\n\n  if (!connected) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"w-2 h-2 bg-yellow-400 rounded-full mr-2\"></div>\n          <span className=\"text-yellow-800\">Connecting to real-time updates...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (queuePositions.size === 0) {\n    return (\n      <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n          <span className=\"text-green-800\">No items in queue</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold\">Queue Status</h3>\n        <div className=\"flex items-center text-sm text-gray-500\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n          Live Updates\n        </div>\n      </div>\n\n      <div className=\"space-y-3\">\n        {Array.from(queuePositions.entries()).map(([queueType, position]) => (\n          <div key={queueType} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h4 className=\"font-medium\">{getQueueDisplayName(queueType)}</h4>\n              <span className=\"text-sm text-gray-500\">\n                Position {position.new_position} of {position.total_queue_size}\n              </span>\n            </div>\n            \n            <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\n              <div\n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\n                style={{\n                  width: `${Math.max(5, (1 - (position.new_position - 1) / position.total_queue_size) * 100)}%`\n                }}\n              ></div>\n            </div>\n            \n            <div className=\"flex justify-between text-sm text-gray-600\">\n              <span>\n                {position.old_position && position.old_position !== position.new_position\n                  ? `Moved from position ${position.old_position}`\n                  : 'In queue'\n                }\n              </span>\n              <span>\n                Est. wait: {formatWaitTime(position.estimated_wait_time)}\n              </span>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {lastUpdate && (\n        <div className=\"text-xs text-gray-500 text-center\">\n          Last updated: {lastUpdate.toLocaleTimeString()}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappingsiBgB;;;;;;WAAAA,WAAA;;;;;;;;yEAf2B;;;kCACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAc7B,SAASA,YAAY;EAAEC;AAAM,CAAoB;EAAA;EAAAC,cAAA,GAAAC,CAAA;EACtD,MAAM;IAAEC,SAAS;IAAEC,SAAS;IAAEC;EAAW,CAAE;EAAA;EAAA,CAAAJ,cAAA,GAAAK,CAAA,QAAG,IAAAC,kBAAA,CAAAC,mBAAmB;EACjE,MAAM,CAACC,cAAA,EAAgBC,iBAAA,CAAkB;EAAA;EAAA,CAAAT,cAAA,GAAAK,CAAA,QAAG,IAAAK,MAAA,CAAAC,QAAQ,EAA6B,IAAIC,GAAA;EACrF,MAAM,CAACC,UAAA,EAAYC,aAAA,CAAc;EAAA;EAAA,CAAAd,cAAA,GAAAK,CAAA,QAAG,IAAAK,MAAA,CAAAC,QAAQ,EAAc;EAAA;EAAAX,cAAA,GAAAK,CAAA;EAE1D,IAAAK,MAAA,CAAAK,SAAS,EAAC;IAAA;IAAAf,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAK,CAAA;IACR,MAAMW,iBAAA,GAAqBC,IAAA;MAAA;MAAAjB,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAK,CAAA;MACzBI,iBAAA,CAAkBS,IAAA;QAAA;QAAAlB,cAAA,GAAAC,CAAA;QAChB,MAAMkB,OAAA;QAAA;QAAA,CAAAnB,cAAA,GAAAK,CAAA,QAAU,IAAIO,GAAA,CAAIM,IAAA;QAAA;QAAAlB,cAAA,GAAAK,CAAA;QACxBc,OAAA,CAAQC,GAAG,CAACH,IAAA,CAAKI,UAAU,EAAEJ,IAAA;QAAA;QAAAjB,cAAA,GAAAK,CAAA;QAC7B,OAAOc,OAAA;MACT;MAAA;MAAAnB,cAAA,GAAAK,CAAA;MACAS,aAAA,CAAc,IAAIQ,IAAA;IACpB;IAAA;IAAAtB,cAAA,GAAAK,CAAA;IAEA,MAAMkB,uBAAA,GAA2BN,IAAA;MAAA;MAAAjB,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAK,CAAA;MAC/B;MACAS,aAAA,CAAc,IAAIQ,IAAA;IACpB;IAAA;IAAAtB,cAAA,GAAAK,CAAA;IAEA,IAAIH,SAAA,EAAW;MAAA;MAAAF,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAK,CAAA;MACbF,SAAA,CAAU,yBAAyBa,iBAAA;MAAA;MAAAhB,cAAA,GAAAK,CAAA;MACnCF,SAAA,CAAU,uBAAuBoB,uBAAA;IACnC;IAAA;IAAA;MAAAvB,cAAA,GAAAwB,CAAA;IAAA;IAAAxB,cAAA,GAAAK,CAAA;IAEA,OAAO;MAAA;MAAAL,cAAA,GAAAC,CAAA;MAAAD,cAAA,GAAAK,CAAA;MACLD,WAAA,CAAY,yBAAyBY,iBAAA;MAAA;MAAAhB,cAAA,GAAAK,CAAA;MACrCD,WAAA,CAAY,uBAAuBmB,uBAAA;IACrC;EACF,GAAG,CAACrB,SAAA,EAAWC,SAAA,EAAWC,WAAA,CAAY;EAAA;EAAAJ,cAAA,GAAAK,CAAA;EAEtC,MAAMoB,cAAA,GAAkBC,OAAA;IAAA;IAAA1B,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAK,CAAA;IACtB,IAAI,CAACqB,OAAA,EAAS;MAAA;MAAA1B,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAK,CAAA;MAAA,OAAO;IAAA;IAAA;IAAA;MAAAL,cAAA,GAAAwB,CAAA;IAAA;IAAAxB,cAAA,GAAAK,CAAA;IAErB,IAAIqB,OAAA,GAAU,IAAI;MAAA;MAAA1B,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAK,CAAA;MAAA,OAAO,GAAGqB,OAAA,GAAU;IAAA;IAAA;IAAA;MAAA1B,cAAA,GAAAwB,CAAA;IAAA;IAAAxB,cAAA,GAAAK,CAAA;IACtC,IAAIqB,OAAA,GAAU,MAAM;MAAA;MAAA1B,cAAA,GAAAwB,CAAA;MAAAxB,cAAA,GAAAK,CAAA;MAAA,OAAO,GAAGsB,IAAA,CAAKC,KAAK,CAACF,OAAA,GAAU,MAAM;IAAA;IAAA;IAAA;MAAA1B,cAAA,GAAAwB,CAAA;IAAA;IAAAxB,cAAA,GAAAK,CAAA;IACzD,OAAO,GAAGsB,IAAA,CAAKC,KAAK,CAACF,OAAA,GAAU,UAAUC,IAAA,CAAKC,KAAK,CAACF,OAAC,GAAU,OAAQ,MAAM;EAC/E;EAAA;EAAA1B,cAAA,GAAAK,CAAA;EAEA,MAAMwB,mBAAA,GAAuBC,SAAA;IAAA;IAAA9B,cAAA,GAAAC,CAAA;IAAAD,cAAA,GAAAK,CAAA;IAC3B,QAAQyB,SAAA;MACN,KAAK;QAAA;QAAA9B,cAAA,GAAAwB,CAAA;QAAAxB,cAAA,GAAAK,CAAA;QAAkB,OAAO;MAC9B,KAAK;QAAA;QAAAL,cAAA,GAAAwB,CAAA;QAAAxB,cAAA,GAAAK,CAAA;QAAmB,OAAO;MAC/B,KAAK;QAAA;QAAAL,cAAA,GAAAwB,CAAA;QAAAxB,cAAA,GAAAK,CAAA;QAAmB,OAAO;MAC/B;QAAA;QAAAL,cAAA,GAAAwB,CAAA;QAAAxB,cAAA,GAAAK,CAAA;QAAS,OAAOyB,SAAA,CAAUC,OAAO,CAAC,KAAK,KAAKA,OAAO,CAAC,SAASC,CAAA,IAAK;UAAA;UAAAhC,cAAA,GAAAC,CAAA;UAAAD,cAAA,GAAAK,CAAA;UAAA,OAAA2B,CAAA,CAAEC,WAAW;QAAA;IACjF;EACF;EAAA;EAAAjC,cAAA,GAAAK,CAAA;EAEA,IAAI,CAACH,SAAA,EAAW;IAAA;IAAAF,cAAA,GAAAwB,CAAA;IAAAxB,cAAA,GAAAK,CAAA;IACd,oBACE,IAAA6B,WAAA,CAAAC,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAG,IAAA,EAAC;QAAID,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;UAAIC,SAAA,EAAU;yBACf,IAAAF,WAAA,CAAAC,GAAA,EAAC;UAAKC,SAAA,EAAU;oBAAkB;;;;EAI1C;EAAA;EAAA;IAAApC,cAAA,GAAAwB,CAAA;EAAA;EAAAxB,cAAA,GAAAK,CAAA;EAEA,IAAIG,cAAA,CAAe8B,IAAI,KAAK,GAAG;IAAA;IAAAtC,cAAA,GAAAwB,CAAA;IAAAxB,cAAA,GAAAK,CAAA;IAC7B,oBACE,IAAA6B,WAAA,CAAAC,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACb,iBAAAF,WAAA,CAAAG,IAAA,EAAC;QAAID,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;UAAIC,SAAA,EAAU;yBACf,IAAAF,WAAA,CAAAC,GAAA,EAAC;UAAKC,SAAA,EAAU;oBAAiB;;;;EAIzC;EAAA;EAAA;IAAApC,cAAA,GAAAwB,CAAA;EAAA;EAAAxB,cAAA,GAAAK,CAAA;EAEA,oBACE,IAAA6B,WAAA,CAAAG,IAAA,EAAC;IAAID,SAAA,EAAU;4BACb,IAAAF,WAAA,CAAAG,IAAA,EAAC;MAAID,SAAA,EAAU;8BACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;QAAGC,SAAA,EAAU;kBAAwB;uBACtC,IAAAF,WAAA,CAAAG,IAAA,EAAC;QAAID,SAAA,EAAU;gCACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;UAAIC,SAAA,EAAU;YAA+C;;qBAKlE,IAAAF,WAAA,CAAAC,GAAA,EAAC;MAAIC,SAAA,EAAU;gBACZG,KAAA,CAAMC,IAAI,CAAChC,cAAA,CAAeiC,OAAO,IAAIC,GAAG,CAAC,CAAC,CAACZ,SAAA,EAAWa,QAAA,CAAS,KAC9D;QAAA;QAAA3C,cAAA,GAAAC,CAAA;QAAAD,cAAA,GAAAK,CAAA;QAAA,OAD8D,aAC9D,IAAA6B,WAAA,CAAAG,IAAA,EAAC;UAAoBD,SAAA,EAAU;kCAC7B,IAAAF,WAAA,CAAAG,IAAA,EAAC;YAAID,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;cAAGC,SAAA,EAAU;wBAAeP,mBAAA,CAAoBC,SAAA;6BACjD,IAAAI,WAAA,CAAAG,IAAA,EAAC;cAAKD,SAAA,EAAU;yBAAwB,aAC5BO,QAAA,CAASC,YAAY,EAAC,QAAKD,QAAA,CAASE,gBAAgB;;2BAIlE,IAAAX,WAAA,CAAAC,GAAA,EAAC;YAAIC,SAAA,EAAU;sBACb,iBAAAF,WAAA,CAAAC,GAAA,EAAC;cACCC,SAAA,EAAU;cACVU,KAAA,EAAO;gBACLC,KAAA,EAAO,GAAGpB,IAAA,CAAKqB,GAAG,CAAC,GAAG,CAAC,IAAI,CAACL,QAAA,CAASC,YAAY,GAAG,KAAKD,QAAA,CAASE,gBAAgB,IAAI;cACxF;;2BAIJ,IAAAX,WAAA,CAAAG,IAAA,EAAC;YAAID,SAAA,EAAU;oCACb,IAAAF,WAAA,CAAAC,GAAA,EAAC;;cACE;cAAA,CAAAnC,cAAA,GAAAwB,CAAA,WAAAmB,QAAA,CAASM,YAAY;cAAA;cAAA,CAAAjD,cAAA,GAAAwB,CAAA,WAAImB,QAAA,CAASM,YAAY,KAAKN,QAAA,CAASC,YAAY;cAAA;cAAA,CAAA5C,cAAA,GAAAwB,CAAA,WACrE,uBAAuBmB,QAAA,CAASM,YAAY,EAAE;cAAA;cAAA,CAAAjD,cAAA,GAAAwB,CAAA,WAC9C;6BAGN,IAAAU,WAAA,CAAAG,IAAA,EAAC;yBAAK,eACQZ,cAAA,CAAekB,QAAA,CAASO,mBAAmB;;;WAzBnDpB,SAAA;MAAA;;IAgCb;IAAA,CAAA9B,cAAA,GAAAwB,CAAA,WAAAX,UAAA;IAAA;IAAA,CAAAb,cAAA,GAAAwB,CAAA,wBACC,IAAAU,WAAA,CAAAG,IAAA,EAAC;MAAID,SAAA,EAAU;iBAAoC,kBAClCvB,UAAA,CAAWsC,kBAAkB;;;AAKtD","ignoreList":[]}