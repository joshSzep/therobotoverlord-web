9b3e7526ecf9cc724735b8f465eaf42b
/**
 * Real-time queue status component.
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_2pe8n2csnc() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/QueueStatus.tsx";
  var hash = "26de49b7348dc5f09602314ecc69c24ee93eafca";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/QueueStatus.tsx",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 8,
          column: 0
        },
        end: {
          line: 13,
          column: 3
        }
      },
      "2": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 27
        }
      },
      "3": {
        start: {
          line: 14,
          column: 20
        },
        end: {
          line: 14,
          column: 48
        }
      },
      "4": {
        start: {
          line: 15,
          column: 29
        },
        end: {
          line: 15,
          column: 72
        }
      },
      "5": {
        start: {
          line: 16,
          column: 27
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "6": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "7": {
        start: {
          line: 18,
          column: 39
        },
        end: {
          line: 18,
          column: 51
        }
      },
      "8": {
        start: {
          line: 19,
          column: 28
        },
        end: {
          line: 19,
          column: 41
        }
      },
      "9": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 40
        }
      },
      "10": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 23,
          column: 20
        }
      },
      "11": {
        start: {
          line: 22,
          column: 8
        },
        end: {
          line: 22,
          column: 66
        }
      },
      "12": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 28,
          column: 5
        }
      },
      "13": {
        start: {
          line: 27,
          column: 8
        },
        end: {
          line: 27,
          column: 19
        }
      },
      "14": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 5
        }
      },
      "15": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 32,
          column: 10
        }
      },
      "16": {
        start: {
          line: 34,
          column: 16
        },
        end: {
          line: 34,
          column: 53
        }
      },
      "17": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "18": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 30
        }
      },
      "19": {
        start: {
          line: 38,
          column: 17
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "20": {
        start: {
          line: 41,
          column: 32
        },
        end: {
          line: 41,
          column: 88
        }
      },
      "21": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "22": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 50,
          column: 9
        }
      },
      "23": {
        start: {
          line: 44,
          column: 23
        },
        end: {
          line: 44,
          column: 95
        }
      },
      "24": {
        start: {
          line: 45,
          column: 12
        },
        end: {
          line: 49,
          column: 13
        }
      },
      "25": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 57
        }
      },
      "26": {
        start: {
          line: 48,
          column: 16
        },
        end: {
          line: 48,
          column: 39
        }
      },
      "27": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 25
        }
      },
      "28": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "29": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 31
        }
      },
      "30": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 18
        }
      },
      "31": {
        start: {
          line: 59,
          column: 50
        },
        end: {
          line: 59,
          column: 95
        }
      },
      "32": {
        start: {
          line: 60,
          column: 48
        },
        end: {
          line: 60,
          column: 79
        }
      },
      "33": {
        start: {
          line: 61,
          column: 40
        },
        end: {
          line: 61,
          column: 66
        }
      },
      "34": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "35": {
        start: {
          line: 63,
          column: 34
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "36": {
        start: {
          line: 64,
          column: 12
        },
        end: {
          line: 68,
          column: 15
        }
      },
      "37": {
        start: {
          line: 65,
          column: 32
        },
        end: {
          line: 65,
          column: 45
        }
      },
      "38": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 51
        }
      },
      "39": {
        start: {
          line: 67,
          column: 16
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "40": {
        start: {
          line: 69,
          column: 12
        },
        end: {
          line: 69,
          column: 38
        }
      },
      "41": {
        start: {
          line: 71,
          column: 40
        },
        end: {
          line: 74,
          column: 9
        }
      },
      "42": {
        start: {
          line: 73,
          column: 12
        },
        end: {
          line: 73,
          column: 38
        }
      },
      "43": {
        start: {
          line: 75,
          column: 8
        },
        end: {
          line: 78,
          column: 9
        }
      },
      "44": {
        start: {
          line: 76,
          column: 12
        },
        end: {
          line: 76,
          column: 66
        }
      },
      "45": {
        start: {
          line: 77,
          column: 12
        },
        end: {
          line: 77,
          column: 70
        }
      },
      "46": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 82,
          column: 10
        }
      },
      "47": {
        start: {
          line: 80,
          column: 12
        },
        end: {
          line: 80,
          column: 68
        }
      },
      "48": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 72
        }
      },
      "49": {
        start: {
          line: 88,
          column: 27
        },
        end: {
          line: 93,
          column: 5
        }
      },
      "50": {
        start: {
          line: 89,
          column: 8
        },
        end: {
          line: 89,
          column: 39
        }
      },
      "51": {
        start: {
          line: 89,
          column: 22
        },
        end: {
          line: 89,
          column: 39
        }
      },
      "52": {
        start: {
          line: 90,
          column: 8
        },
        end: {
          line: 90,
          column: 47
        }
      },
      "53": {
        start: {
          line: 90,
          column: 26
        },
        end: {
          line: 90,
          column: 47
        }
      },
      "54": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 66
        }
      },
      "55": {
        start: {
          line: 91,
          column: 28
        },
        end: {
          line: 91,
          column: 66
        }
      },
      "56": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 84
        }
      },
      "57": {
        start: {
          line: 94,
          column: 32
        },
        end: {
          line: 105,
          column: 5
        }
      },
      "58": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 104,
          column: 9
        }
      },
      "59": {
        start: {
          line: 97,
          column: 16
        },
        end: {
          line: 97,
          column: 40
        }
      },
      "60": {
        start: {
          line: 99,
          column: 16
        },
        end: {
          line: 99,
          column: 41
        }
      },
      "61": {
        start: {
          line: 101,
          column: 16
        },
        end: {
          line: 101,
          column: 44
        }
      },
      "62": {
        start: {
          line: 103,
          column: 16
        },
        end: {
          line: 103,
          column: 90
        }
      },
      "63": {
        start: {
          line: 103,
          column: 73
        },
        end: {
          line: 103,
          column: 88
        }
      },
      "64": {
        start: {
          line: 106,
          column: 4
        },
        end: {
          line: 122,
          column: 5
        }
      },
      "65": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 121,
          column: 11
        }
      },
      "66": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 139,
          column: 5
        }
      },
      "67": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 138,
          column: 11
        }
      },
      "68": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 218,
          column: 7
        }
      },
      "69": {
        start: {
          line: 163,
          column: 106
        },
        end: {
          line: 208,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 9
          },
          end: {
            line: 10,
            column: 10
          }
        },
        loc: {
          start: {
            line: 10,
            column: 20
          },
          end: {
            line: 12,
            column: 5
          }
        },
        line: 10
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 17,
            column: 9
          },
          end: {
            line: 17,
            column: 33
          }
        },
        loc: {
          start: {
            line: 17,
            column: 47
          },
          end: {
            line: 24,
            column: 1
          }
        },
        line: 17
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 21,
            column: 39
          },
          end: {
            line: 21,
            column: 40
          }
        },
        loc: {
          start: {
            line: 21,
            column: 61
          },
          end: {
            line: 23,
            column: 5
          }
        },
        line: 21
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 34
          }
        },
        loc: {
          start: {
            line: 25,
            column: 53
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 25
      },
      "4": {
        name: "QueueStatus",
        decl: {
          start: {
            line: 58,
            column: 9
          },
          end: {
            line: 58,
            column: 20
          }
        },
        loc: {
          start: {
            line: 58,
            column: 33
          },
          end: {
            line: 219,
            column: 1
          }
        },
        line: 58
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 62,
            column: 26
          },
          end: {
            line: 62,
            column: 27
          }
        },
        loc: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 83,
            column: 5
          }
        },
        line: 62
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 63,
            column: 34
          },
          end: {
            line: 63,
            column: 35
          }
        },
        loc: {
          start: {
            line: 63,
            column: 42
          },
          end: {
            line: 70,
            column: 9
          }
        },
        line: 63
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 64,
            column: 30
          },
          end: {
            line: 64,
            column: 31
          }
        },
        loc: {
          start: {
            line: 64,
            column: 38
          },
          end: {
            line: 68,
            column: 13
          }
        },
        line: 64
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 71,
            column: 40
          },
          end: {
            line: 71,
            column: 41
          }
        },
        loc: {
          start: {
            line: 71,
            column: 48
          },
          end: {
            line: 74,
            column: 9
          }
        },
        line: 71
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 16
          }
        },
        loc: {
          start: {
            line: 79,
            column: 19
          },
          end: {
            line: 82,
            column: 9
          }
        },
        line: 79
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 88,
            column: 27
          },
          end: {
            line: 88,
            column: 28
          }
        },
        loc: {
          start: {
            line: 88,
            column: 38
          },
          end: {
            line: 93,
            column: 5
          }
        },
        line: 88
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 94,
            column: 32
          },
          end: {
            line: 94,
            column: 33
          }
        },
        loc: {
          start: {
            line: 94,
            column: 45
          },
          end: {
            line: 105,
            column: 5
          }
        },
        line: 94
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 103,
            column: 68
          },
          end: {
            line: 103,
            column: 69
          }
        },
        loc: {
          start: {
            line: 103,
            column: 73
          },
          end: {
            line: 103,
            column: 88
          }
        },
        line: 103
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 163,
            column: 67
          },
          end: {
            line: 163,
            column: 68
          }
        },
        loc: {
          start: {
            line: 163,
            column: 106
          },
          end: {
            line: 208,
            column: 33
          }
        },
        line: 163
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 22,
            column: 29
          },
          end: {
            line: 22,
            column: 45
          }
        }, {
          start: {
            line: 22,
            column: 48
          },
          end: {
            line: 22,
            column: 65
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "3": {
        loc: {
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 8
          },
          end: {
            line: 26,
            column: 20
          }
        }, {
          start: {
            line: 26,
            column: 24
          },
          end: {
            line: 26,
            column: 27
          }
        }, {
          start: {
            line: 26,
            column: 31
          },
          end: {
            line: 26,
            column: 45
          }
        }],
        line: 26
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "5": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 29,
            column: 20
          }
        }, {
          start: {
            line: 29,
            column: 24
          },
          end: {
            line: 29,
            column: 47
          }
        }, {
          start: {
            line: 29,
            column: 51
          },
          end: {
            line: 29,
            column: 76
          }
        }],
        line: 29
      },
      "6": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "7": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 13
          }
        }, {
          start: {
            line: 35,
            column: 17
          },
          end: {
            line: 35,
            column: 31
          }
        }],
        line: 35
      },
      "8": {
        loc: {
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 32
          },
          end: {
            line: 41,
            column: 53
          }
        }, {
          start: {
            line: 41,
            column: 57
          },
          end: {
            line: 41,
            column: 88
          }
        }],
        line: 41
      },
      "9": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 50,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "10": {
        loc: {
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 12
          },
          end: {
            line: 43,
            column: 29
          }
        }, {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 43,
            column: 79
          }
        }],
        line: 43
      },
      "11": {
        loc: {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 44,
            column: 47
          },
          end: {
            line: 44,
            column: 88
          }
        }, {
          start: {
            line: 44,
            column: 91
          },
          end: {
            line: 44,
            column: 95
          }
        }],
        line: 44
      },
      "12": {
        loc: {
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 12
          },
          end: {
            line: 49,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 19
          },
          end: {
            line: 49,
            column: 13
          }
        }],
        line: 45
      },
      "13": {
        loc: {
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 45,
            column: 16
          },
          end: {
            line: 45,
            column: 20
          }
        }, {
          start: {
            line: 45,
            column: 25
          },
          end: {
            line: 45,
            column: 33
          }
        }, {
          start: {
            line: 45,
            column: 37
          },
          end: {
            line: 45,
            column: 45
          }
        }],
        line: 45
      },
      "14": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "15": {
        loc: {
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 75,
            column: 8
          },
          end: {
            line: 78,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 75
      },
      "16": {
        loc: {
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 39
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 89,
            column: 8
          },
          end: {
            line: 89,
            column: 39
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 89
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 47
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 90,
            column: 8
          },
          end: {
            line: 90,
            column: 47
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 66
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 91,
            column: 8
          },
          end: {
            line: 91,
            column: 66
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 91
      },
      "19": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 104,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 96,
            column: 12
          },
          end: {
            line: 97,
            column: 40
          }
        }, {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 99,
            column: 41
          }
        }, {
          start: {
            line: 100,
            column: 12
          },
          end: {
            line: 101,
            column: 44
          }
        }, {
          start: {
            line: 102,
            column: 12
          },
          end: {
            line: 103,
            column: 90
          }
        }],
        line: 95
      },
      "20": {
        loc: {
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 106,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 106
      },
      "21": {
        loc: {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 123
      },
      "22": {
        loc: {
          start: {
            line: 197,
            column: 50
          },
          end: {
            line: 197,
            column: 184
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 197,
            column: 125
          },
          end: {
            line: 197,
            column: 171
          }
        }, {
          start: {
            line: 197,
            column: 174
          },
          end: {
            line: 197,
            column: 184
          }
        }],
        line: 197
      },
      "23": {
        loc: {
          start: {
            line: 197,
            column: 50
          },
          end: {
            line: 197,
            column: 122
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 197,
            column: 50
          },
          end: {
            line: 197,
            column: 71
          }
        }, {
          start: {
            line: 197,
            column: 75
          },
          end: {
            line: 197,
            column: 122
          }
        }],
        line: 197
      },
      "24": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 216,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 210,
            column: 22
          }
        }, {
          start: {
            line: 210,
            column: 40
          },
          end: {
            line: 216,
            column: 14
          }
        }],
        line: 210
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0, 0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/QueueStatus.tsx"],
      sourcesContent: ["/**\n * Real-time queue status component.\n */\n\n'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { useWebSocketContext } from './WebSocketProvider';\n\ninterface QueuePosition {\n  queue_type: string;\n  old_position: number | null;\n  new_position: number;\n  estimated_wait_time: number | null;\n  total_queue_size: number;\n}\n\ninterface QueueStatusProps {\n  userId: string;\n}\n\nexport function QueueStatus({ userId }: QueueStatusProps) {\n  const { connected, subscribe, unsubscribe } = useWebSocketContext();\n  const [queuePositions, setQueuePositions] = useState<Map<string, QueuePosition>>(new Map());\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\n\n  useEffect(() => {\n    const handleQueueUpdate = (data: QueuePosition) => {\n      setQueuePositions(prev => {\n        const updated = new Map(prev);\n        updated.set(data.queue_type, data);\n        return updated;\n      });\n      setLastUpdate(new Date());\n    };\n\n    const handleQueueStatusChange = (data: any) => {\n      // Handle general queue status changes\n      setLastUpdate(new Date());\n    };\n\n    if (connected) {\n      subscribe('queue_position_update', handleQueueUpdate);\n      subscribe('queue_status_change', handleQueueStatusChange);\n    }\n\n    return () => {\n      unsubscribe('queue_position_update', handleQueueUpdate);\n      unsubscribe('queue_status_change', handleQueueStatusChange);\n    };\n  }, [connected, subscribe, unsubscribe]);\n\n  const formatWaitTime = (seconds: number | null): string => {\n    if (!seconds) return 'Unknown';\n    \n    if (seconds < 60) return `${seconds}s`;\n    if (seconds < 3600) return `${Math.floor(seconds / 60)}m`;\n    return `${Math.floor(seconds / 3600)}h ${Math.floor((seconds % 3600) / 60)}m`;\n  };\n\n  const getQueueDisplayName = (queueType: string): string => {\n    switch (queueType) {\n      case 'topic_creation': return 'Topic Creation';\n      case 'post_moderation': return 'Post Moderation';\n      case 'private_message': return 'Message Moderation';\n      default: return queueType.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase());\n    }\n  };\n\n  if (!connected) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"w-2 h-2 bg-yellow-400 rounded-full mr-2\"></div>\n          <span className=\"text-yellow-800\">Connecting to real-time updates...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (queuePositions.size === 0) {\n    return (\n      <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n        <div className=\"flex items-center\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n          <span className=\"text-green-800\">No items in queue</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <h3 className=\"text-lg font-semibold\">Queue Status</h3>\n        <div className=\"flex items-center text-sm text-gray-500\">\n          <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n          Live Updates\n        </div>\n      </div>\n\n      <div className=\"space-y-3\">\n        {Array.from(queuePositions.entries()).map(([queueType, position]) => (\n          <div key={queueType} className=\"bg-white border border-gray-200 rounded-lg p-4\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <h4 className=\"font-medium\">{getQueueDisplayName(queueType)}</h4>\n              <span className=\"text-sm text-gray-500\">\n                Position {position.new_position} of {position.total_queue_size}\n              </span>\n            </div>\n            \n            <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\n              <div\n                className=\"bg-blue-600 h-2 rounded-full transition-all duration-500\"\n                style={{\n                  width: `${Math.max(5, (1 - (position.new_position - 1) / position.total_queue_size) * 100)}%`\n                }}\n              ></div>\n            </div>\n            \n            <div className=\"flex justify-between text-sm text-gray-600\">\n              <span>\n                {position.old_position && position.old_position !== position.new_position\n                  ? `Moved from position ${position.old_position}`\n                  : 'In queue'\n                }\n              </span>\n              <span>\n                Est. wait: {formatWaitTime(position.estimated_wait_time)}\n              </span>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {lastUpdate && (\n        <div className=\"text-xs text-gray-500 text-center\">\n          Last updated: {lastUpdate.toLocaleTimeString()}\n        </div>\n      )}\n    </div>\n  );\n}\n"],
      names: ["QueueStatus", "userId", "connected", "subscribe", "unsubscribe", "useWebSocketContext", "queuePositions", "setQueuePositions", "useState", "Map", "lastUpdate", "setLastUpdate", "useEffect", "handleQueueUpdate", "data", "prev", "updated", "set", "queue_type", "Date", "handleQueueStatusChange", "formatWaitTime", "seconds", "Math", "floor", "getQueueDisplayName", "queueType", "replace", "l", "toUpperCase", "div", "className", "span", "size", "h3", "Array", "from", "entries", "map", "position", "h4", "new_position", "total_queue_size", "style", "width", "max", "old_position", "estimated_wait_time", "toLocaleTimeString"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "26de49b7348dc5f09602314ecc69c24ee93eafca"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2pe8n2csnc = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2pe8n2csnc();
cov_2pe8n2csnc().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2pe8n2csnc().s[1]++;
Object.defineProperty(exports, "QueueStatus", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2pe8n2csnc().f[0]++;
    cov_2pe8n2csnc().s[2]++;
    return QueueStatus;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2pe8n2csnc().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2pe8n2csnc().s[4]++, _interop_require_wildcard(require("react")));
const _WebSocketProvider =
/* istanbul ignore next */
(cov_2pe8n2csnc().s[5]++, require("./WebSocketProvider"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_2pe8n2csnc().f[1]++;
  cov_2pe8n2csnc().s[6]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_2pe8n2csnc().b[0][0]++;
    cov_2pe8n2csnc().s[7]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_2pe8n2csnc().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[8]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[9]++, new WeakMap());
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[10]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().f[2]++;
    cov_2pe8n2csnc().s[11]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_2pe8n2csnc().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_2pe8n2csnc().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_2pe8n2csnc().f[3]++;
  cov_2pe8n2csnc().s[12]++;
  if (
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().b[2][0]++;
    cov_2pe8n2csnc().s[13]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_2pe8n2csnc().b[2][1]++;
  }
  cov_2pe8n2csnc().s[14]++;
  if (
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().b[4][0]++;
    cov_2pe8n2csnc().s[15]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_2pe8n2csnc().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[16]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().b[6][0]++;
    cov_2pe8n2csnc().s[18]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_2pe8n2csnc().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[19]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[20]++,
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_2pe8n2csnc().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[21]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().s[22]++;
    if (
    /* istanbul ignore next */
    (cov_2pe8n2csnc().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_2pe8n2csnc().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_2pe8n2csnc().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_2pe8n2csnc().s[23]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_2pe8n2csnc().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_2pe8n2csnc().b[11][1]++, null));
      /* istanbul ignore next */
      cov_2pe8n2csnc().s[24]++;
      if (
      /* istanbul ignore next */
      (cov_2pe8n2csnc().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_2pe8n2csnc().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_2pe8n2csnc().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_2pe8n2csnc().b[12][0]++;
        cov_2pe8n2csnc().s[25]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_2pe8n2csnc().b[12][1]++;
        cov_2pe8n2csnc().s[26]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_2pe8n2csnc().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[27]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[28]++;
  if (cache) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().b[14][0]++;
    cov_2pe8n2csnc().s[29]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_2pe8n2csnc().b[14][1]++;
  }
  cov_2pe8n2csnc().s[30]++;
  return newObj;
}
function QueueStatus({
  userId
}) {
  /* istanbul ignore next */
  cov_2pe8n2csnc().f[4]++;
  const {
    connected,
    subscribe,
    unsubscribe
  } =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[31]++, (0, _WebSocketProvider.useWebSocketContext)());
  const [queuePositions, setQueuePositions] =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[32]++, (0, _react.useState)(new Map()));
  const [lastUpdate, setLastUpdate] =
  /* istanbul ignore next */
  (cov_2pe8n2csnc().s[33]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[34]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_2pe8n2csnc().f[5]++;
    cov_2pe8n2csnc().s[35]++;
    const handleQueueUpdate = data => {
      /* istanbul ignore next */
      cov_2pe8n2csnc().f[6]++;
      cov_2pe8n2csnc().s[36]++;
      setQueuePositions(prev => {
        /* istanbul ignore next */
        cov_2pe8n2csnc().f[7]++;
        const updated =
        /* istanbul ignore next */
        (cov_2pe8n2csnc().s[37]++, new Map(prev));
        /* istanbul ignore next */
        cov_2pe8n2csnc().s[38]++;
        updated.set(data.queue_type, data);
        /* istanbul ignore next */
        cov_2pe8n2csnc().s[39]++;
        return updated;
      });
      /* istanbul ignore next */
      cov_2pe8n2csnc().s[40]++;
      setLastUpdate(new Date());
    };
    /* istanbul ignore next */
    cov_2pe8n2csnc().s[41]++;
    const handleQueueStatusChange = data => {
      /* istanbul ignore next */
      cov_2pe8n2csnc().f[8]++;
      cov_2pe8n2csnc().s[42]++;
      // Handle general queue status changes
      setLastUpdate(new Date());
    };
    /* istanbul ignore next */
    cov_2pe8n2csnc().s[43]++;
    if (connected) {
      /* istanbul ignore next */
      cov_2pe8n2csnc().b[15][0]++;
      cov_2pe8n2csnc().s[44]++;
      subscribe('queue_position_update', handleQueueUpdate);
      /* istanbul ignore next */
      cov_2pe8n2csnc().s[45]++;
      subscribe('queue_status_change', handleQueueStatusChange);
    } else
    /* istanbul ignore next */
    {
      cov_2pe8n2csnc().b[15][1]++;
    }
    cov_2pe8n2csnc().s[46]++;
    return () => {
      /* istanbul ignore next */
      cov_2pe8n2csnc().f[9]++;
      cov_2pe8n2csnc().s[47]++;
      unsubscribe('queue_position_update', handleQueueUpdate);
      /* istanbul ignore next */
      cov_2pe8n2csnc().s[48]++;
      unsubscribe('queue_status_change', handleQueueStatusChange);
    };
  }, [connected, subscribe, unsubscribe]);
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[49]++;
  const formatWaitTime = seconds => {
    /* istanbul ignore next */
    cov_2pe8n2csnc().f[10]++;
    cov_2pe8n2csnc().s[50]++;
    if (!seconds) {
      /* istanbul ignore next */
      cov_2pe8n2csnc().b[16][0]++;
      cov_2pe8n2csnc().s[51]++;
      return 'Unknown';
    } else
    /* istanbul ignore next */
    {
      cov_2pe8n2csnc().b[16][1]++;
    }
    cov_2pe8n2csnc().s[52]++;
    if (seconds < 60) {
      /* istanbul ignore next */
      cov_2pe8n2csnc().b[17][0]++;
      cov_2pe8n2csnc().s[53]++;
      return `${seconds}s`;
    } else
    /* istanbul ignore next */
    {
      cov_2pe8n2csnc().b[17][1]++;
    }
    cov_2pe8n2csnc().s[54]++;
    if (seconds < 3600) {
      /* istanbul ignore next */
      cov_2pe8n2csnc().b[18][0]++;
      cov_2pe8n2csnc().s[55]++;
      return `${Math.floor(seconds / 60)}m`;
    } else
    /* istanbul ignore next */
    {
      cov_2pe8n2csnc().b[18][1]++;
    }
    cov_2pe8n2csnc().s[56]++;
    return `${Math.floor(seconds / 3600)}h ${Math.floor(seconds % 3600 / 60)}m`;
  };
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[57]++;
  const getQueueDisplayName = queueType => {
    /* istanbul ignore next */
    cov_2pe8n2csnc().f[11]++;
    cov_2pe8n2csnc().s[58]++;
    switch (queueType) {
      case 'topic_creation':
        /* istanbul ignore next */
        cov_2pe8n2csnc().b[19][0]++;
        cov_2pe8n2csnc().s[59]++;
        return 'Topic Creation';
      case 'post_moderation':
        /* istanbul ignore next */
        cov_2pe8n2csnc().b[19][1]++;
        cov_2pe8n2csnc().s[60]++;
        return 'Post Moderation';
      case 'private_message':
        /* istanbul ignore next */
        cov_2pe8n2csnc().b[19][2]++;
        cov_2pe8n2csnc().s[61]++;
        return 'Message Moderation';
      default:
        /* istanbul ignore next */
        cov_2pe8n2csnc().b[19][3]++;
        cov_2pe8n2csnc().s[62]++;
        return queueType.replace('_', ' ').replace(/\b\w/g, l => {
          /* istanbul ignore next */
          cov_2pe8n2csnc().f[12]++;
          cov_2pe8n2csnc().s[63]++;
          return l.toUpperCase();
        });
    }
  };
  /* istanbul ignore next */
  cov_2pe8n2csnc().s[64]++;
  if (!connected) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().b[20][0]++;
    cov_2pe8n2csnc().s[65]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-yellow-50 border border-yellow-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "w-2 h-2 bg-yellow-400 rounded-full mr-2"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-yellow-800",
          children: "Connecting to real-time updates..."
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_2pe8n2csnc().b[20][1]++;
  }
  cov_2pe8n2csnc().s[66]++;
  if (queuePositions.size === 0) {
    /* istanbul ignore next */
    cov_2pe8n2csnc().b[21][0]++;
    cov_2pe8n2csnc().s[67]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "bg-green-50 border border-green-200 rounded-lg p-4",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "w-2 h-2 bg-green-400 rounded-full mr-2"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
          className: "text-green-800",
          children: "No items in queue"
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_2pe8n2csnc().b[21][1]++;
  }
  cov_2pe8n2csnc().s[68]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-4",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-lg font-semibold",
        children: "Queue Status"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center text-sm text-gray-500",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "w-2 h-2 bg-green-400 rounded-full mr-2"
        }), "Live Updates"]
      })]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "space-y-3",
      children: Array.from(queuePositions.entries()).map(([queueType, position]) => {
        /* istanbul ignore next */
        cov_2pe8n2csnc().f[13]++;
        cov_2pe8n2csnc().s[69]++;
        return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "bg-white border border-gray-200 rounded-lg p-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between mb-2",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
              className: "font-medium",
              children: getQueueDisplayName(queueType)
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              className: "text-sm text-gray-500",
              children: ["Position ", position.new_position, " of ", position.total_queue_size]
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-full bg-gray-200 rounded-full h-2 mb-2",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "bg-blue-600 h-2 rounded-full transition-all duration-500",
              style: {
                width: `${Math.max(5, (1 - (position.new_position - 1) / position.total_queue_size) * 100)}%`
              }
            })
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex justify-between text-sm text-gray-600",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
              children:
              /* istanbul ignore next */
              (cov_2pe8n2csnc().b[23][0]++, position.old_position) &&
              /* istanbul ignore next */
              (cov_2pe8n2csnc().b[23][1]++, position.old_position !== position.new_position) ?
              /* istanbul ignore next */
              (cov_2pe8n2csnc().b[22][0]++, `Moved from position ${position.old_position}`) :
              /* istanbul ignore next */
              (cov_2pe8n2csnc().b[22][1]++, 'In queue')
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
              children: ["Est. wait: ", formatWaitTime(position.estimated_wait_time)]
            })]
          })]
        }, queueType);
      })
    }),
    /* istanbul ignore next */
    (cov_2pe8n2csnc().b[24][0]++, lastUpdate) &&
    /* istanbul ignore next */
    (cov_2pe8n2csnc().b[24][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-xs text-gray-500 text-center",
      children: ["Last updated: ", lastUpdate.toLocaleTimeString()]
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,