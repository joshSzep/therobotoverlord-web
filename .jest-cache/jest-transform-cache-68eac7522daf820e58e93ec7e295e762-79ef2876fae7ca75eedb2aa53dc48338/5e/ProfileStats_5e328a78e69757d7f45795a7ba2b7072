0a9580d81901f88133a5a331fdf8f9dc
'use client';
"use strict";

/* istanbul ignore next */
function cov_2amq40zzi2() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileStats.tsx";
  var hash = "4e31802e869bb9cd8f1f17299b8977abddce0bfa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileStats.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 28
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 18,
          column: 6
        }
      },
      "7": {
        start: {
          line: 21,
          column: 18
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "8": {
        start: {
          line: 31,
          column: 25
        },
        end: {
          line: 31,
          column: 111
        }
      },
      "9": {
        start: {
          line: 32,
          column: 22
        },
        end: {
          line: 81,
          column: 5
        }
      },
      "10": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 204,
          column: 7
        }
      },
      "11": {
        start: {
          line: 123,
          column: 81
        },
        end: {
          line: 139,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 15,
            column: 9
          },
          end: {
            line: 15,
            column: 33
          }
        },
        loc: {
          start: {
            line: 15,
            column: 39
          },
          end: {
            line: 19,
            column: 1
          }
        },
        line: 15
      },
      "2": {
        name: "ProfileStats",
        decl: {
          start: {
            line: 20,
            column: 9
          },
          end: {
            line: 20,
            column: 21
          }
        },
        loc: {
          start: {
            line: 20,
            column: 32
          },
          end: {
            line: 205,
            column: 1
          }
        },
        line: 20
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 123,
            column: 52
          },
          end: {
            line: 123,
            column: 53
          }
        },
        loc: {
          start: {
            line: 123,
            column: 81
          },
          end: {
            line: 139,
            column: 41
          }
        },
        line: 123
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 18,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 16,
            column: 35
          },
          end: {
            line: 16,
            column: 38
          }
        }, {
          start: {
            line: 16,
            column: 41
          },
          end: {
            line: 18,
            column: 5
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 11
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 32
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 21,
            column: 18
          },
          end: {
            line: 21,
            column: 28
          }
        }, {
          start: {
            line: 21,
            column: 32
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 21
      },
      "3": {
        loc: {
          start: {
            line: 31,
            column: 25
          },
          end: {
            line: 31,
            column: 111
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 49
          },
          end: {
            line: 31,
            column: 107
          }
        }, {
          start: {
            line: 31,
            column: 110
          },
          end: {
            line: 31,
            column: 111
          }
        }],
        line: 31
      },
      "4": {
        loc: {
          start: {
            line: 77,
            column: 19
          },
          end: {
            line: 77,
            column: 79
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 77,
            column: 41
          },
          end: {
            line: 77,
            column: 66
          }
        }, {
          start: {
            line: 77,
            column: 69
          },
          end: {
            line: 77,
            column: 79
          }
        }],
        line: 77
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileStats.tsx"],
      sourcesContent: ["'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { User } from '@/types/user';\n\ninterface ProfileStatsProps {\n  user: User;\n}\n\nexport function ProfileStats({ user }: ProfileStatsProps) {\n  const stats = user.stats || {\n    total_posts: 0,\n    approved_posts: 0,\n    rejected_posts: 0,\n    pending_posts: 0,\n    loyalty_score: 0,\n    reputation_score: 0,\n    badges_count: 0,\n    rank_position: undefined,\n  };\n\n  const approvalRate = stats.total_posts > 0 \n    ? Math.round((stats.approved_posts / stats.total_posts) * 100)\n    : 0;\n\n  const statItems = [\n    {\n      label: 'Total Posts',\n      value: stats.total_posts,\n      color: 'text-light-text',\n      description: 'All submissions to the Overlord',\n    },\n    {\n      label: 'Approved Posts',\n      value: stats.approved_posts,\n      color: 'text-approved-green',\n      description: 'Posts that pleased the Overlord',\n    },\n    {\n      label: 'Rejected Posts',\n      value: stats.rejected_posts,\n      color: 'text-rejected-red',\n      description: 'Posts that displeased the Overlord',\n    },\n    {\n      label: 'Pending Posts',\n      value: stats.pending_posts,\n      color: 'text-pending-yellow',\n      description: 'Awaiting Overlord judgment',\n    },\n    {\n      label: 'Loyalty Score',\n      value: stats.loyalty_score,\n      color: 'text-overlord-red',\n      description: 'Your dedication to the cause',\n    },\n    {\n      label: 'Reputation Score',\n      value: stats.reputation_score,\n      color: 'text-approved-green',\n      description: 'Community standing',\n    },\n    {\n      label: 'Badges Earned',\n      value: stats.badges_count,\n      color: 'text-pending-yellow',\n      description: 'Achievements unlocked',\n    },\n    {\n      label: 'Global Rank',\n      value: stats.rank_position ? `#${stats.rank_position}` : 'Unranked',\n      color: 'text-overlord-red',\n      description: 'Position in the hierarchy',\n    },\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Citizen Statistics</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-6\">\n          {/* Approval Rate Highlight */}\n          <div className=\"p-4 bg-gradient-to-r from-overlord-red/10 to-approved-green/10 rounded-lg border\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-light-text mb-1\">\n                {approvalRate}%\n              </div>\n              <div className=\"text-sm text-muted-light\">\n                Approval Rate\n              </div>\n              <div className=\"text-xs text-muted-light mt-1\">\n                {stats.approved_posts} of {stats.total_posts} posts approved\n              </div>\n            </div>\n          </div>\n\n          {/* Stats Grid */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            {statItems.map((stat, index) => (\n              <div key={index} className=\"text-center p-3 bg-muted/20 rounded-lg\">\n                <div className={`text-xl font-bold ${stat.color} mb-1`}>\n                  {stat.value}\n                </div>\n                <div className=\"text-xs font-medium text-light-text mb-1\">\n                  {stat.label}\n                </div>\n                <div className=\"text-xs text-muted-light\">\n                  {stat.description}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Progress Bars */}\n          <div className=\"space-y-3\">\n            <div>\n              <div className=\"flex justify-between text-xs text-muted-light mb-1\">\n                <span>Loyalty Progress</span>\n                <span>{stats.loyalty_score}/1000</span>\n              </div>\n              <div className=\"w-full bg-muted/30 rounded-full h-2\">\n                <div \n                  className=\"bg-overlord-red h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${Math.min((stats.loyalty_score / 1000) * 100, 100)}%` }}\n                ></div>\n              </div>\n            </div>\n\n            <div>\n              <div className=\"flex justify-between text-xs text-muted-light mb-1\">\n                <span>Reputation Progress</span>\n                <span>{stats.reputation_score}/500</span>\n              </div>\n              <div className=\"w-full bg-muted/30 rounded-full h-2\">\n                <div \n                  className=\"bg-approved-green h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${Math.min((stats.reputation_score / 500) * 100, 100)}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],
      names: ["ProfileStats", "user", "stats", "total_posts", "approved_posts", "rejected_posts", "pending_posts", "loyalty_score", "reputation_score", "badges_count", "rank_position", "undefined", "approvalRate", "Math", "round", "statItems", "label", "value", "color", "description", "Card", "CardHeader", "CardTitle", "CardContent", "div", "className", "map", "stat", "index", "span", "style", "width", "min"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "4e31802e869bb9cd8f1f17299b8977abddce0bfa"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2amq40zzi2 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2amq40zzi2();
cov_2amq40zzi2().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_2amq40zzi2().s[1]++;
Object.defineProperty(exports, "ProfileStats", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_2amq40zzi2().f[0]++;
    cov_2amq40zzi2().s[2]++;
    return ProfileStats;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_2amq40zzi2().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_2amq40zzi2().s[4]++, _interop_require_default(require("react")));
const _Card =
/* istanbul ignore next */
(cov_2amq40zzi2().s[5]++, require("../ui/Card"));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_2amq40zzi2().f[1]++;
  cov_2amq40zzi2().s[6]++;
  return /* istanbul ignore next */(cov_2amq40zzi2().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_2amq40zzi2().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_2amq40zzi2().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_2amq40zzi2().b[0][1]++, {
    default: obj
  });
}
function ProfileStats({
  user
}) {
  /* istanbul ignore next */
  cov_2amq40zzi2().f[2]++;
  const stats =
  /* istanbul ignore next */
  (cov_2amq40zzi2().s[7]++,
  /* istanbul ignore next */
  (cov_2amq40zzi2().b[2][0]++, user.stats) ||
  /* istanbul ignore next */
  (cov_2amq40zzi2().b[2][1]++, {
    total_posts: 0,
    approved_posts: 0,
    rejected_posts: 0,
    pending_posts: 0,
    loyalty_score: 0,
    reputation_score: 0,
    badges_count: 0,
    rank_position: undefined
  }));
  const approvalRate =
  /* istanbul ignore next */
  (cov_2amq40zzi2().s[8]++, stats.total_posts > 0 ?
  /* istanbul ignore next */
  (cov_2amq40zzi2().b[3][0]++, Math.round(stats.approved_posts / stats.total_posts * 100)) :
  /* istanbul ignore next */
  (cov_2amq40zzi2().b[3][1]++, 0));
  const statItems =
  /* istanbul ignore next */
  (cov_2amq40zzi2().s[9]++, [{
    label: 'Total Posts',
    value: stats.total_posts,
    color: 'text-light-text',
    description: 'All submissions to the Overlord'
  }, {
    label: 'Approved Posts',
    value: stats.approved_posts,
    color: 'text-approved-green',
    description: 'Posts that pleased the Overlord'
  }, {
    label: 'Rejected Posts',
    value: stats.rejected_posts,
    color: 'text-rejected-red',
    description: 'Posts that displeased the Overlord'
  }, {
    label: 'Pending Posts',
    value: stats.pending_posts,
    color: 'text-pending-yellow',
    description: 'Awaiting Overlord judgment'
  }, {
    label: 'Loyalty Score',
    value: stats.loyalty_score,
    color: 'text-overlord-red',
    description: 'Your dedication to the cause'
  }, {
    label: 'Reputation Score',
    value: stats.reputation_score,
    color: 'text-approved-green',
    description: 'Community standing'
  }, {
    label: 'Badges Earned',
    value: stats.badges_count,
    color: 'text-pending-yellow',
    description: 'Achievements unlocked'
  }, {
    label: 'Global Rank',
    value: stats.rank_position ?
    /* istanbul ignore next */
    (cov_2amq40zzi2().b[4][0]++, `#${stats.rank_position}`) :
    /* istanbul ignore next */
    (cov_2amq40zzi2().b[4][1]++, 'Unranked'),
    color: 'text-overlord-red',
    description: 'Position in the hierarchy'
  }]);
  /* istanbul ignore next */
  cov_2amq40zzi2().s[10]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardTitle, {
        children: "Citizen Statistics"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "space-y-6",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "p-4 bg-gradient-to-r from-overlord-red/10 to-approved-green/10 rounded-lg border",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "text-center",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-3xl font-bold text-light-text mb-1",
              children: [approvalRate, "%"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-sm text-muted-light",
              children: "Approval Rate"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-xs text-muted-light mt-1",
              children: [stats.approved_posts, " of ", stats.total_posts, " posts approved"]
            })]
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "grid grid-cols-2 gap-4",
          children: statItems.map((stat, index) => {
            /* istanbul ignore next */
            cov_2amq40zzi2().f[3]++;
            cov_2amq40zzi2().s[11]++;
            return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "text-center p-3 bg-muted/20 rounded-lg",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: `text-xl font-bold ${stat.color} mb-1`,
                children: stat.value
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs font-medium text-light-text mb-1",
                children: stat.label
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "text-xs text-muted-light",
                children: stat.description
              })]
            }, index);
          })
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "space-y-3",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-xs text-muted-light mb-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Loyalty Progress"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: [stats.loyalty_score, "/1000"]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-full bg-muted/30 rounded-full h-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "bg-overlord-red h-2 rounded-full transition-all duration-300",
                style: {
                  width: `${Math.min(stats.loyalty_score / 1000 * 100, 100)}%`
                }
              })
            })]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex justify-between text-xs text-muted-light mb-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                children: "Reputation Progress"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                children: [stats.reputation_score, "/500"]
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "w-full bg-muted/30 rounded-full h-2",
              children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "bg-approved-green h-2 rounded-full transition-all duration-300",
                style: {
                  width: `${Math.min(stats.reputation_score / 500 * 100, 100)}%`
                }
              })
            })]
          })]
        })]
      })
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,