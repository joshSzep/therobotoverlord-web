{"version":3,"names":["ProfileStats","user","cov_2amq40zzi2","f","stats","s","b","total_posts","approved_posts","rejected_posts","pending_posts","loyalty_score","reputation_score","badges_count","rank_position","undefined","approvalRate","Math","round","statItems","label","value","color","description","_jsxruntime","jsxs","_Card","Card","jsx","CardHeader","CardTitle","CardContent","className","map","stat","index","style","width","min"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileStats.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { User } from '@/types/user';\n\ninterface ProfileStatsProps {\n  user: User;\n}\n\nexport function ProfileStats({ user }: ProfileStatsProps) {\n  const stats = user.stats || {\n    total_posts: 0,\n    approved_posts: 0,\n    rejected_posts: 0,\n    pending_posts: 0,\n    loyalty_score: 0,\n    reputation_score: 0,\n    badges_count: 0,\n    rank_position: undefined,\n  };\n\n  const approvalRate = stats.total_posts > 0 \n    ? Math.round((stats.approved_posts / stats.total_posts) * 100)\n    : 0;\n\n  const statItems = [\n    {\n      label: 'Total Posts',\n      value: stats.total_posts,\n      color: 'text-light-text',\n      description: 'All submissions to the Overlord',\n    },\n    {\n      label: 'Approved Posts',\n      value: stats.approved_posts,\n      color: 'text-approved-green',\n      description: 'Posts that pleased the Overlord',\n    },\n    {\n      label: 'Rejected Posts',\n      value: stats.rejected_posts,\n      color: 'text-rejected-red',\n      description: 'Posts that displeased the Overlord',\n    },\n    {\n      label: 'Pending Posts',\n      value: stats.pending_posts,\n      color: 'text-pending-yellow',\n      description: 'Awaiting Overlord judgment',\n    },\n    {\n      label: 'Loyalty Score',\n      value: stats.loyalty_score,\n      color: 'text-overlord-red',\n      description: 'Your dedication to the cause',\n    },\n    {\n      label: 'Reputation Score',\n      value: stats.reputation_score,\n      color: 'text-approved-green',\n      description: 'Community standing',\n    },\n    {\n      label: 'Badges Earned',\n      value: stats.badges_count,\n      color: 'text-pending-yellow',\n      description: 'Achievements unlocked',\n    },\n    {\n      label: 'Global Rank',\n      value: stats.rank_position ? `#${stats.rank_position}` : 'Unranked',\n      color: 'text-overlord-red',\n      description: 'Position in the hierarchy',\n    },\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Citizen Statistics</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"space-y-6\">\n          {/* Approval Rate Highlight */}\n          <div className=\"p-4 bg-gradient-to-r from-overlord-red/10 to-approved-green/10 rounded-lg border\">\n            <div className=\"text-center\">\n              <div className=\"text-3xl font-bold text-light-text mb-1\">\n                {approvalRate}%\n              </div>\n              <div className=\"text-sm text-muted-light\">\n                Approval Rate\n              </div>\n              <div className=\"text-xs text-muted-light mt-1\">\n                {stats.approved_posts} of {stats.total_posts} posts approved\n              </div>\n            </div>\n          </div>\n\n          {/* Stats Grid */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            {statItems.map((stat, index) => (\n              <div key={index} className=\"text-center p-3 bg-muted/20 rounded-lg\">\n                <div className={`text-xl font-bold ${stat.color} mb-1`}>\n                  {stat.value}\n                </div>\n                <div className=\"text-xs font-medium text-light-text mb-1\">\n                  {stat.label}\n                </div>\n                <div className=\"text-xs text-muted-light\">\n                  {stat.description}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Progress Bars */}\n          <div className=\"space-y-3\">\n            <div>\n              <div className=\"flex justify-between text-xs text-muted-light mb-1\">\n                <span>Loyalty Progress</span>\n                <span>{stats.loyalty_score}/1000</span>\n              </div>\n              <div className=\"w-full bg-muted/30 rounded-full h-2\">\n                <div \n                  className=\"bg-overlord-red h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${Math.min((stats.loyalty_score / 1000) * 100, 100)}%` }}\n                ></div>\n              </div>\n            </div>\n\n            <div>\n              <div className=\"flex justify-between text-xs text-muted-light mb-1\">\n                <span>Reputation Progress</span>\n                <span>{stats.reputation_score}/500</span>\n              </div>\n              <div className=\"w-full bg-muted/30 rounded-full h-2\">\n                <div \n                  className=\"bg-approved-green h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${Math.min((stats.reputation_score / 500) * 100, 100)}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"mappings":"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","ignoreList":[]}