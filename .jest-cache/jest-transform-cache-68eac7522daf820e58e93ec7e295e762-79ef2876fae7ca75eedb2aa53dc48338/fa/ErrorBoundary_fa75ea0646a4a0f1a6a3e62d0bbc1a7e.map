{"version":3,"names":["cov_pf74df7bk","actualCoverage","s","AsyncErrorBoundary","f","ChatErrorBoundary","ComponentErrorBoundary","ErrorBoundary","FormErrorBoundary","PageErrorBoundary","reportError","setupGlobalErrorHandlers","useErrorHandler","withErrorBoundary","_react","Component","constructor","props","resetTimeoutId","resetErrorBoundary","b","clearTimeout","setState","hasError","error","errorInfo","handleRetry","state","getDerivedStateFromError","componentDidCatch","console","onError","window","componentDidUpdate","prevProps","resetOnPropsChange","resetKeys","hasResetKeyChanged","some","resetKey","idx","componentWillUnmount","render","children","fallback","showDetails","_jsxruntime","jsx","className","jsxs","_Card","Card","CardHeader","CardTitle","CardContent","message","stack","componentStack","_Button","Button","variant","onClick","location","reload","errorBoundaryProps","WrappedComponent","displayName","name","process","env","NODE_ENV","_EmptyState","ErrorState","title","description","onRetry","ConnectionErrorState","size","onReset","addEventListener","event","reason","Error","preventDefault","context","trace"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/ErrorBoundary.tsx"],"sourcesContent":["/**\n * Error Boundary Components for The Robot Overlord\n * Catches JavaScript errors in component trees and displays fallback UI\n */\n\n'use client';\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\nimport { Button } from './Button';\nimport { Card, CardContent, CardHeader, CardTitle } from './Card';\nimport { ErrorState, ConnectionErrorState } from './EmptyState';\n\ninterface ErrorBoundaryState {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\ninterface ErrorBoundaryProps {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n  showDetails?: boolean;\n  resetOnPropsChange?: boolean;\n  resetKeys?: Array<string | number>;\n}\n\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  private resetTimeoutId: number | null = null;\n\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): Partial<ErrorBoundaryState> {\n    return {\n      hasError: true,\n      error,\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('ErrorBoundary caught an error:', error, errorInfo);\n    \n    this.setState({\n      error,\n      errorInfo,\n    });\n\n    // Call the onError callback if provided\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n\n    // Report error to monitoring service (if available)\n    if (typeof window !== 'undefined' && (window as any).reportError) {\n      (window as any).reportError(error);\n    }\n  }\n\n  componentDidUpdate(prevProps: ErrorBoundaryProps) {\n    const { resetOnPropsChange, resetKeys } = this.props;\n    const { hasError } = this.state;\n\n    // Reset error boundary when resetKeys change\n    if (hasError && resetKeys && prevProps.resetKeys) {\n      const hasResetKeyChanged = resetKeys.some(\n        (resetKey, idx) => prevProps.resetKeys![idx] !== resetKey\n      );\n      \n      if (hasResetKeyChanged) {\n        this.resetErrorBoundary();\n      }\n    }\n\n    // Reset error boundary when any props change (if enabled)\n    if (hasError && resetOnPropsChange && prevProps !== this.props) {\n      this.resetErrorBoundary();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.resetTimeoutId) {\n      clearTimeout(this.resetTimeoutId);\n    }\n  }\n\n  resetErrorBoundary = () => {\n    if (this.resetTimeoutId) {\n      clearTimeout(this.resetTimeoutId);\n    }\n\n    this.setState({\n      hasError: false,\n      error: null,\n      errorInfo: null,\n    });\n  };\n\n  handleRetry = () => {\n    this.resetErrorBoundary();\n  };\n\n  render() {\n    const { hasError, error, errorInfo } = this.state;\n    const { children, fallback, showDetails = false } = this.props;\n\n    if (hasError) {\n      // Use custom fallback if provided\n      if (fallback) {\n        return fallback;\n      }\n\n      // Default error UI\n      return (\n        <div className=\"min-h-[400px] flex items-center justify-center p-6\">\n          <Card className=\"max-w-lg w-full\">\n            <CardHeader>\n              <CardTitle className=\"flex items-center space-x-2 text-rejected-red\">\n                <span className=\"text-2xl\">⚠️</span>\n                <span>Something went wrong</span>\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <p className=\"text-muted-light\">\n                An unexpected error occurred. This has been reported to our team.\n              </p>\n              \n              {showDetails && error && (\n                <div className=\"bg-muted/20 p-3 rounded-md\">\n                  <details>\n                    <summary className=\"cursor-pointer text-sm font-medium text-light-text mb-2\">\n                      Error Details\n                    </summary>\n                    <div className=\"text-xs text-muted-light font-mono space-y-2\">\n                      <div>\n                        <strong>Error:</strong> {error.message}\n                      </div>\n                      {error.stack && (\n                        <div>\n                          <strong>Stack:</strong>\n                          <pre className=\"whitespace-pre-wrap mt-1\">{error.stack}</pre>\n                        </div>\n                      )}\n                      {errorInfo && errorInfo.componentStack && (\n                        <div>\n                          <strong>Component Stack:</strong>\n                          <pre className=\"whitespace-pre-wrap mt-1\">{errorInfo.componentStack}</pre>\n                        </div>\n                      )}\n                    </div>\n                  </details>\n                </div>\n              )}\n              \n              <div className=\"flex space-x-3\">\n                <Button variant=\"primary\" onClick={this.handleRetry}>\n                  Try Again\n                </Button>\n                <Button \n                  variant=\"ghost\" \n                  onClick={() => window.location.reload()}\n                >\n                  Reload Page\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    }\n\n    return children;\n  }\n}\n\n// Hook-based error boundary for functional components\nexport function useErrorHandler() {\n  return (error: Error, errorInfo?: ErrorInfo) => {\n    console.error('Error caught by useErrorHandler:', error, errorInfo);\n    \n    // Report to monitoring service\n    if (typeof window !== 'undefined' && (window as any).reportError) {\n      (window as any).reportError(error);\n    }\n  };\n}\n\n// Higher-order component for wrapping components with error boundary\nexport function withErrorBoundary<P extends object>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps?: Omit<ErrorBoundaryProps, 'children'>\n) {\n  const WrappedComponent = (props: P) => (\n    <ErrorBoundary {...errorBoundaryProps}>\n      <Component {...props} />\n    </ErrorBoundary>\n  );\n\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name})`;\n  \n  return WrappedComponent;\n}\n\n// Specific error boundaries for different contexts\nexport function PageErrorBoundary({ children }: { children: ReactNode }) {\n  return (\n    <ErrorBoundary\n      showDetails={process.env.NODE_ENV === 'development'}\n      fallback={\n        <div className=\"min-h-screen flex items-center justify-center\">\n          <ErrorState\n            title=\"Page Error\"\n            description=\"This page encountered an error and couldn't be displayed properly.\"\n            onRetry={() => window.location.reload()}\n          />\n        </div>\n      }\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function ComponentErrorBoundary({ children }: { children: ReactNode }) {\n  return (\n    <ErrorBoundary\n      fallback={\n        <div className=\"p-4 border border-rejected-red/20 rounded-lg bg-rejected-red/5\">\n          <div className=\"flex items-center space-x-2 text-rejected-red mb-2\">\n            <span>⚠️</span>\n            <span className=\"font-medium\">Component Error</span>\n          </div>\n          <p className=\"text-sm text-muted-light\">\n            This component failed to load properly.\n          </p>\n        </div>\n      }\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function AsyncErrorBoundary({ \n  children, \n  onRetry \n}: { \n  children: ReactNode; \n  onRetry?: () => void; \n}) {\n  return (\n    <ErrorBoundary\n      fallback={\n        <ConnectionErrorState onRetry={onRetry} />\n      }\n      resetOnPropsChange={true}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function FormErrorBoundary({ children }: { children: ReactNode }) {\n  return (\n    <ErrorBoundary\n      fallback={\n        <div className=\"p-4 border border-rejected-red/20 rounded-lg bg-rejected-red/5\">\n          <div className=\"flex items-center space-x-2 text-rejected-red mb-2\">\n            <span>⚠️</span>\n            <span className=\"font-medium\">Form Error</span>\n          </div>\n          <p className=\"text-sm text-muted-light mb-3\">\n            The form encountered an error. Please refresh the page and try again.\n          </p>\n          <Button \n            variant=\"secondary\" \n            size=\"sm\"\n            onClick={() => window.location.reload()}\n          >\n            Refresh Page\n          </Button>\n        </div>\n      }\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\nexport function ChatErrorBoundary({ \n  children, \n  onReset \n}: { \n  children: ReactNode; \n  onReset?: () => void; \n}) {\n  return (\n    <ErrorBoundary\n      fallback={\n        <div className=\"p-4 text-center\">\n          <div className=\"text-4xl mb-2\">🤖</div>\n          <h3 className=\"font-bold text-light-text mb-2\">Chat Error</h3>\n          <p className=\"text-sm text-muted-light mb-4\">\n            The chat system encountered an error. Try reconnecting.\n          </p>\n          <Button variant=\"primary\" size=\"sm\" onClick={onReset}>\n            Reconnect Chat\n          </Button>\n        </div>\n      }\n      resetOnPropsChange={true}\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}\n\n// Global error handler for unhandled promise rejections\nexport function setupGlobalErrorHandlers() {\n  if (typeof window !== 'undefined') {\n    // Handle unhandled promise rejections\n    window.addEventListener('unhandledrejection', (event) => {\n      console.error('Unhandled promise rejection:', event.reason);\n      \n      // Report to monitoring service\n      if ((window as any).reportError) {\n        (window as any).reportError(new Error(`Unhandled Promise Rejection: ${event.reason}`));\n      }\n      \n      // Prevent the default browser behavior\n      event.preventDefault();\n    });\n\n    // Handle global errors\n    window.addEventListener('error', (event) => {\n      console.error('Global error:', event.error);\n      \n      // Report to monitoring service\n      if ((window as any).reportError) {\n        (window as any).reportError(event.error);\n      }\n    });\n  }\n}\n\n// Error reporting utility\nexport function reportError(error: Error, context?: string) {\n  console.error(`Error in ${context || 'unknown context'}:`, error);\n  \n  // Report to monitoring service\n  if (typeof window !== 'undefined' && (window as any).reportError) {\n    (window as any).reportError(error);\n  }\n  \n  // In development, you might want to show more details\n  if (process.env.NODE_ENV === 'development') {\n    console.trace('Error trace:', error);\n  }\n}\n"],"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","ignoreList":[]}