{"version":3,"names":["cov_6r3ayvska","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","s","f","b","inputSourceMap","version","sources","sourcesContent","names","mappings","_coverageSchema","coverage","actualCoverage","AuthService","authService","_BaseService","BaseService","constructor","login","credentials","post","register","data","logout","refreshTokens","refreshToken","getCurrentUser","get","updateProfile","patch","changePassword","requestPasswordReset","email","resetPassword","verifyEmail","token","resendVerification","googleLogin","getGoogleAuthUrl","redirectUrl","params","undefined","deleteAccount","password","delete","updateUserRole","userId","role","updateUserStatus","status","reason","getSessions","revokeSession","sessionId","revokeAllSessions","enableTwoFactor","verifyTwoFactor","disableTwoFactor","generateBackupCodes"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/AuthService.ts"],"sourcesContent":["/**\n * Authentication service for The Robot Overlord\n * Handles user authentication, registration, and session management\n */\n\nimport { BaseService } from './BaseService';\nimport { User, AuthTokens, UserRole, UserStatus } from '@/types/user';\nimport { ApiResponse } from '@/types/api';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterData {\n  email: string;\n  password: string;\n  username: string;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface ResetPasswordData {\n  token: string;\n  newPassword: string;\n}\n\nexport interface ChangePasswordData {\n  currentPassword: string;\n  newPassword: string;\n}\n\nexport interface GoogleAuthData {\n  token: string;\n  redirectUrl?: string;\n}\n\nexport class AuthService extends BaseService {\n  constructor() {\n    super('/auth');\n  }\n\n  /**\n   * Login with email and password\n   */\n  async login(credentials: LoginCredentials): Promise<ApiResponse<{ user: User; tokens: AuthTokens }>> {\n    return this.post('/login', credentials);\n  }\n\n  /**\n   * Register new user account\n   */\n  async register(data: RegisterData): Promise<ApiResponse<{ user: User; tokens: AuthTokens }>> {\n    return this.post('/register', data);\n  }\n\n  /**\n   * Logout current user\n   */\n  async logout(): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/logout');\n  }\n\n  /**\n   * Refresh authentication tokens\n   */\n  async refreshTokens(refreshToken: string): Promise<ApiResponse<AuthTokens>> {\n    return this.post('/refresh', { refreshToken });\n  }\n\n  /**\n   * Get current user profile\n   */\n  async getCurrentUser(): Promise<ApiResponse<User>> {\n    return this.get('/me');\n  }\n\n  /**\n   * Update current user profile\n   */\n  async updateProfile(data: Partial<User>): Promise<ApiResponse<User>> {\n    return this.patch('/me', data);\n  }\n\n  /**\n   * Change user password\n   */\n  async changePassword(data: ChangePasswordData): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/change-password', data);\n  }\n\n  /**\n   * Request password reset\n   */\n  async requestPasswordReset(email: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/forgot-password', { email });\n  }\n\n  /**\n   * Reset password with token\n   */\n  async resetPassword(data: ResetPasswordData): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/reset-password', data);\n  }\n\n  /**\n   * Verify email address\n   */\n  async verifyEmail(token: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/verify-email', { token });\n  }\n\n  /**\n   * Resend email verification\n   */\n  async resendVerification(): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/resend-verification');\n  }\n\n  /**\n   * Google OAuth login\n   */\n  async googleLogin(data: GoogleAuthData): Promise<ApiResponse<{ user: User; tokens: AuthTokens }>> {\n    return this.post('/google', data);\n  }\n\n  /**\n   * Get Google OAuth URL\n   */\n  async getGoogleAuthUrl(redirectUrl?: string): Promise<ApiResponse<{ url: string }>> {\n    const params = redirectUrl ? { redirectUrl } : undefined;\n    return this.get('/google/url', params);\n  }\n\n  /**\n   * Delete user account\n   */\n  async deleteAccount(password: string): Promise<ApiResponse<{ message: string }>> {\n    return this.delete('/me', { data: { password } });\n  }\n\n  /**\n   * Update user role (admin only)\n   */\n  async updateUserRole(userId: string, role: UserRole): Promise<ApiResponse<User>> {\n    return this.patch(`/users/${userId}/role`, { role });\n  }\n\n  /**\n   * Update user status (admin/moderator only)\n   */\n  async updateUserStatus(userId: string, status: UserStatus, reason?: string): Promise<ApiResponse<User>> {\n    return this.patch(`/users/${userId}/status`, { status, reason });\n  }\n\n  /**\n   * Get user sessions\n   */\n  async getSessions(): Promise<ApiResponse<Array<{\n    id: string;\n    deviceInfo: string;\n    ipAddress: string;\n    lastActive: string;\n    isCurrent: boolean;\n  }>>> {\n    return this.get('/sessions');\n  }\n\n  /**\n   * Revoke user session\n   */\n  async revokeSession(sessionId: string): Promise<ApiResponse<{ message: string }>> {\n    return this.delete(`/sessions/${sessionId}`);\n  }\n\n  /**\n   * Revoke all sessions except current\n   */\n  async revokeAllSessions(): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/sessions/revoke-all');\n  }\n\n  /**\n   * Enable two-factor authentication\n   */\n  async enableTwoFactor(): Promise<ApiResponse<{ qrCode: string; secret: string }>> {\n    return this.post('/2fa/enable');\n  }\n\n  /**\n   * Verify and activate two-factor authentication\n   */\n  async verifyTwoFactor(token: string): Promise<ApiResponse<{ backupCodes: string[] }>> {\n    return this.post('/2fa/verify', { token });\n  }\n\n  /**\n   * Disable two-factor authentication\n   */\n  async disableTwoFactor(token: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/2fa/disable', { token });\n  }\n\n  /**\n   * Generate new backup codes\n   */\n  async generateBackupCodes(): Promise<ApiResponse<{ backupCodes: string[] }>> {\n    return this.post('/2fa/backup-codes');\n  }\n}\n\n// Export singleton instance\nexport const authService = new AuthService();\n"],"mappings":"AAAA;;;GAGC;;AAAA;AAAA,SAAAA,cAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;IAAA;IAAAE,KAAA;MAAA;QAAAC,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;MAAA;QAAAI,IAAA;QAAAC,IAAA;UAAAN,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAK,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAO,SAAA;MAAA;QAAAD,GAAA;UAAAP,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAO,IAAA;QAAAC,SAAA;UAAAV,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;UAAAF,KAAA;YAAAC,IAAA;YAAAC,MAAA;UAAA;UAAAC,GAAA;YAAAF,IAAA;YAAAC,MAAA;UAAA;QAAA;QAAAD,IAAA;MAAA;IAAA;IAAAU,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;MAAA;IAAA;IAAAC,CAAA;MAAA;IAAA;IAAAC,cAAA;MAAAC,OAAA;MAAAC,OAAA;MAAAC,cAAA;MAAAC,KAAA;MAAAC,QAAA;IAAA;IAAAC,eAAA;IAAA1B,IAAA;EAAA;EAAA,IAAA2B,QAAA,GAAA1B,MAAA,CAAAE,GAAA,MAAAF,MAAA,CAAAE,GAAA;EAAA,KAAAwB,QAAA,CAAA5B,IAAA,KAAA4B,QAAA,CAAA5B,IAAA,EAAAC,IAAA,KAAAA,IAAA;IAAA2B,QAAA,CAAA5B,IAAA,IAAAK,YAAA;EAAA;EAAA,IAAAwB,cAAA,GAAAD,QAAA,CAAA5B,IAAA;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAkCY8B,YAAA;IAAA;IAAA/B,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;WAAAY,WAAA;;MA+KAC,YAAA;IAAA;IAAAhC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;WAAAa,WAAA;;;;;iCA/Me;AAgCrB,MAAMD,WAAA;AAAA;AAAA,CAAoBE,YAAA,CAAAC,WAAW;EAC1CC,YAAA,EAAc;IAAA;IAAAnC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACZ,KAAK,CAAC;EACR;EAEA;;;EAGA,MAAMiB,MAAMC,WAA6B,EAA4D;IAAA;IAAArC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACnG,OAAO,IAAI,CAACmB,IAAI,CAAC,UAAUD,WAAA;EAC7B;EAEA;;;EAGA,MAAME,SAASC,IAAkB,EAA4D;IAAA;IAAAxC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAC3F,OAAO,IAAI,CAACmB,IAAI,CAAC,aAAaE,IAAA;EAChC;EAEA;;;EAGA,MAAMC,OAAA,EAAoD;IAAA;IAAAzC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACxD,OAAO,IAAI,CAACmB,IAAI,CAAC;EACnB;EAEA;;;EAGA,MAAMI,cAAcC,YAAoB,EAAoC;IAAA;IAAA3C,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAC1E,OAAO,IAAI,CAACmB,IAAI,CAAC,YAAY;MAAEK;IAAa;EAC9C;EAEA;;;EAGA,MAAMC,eAAA,EAA6C;IAAA;IAAA5C,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACjD,OAAO,IAAI,CAAC0B,GAAG,CAAC;EAClB;EAEA;;;EAGA,MAAMC,cAAcN,IAAmB,EAA8B;IAAA;IAAAxC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACnE,OAAO,IAAI,CAAC4B,KAAK,CAAC,OAAOP,IAAA;EAC3B;EAEA;;;EAGA,MAAMQ,eAAeR,IAAwB,EAA6C;IAAA;IAAAxC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACxF,OAAO,IAAI,CAACmB,IAAI,CAAC,oBAAoBE,IAAA;EACvC;EAEA;;;EAGA,MAAMS,qBAAqBC,KAAa,EAA6C;IAAA;IAAAlD,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACnF,OAAO,IAAI,CAACmB,IAAI,CAAC,oBAAoB;MAAEY;IAAM;EAC/C;EAEA;;;EAGA,MAAMC,cAAcX,IAAuB,EAA6C;IAAA;IAAAxC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACtF,OAAO,IAAI,CAACmB,IAAI,CAAC,mBAAmBE,IAAA;EACtC;EAEA;;;EAGA,MAAMY,YAAYC,KAAa,EAA6C;IAAA;IAAArD,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAC1E,OAAO,IAAI,CAACmB,IAAI,CAAC,iBAAiB;MAAEe;IAAM;EAC5C;EAEA;;;EAGA,MAAMC,mBAAA,EAAgE;IAAA;IAAAtD,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACpE,OAAO,IAAI,CAACmB,IAAI,CAAC;EACnB;EAEA;;;EAGA,MAAMiB,YAAYf,IAAoB,EAA4D;IAAA;IAAAxC,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAChG,OAAO,IAAI,CAACmB,IAAI,CAAC,WAAWE,IAAA;EAC9B;EAEA;;;EAGA,MAAMgB,iBAAiBC,WAAoB,EAAyC;IAAA;IAAAzD,aAAA,GAAAoB,CAAA;IAClF,MAAMsC,MAAA;IAAA;IAAA,CAAA1D,aAAA,GAAAmB,CAAA,QAASsC,WAAA;IAAA;IAAA,CAAAzD,aAAA,GAAAqB,CAAA,UAAc;MAAEoC;IAAY;IAAA;IAAA,CAAAzD,aAAA,GAAAqB,CAAA,UAAIsC,SAAA;IAAA;IAAA3D,aAAA,GAAAmB,CAAA;IAC/C,OAAO,IAAI,CAAC0B,GAAG,CAAC,eAAea,MAAA;EACjC;EAEA;;;EAGA,MAAME,cAAcC,QAAgB,EAA6C;IAAA;IAAA7D,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAC/E,OAAO,IAAI,CAAC2C,MAAM,CAAC,OAAO;MAAEtB,IAAA,EAAM;QAAEqB;MAAS;IAAE;EACjD;EAEA;;;EAGA,MAAME,eAAeC,MAAc,EAAEC,IAAc,EAA8B;IAAA;IAAAjE,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAC/E,OAAO,IAAI,CAAC4B,KAAK,CAAC,UAAUiB,MAAA,OAAa,EAAE;MAAEC;IAAK;EACpD;EAEA;;;EAGA,MAAMC,iBAAiBF,MAAc,EAAEG,MAAkB,EAAEC,MAAe,EAA8B;IAAA;IAAApE,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACtG,OAAO,IAAI,CAAC4B,KAAK,CAAC,UAAUiB,MAAA,SAAe,EAAE;MAAEG,MAAA;MAAQC;IAAO;EAChE;EAEA;;;EAGA,MAAMC,YAAA,EAMD;IAAA;IAAArE,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACH,OAAO,IAAI,CAAC0B,GAAG,CAAC;EAClB;EAEA;;;EAGA,MAAMyB,cAAcC,SAAiB,EAA6C;IAAA;IAAAvE,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAChF,OAAO,IAAI,CAAC2C,MAAM,CAAC,aAAaS,SAAA,EAAW;EAC7C;EAEA;;;EAGA,MAAMC,kBAAA,EAA+D;IAAA;IAAAxE,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACnE,OAAO,IAAI,CAACmB,IAAI,CAAC;EACnB;EAEA;;;EAGA,MAAMmC,gBAAA,EAA4E;IAAA;IAAAzE,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAChF,OAAO,IAAI,CAACmB,IAAI,CAAC;EACnB;EAEA;;;EAGA,MAAMoC,gBAAgBrB,KAAa,EAAmD;IAAA;IAAArD,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IACpF,OAAO,IAAI,CAACmB,IAAI,CAAC,eAAe;MAAEe;IAAM;EAC1C;EAEA;;;EAGA,MAAMsB,iBAAiBtB,KAAa,EAA6C;IAAA;IAAArD,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAC/E,OAAO,IAAI,CAACmB,IAAI,CAAC,gBAAgB;MAAEe;IAAM;EAC3C;EAEA;;;EAGA,MAAMuB,oBAAA,EAAuE;IAAA;IAAA5E,aAAA,GAAAoB,CAAA;IAAApB,aAAA,GAAAmB,CAAA;IAC3E,OAAO,IAAI,CAACmB,IAAI,CAAC;EACnB;AACF;AAGO,MAAMN,WAAA;AAAA;AAAA,CAAAhC,aAAA,GAAAmB,CAAA,QAAc,IAAIY,WAAA","ignoreList":[]}