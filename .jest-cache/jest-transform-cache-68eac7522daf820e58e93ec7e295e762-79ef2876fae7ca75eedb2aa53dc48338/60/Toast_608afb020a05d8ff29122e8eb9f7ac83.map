{"version":3,"names":["ToastContainer","Toast","notification","cov_gzgxs7kmz","f","removeNotification","s","_appStore","useAppStore","state","_react","useEffect","b","duration","timer","setTimeout","id","clearTimeout","getToastStyles","type","getIcon","_jsxruntime","jsxs","className","jsx","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","title","message","actions","length","map","action","index","_Button","Button","variant","size","label","notifications"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/Toast.tsx"],"sourcesContent":["/**\n * Toast notification component for The Robot Overlord\n * Displays temporary notifications with Robot Overlord theming\n */\n\n'use client';\n\nimport React, { useEffect } from 'react';\nimport { useAppStore, Notification } from '@/stores/appStore';\nimport { Button } from './Button';\n\ninterface ToastProps {\n  notification: Notification;\n}\n\nfunction Toast({ notification }: ToastProps) {\n  const removeNotification = useAppStore((state) => state.removeNotification);\n\n  useEffect(() => {\n    if (notification.duration && notification.duration > 0) {\n      const timer = setTimeout(() => {\n        removeNotification(notification.id);\n      }, notification.duration);\n\n      return () => clearTimeout(timer);\n    }\n  }, [notification.duration, notification.id, removeNotification]);\n\n  const getToastStyles = (type: Notification['type']) => {\n    switch (type) {\n      case 'success':\n        return 'bg-approved-green/10 border-approved-green text-approved-green';\n      case 'error':\n        return 'bg-rejected-red/10 border-rejected-red text-rejected-red';\n      case 'warning':\n        return 'bg-warning-amber/10 border-warning-amber text-warning-amber';\n      case 'info':\n      default:\n        return 'bg-overlord-red/10 border-overlord-red text-overlord-red';\n    }\n  };\n\n  const getIcon = (type: Notification['type']) => {\n    switch (type) {\n      case 'success':\n        return '✅';\n      case 'error':\n        return '❌';\n      case 'warning':\n        return '⚠️';\n      case 'info':\n      default:\n        return 'ℹ️';\n    }\n  };\n\n  return (\n    <div\n      className={`\n        relative p-4 rounded-lg border-2 shadow-lg backdrop-blur-sm\n        animate-in slide-in-from-right-full duration-300\n        ${getToastStyles(notification.type)}\n      `}\n    >\n      {/* Close button */}\n      <button\n        onClick={() => removeNotification(notification.id)}\n        className=\"absolute top-2 right-2 p-1 rounded hover:bg-black/10 transition-colors\"\n        aria-label=\"Close notification\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n\n      {/* Content */}\n      <div className=\"flex items-start space-x-3 pr-6\">\n        <span className=\"text-lg flex-shrink-0 mt-0.5\">\n          {getIcon(notification.type)}\n        </span>\n        \n        <div className=\"flex-1 min-w-0\">\n          <div className=\"font-bold text-sm\">\n            {notification.title}\n          </div>\n          <div className=\"text-sm mt-1 opacity-90\">\n            {notification.message}\n          </div>\n          \n          {/* Actions */}\n          {notification.actions && notification.actions.length > 0 && (\n            <div className=\"flex space-x-2 mt-3\">\n              {notification.actions.map((action, index) => (\n                <Button\n                  key={index}\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => {\n                    action.action();\n                    removeNotification(notification.id);\n                  }}\n                  className=\"text-xs\"\n                >\n                  {action.label}\n                </Button>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport function ToastContainer() {\n  const notifications = useAppStore((state) => state.notifications);\n\n  if (notifications.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2 max-w-sm w-full\">\n      {notifications.map((notification) => (\n        <Toast key={notification.id} notification={notification} />\n      ))}\n    </div>\n  );\n}\n"],"mappings":"AAAA;;;GAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","ignoreList":[]}