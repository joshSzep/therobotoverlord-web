e556e582e12b2a6f9c4321a7d397edbe
/**
 * Authentication service for The Robot Overlord
 * Handles user authentication, registration, and session management
 */"use strict";

/* istanbul ignore next */
function cov_6r3ayvska() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/AuthService.ts";
  var hash = "9c288e489493c1d5a2edf66005b7f43d58b51ff8";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/AuthService.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 27
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "6": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 23
        }
      },
      "8": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 48
        }
      },
      "9": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 44
        }
      },
      "10": {
        start: {
          line: 40,
          column: 8
        },
        end: {
          line: 40,
          column: 36
        }
      },
      "11": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 47,
          column: 11
        }
      },
      "12": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 52,
          column: 31
        }
      },
      "13": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "14": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 51
        }
      },
      "15": {
        start: {
          line: 67,
          column: 8
        },
        end: {
          line: 69,
          column: 11
        }
      },
      "16": {
        start: {
          line: 74,
          column: 8
        },
        end: {
          line: 74,
          column: 50
        }
      },
      "17": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 81,
          column: 11
        }
      },
      "18": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 49
        }
      },
      "19": {
        start: {
          line: 91,
          column: 8
        },
        end: {
          line: 91,
          column: 42
        }
      },
      "20": {
        start: {
          line: 96,
          column: 23
        },
        end: {
          line: 98,
          column: 21
        }
      },
      "21": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 47
        }
      },
      "22": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 108,
          column: 11
        }
      },
      "23": {
        start: {
          line: 113,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "24": {
        start: {
          line: 120,
          column: 8
        },
        end: {
          line: 123,
          column: 11
        }
      },
      "25": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 37
        }
      },
      "26": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 53
        }
      },
      "27": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 49
        }
      },
      "28": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 143,
          column: 40
        }
      },
      "29": {
        start: {
          line: 148,
          column: 8
        },
        end: {
          line: 150,
          column: 11
        }
      },
      "30": {
        start: {
          line: 155,
          column: 8
        },
        end: {
          line: 157,
          column: 11
        }
      },
      "31": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 46
        }
      },
      "32": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 23
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 29,
            column: 7
          }
        },
        loc: {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 34,
            column: 6
          },
          end: {
            line: 34,
            column: 7
          }
        },
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 39,
            column: 6
          },
          end: {
            line: 39,
            column: 7
          }
        },
        loc: {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 41,
            column: 5
          }
        },
        line: 39
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 44,
            column: 6
          },
          end: {
            line: 44,
            column: 7
          }
        },
        loc: {
          start: {
            line: 44,
            column: 40
          },
          end: {
            line: 48,
            column: 5
          }
        },
        line: 44
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 51,
            column: 7
          }
        },
        loc: {
          start: {
            line: 51,
            column: 29
          },
          end: {
            line: 53,
            column: 5
          }
        },
        line: 51
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        },
        loc: {
          start: {
            line: 56,
            column: 32
          },
          end: {
            line: 58,
            column: 5
          }
        },
        line: 56
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 61,
            column: 6
          },
          end: {
            line: 61,
            column: 7
          }
        },
        loc: {
          start: {
            line: 61,
            column: 33
          },
          end: {
            line: 63,
            column: 5
          }
        },
        line: 61
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 66,
            column: 6
          },
          end: {
            line: 66,
            column: 7
          }
        },
        loc: {
          start: {
            line: 66,
            column: 40
          },
          end: {
            line: 70,
            column: 5
          }
        },
        line: 66
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 73,
            column: 6
          },
          end: {
            line: 73,
            column: 7
          }
        },
        loc: {
          start: {
            line: 73,
            column: 32
          },
          end: {
            line: 75,
            column: 5
          }
        },
        line: 73
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 78,
            column: 6
          },
          end: {
            line: 78,
            column: 7
          }
        },
        loc: {
          start: {
            line: 78,
            column: 31
          },
          end: {
            line: 82,
            column: 5
          }
        },
        line: 78
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 85,
            column: 7
          }
        },
        loc: {
          start: {
            line: 85,
            column: 33
          },
          end: {
            line: 87,
            column: 5
          }
        },
        line: 85
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 90,
            column: 6
          },
          end: {
            line: 90,
            column: 7
          }
        },
        loc: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 92,
            column: 5
          }
        },
        line: 90
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 95,
            column: 6
          },
          end: {
            line: 95,
            column: 7
          }
        },
        loc: {
          start: {
            line: 95,
            column: 42
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 95
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 103,
            column: 6
          },
          end: {
            line: 103,
            column: 7
          }
        },
        loc: {
          start: {
            line: 103,
            column: 36
          },
          end: {
            line: 109,
            column: 5
          }
        },
        line: 103
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 112,
            column: 6
          },
          end: {
            line: 112,
            column: 7
          }
        },
        loc: {
          start: {
            line: 112,
            column: 41
          },
          end: {
            line: 116,
            column: 5
          }
        },
        line: 112
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 119,
            column: 6
          },
          end: {
            line: 119,
            column: 7
          }
        },
        loc: {
          start: {
            line: 119,
            column: 53
          },
          end: {
            line: 124,
            column: 5
          }
        },
        line: 119
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 127,
            column: 7
          }
        },
        loc: {
          start: {
            line: 127,
            column: 26
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 127
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        loc: {
          start: {
            line: 132,
            column: 37
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        },
        loc: {
          start: {
            line: 137,
            column: 32
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 137
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 142,
            column: 6
          },
          end: {
            line: 142,
            column: 7
          }
        },
        loc: {
          start: {
            line: 142,
            column: 30
          },
          end: {
            line: 144,
            column: 5
          }
        },
        line: 142
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 147,
            column: 6
          },
          end: {
            line: 147,
            column: 7
          }
        },
        loc: {
          start: {
            line: 147,
            column: 35
          },
          end: {
            line: 151,
            column: 5
          }
        },
        line: 147
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 154,
            column: 6
          },
          end: {
            line: 154,
            column: 7
          }
        },
        loc: {
          start: {
            line: 154,
            column: 36
          },
          end: {
            line: 158,
            column: 5
          }
        },
        line: 154
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 161,
            column: 6
          },
          end: {
            line: 161,
            column: 7
          }
        },
        loc: {
          start: {
            line: 161,
            column: 34
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 161
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 98,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 96,
            column: 37
          },
          end: {
            line: 98,
            column: 9
          }
        }, {
          start: {
            line: 98,
            column: 12
          },
          end: {
            line: 98,
            column: 21
          }
        }],
        line: 96
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/AuthService.ts"],
      sourcesContent: ["/**\n * Authentication service for The Robot Overlord\n * Handles user authentication, registration, and session management\n */\n\nimport { BaseService } from './BaseService';\nimport { User, AuthTokens, UserRole, UserStatus } from '@/types/user';\nimport { ApiResponse } from '@/types/api';\n\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\nexport interface RegisterData {\n  email: string;\n  password: string;\n  username: string;\n  firstName?: string;\n  lastName?: string;\n}\n\nexport interface ResetPasswordData {\n  token: string;\n  newPassword: string;\n}\n\nexport interface ChangePasswordData {\n  currentPassword: string;\n  newPassword: string;\n}\n\nexport interface GoogleAuthData {\n  token: string;\n  redirectUrl?: string;\n}\n\nexport class AuthService extends BaseService {\n  constructor() {\n    super('/auth');\n  }\n\n  /**\n   * Login with email and password\n   */\n  async login(credentials: LoginCredentials): Promise<ApiResponse<{ user: User; tokens: AuthTokens }>> {\n    return this.post('/login', credentials);\n  }\n\n  /**\n   * Register new user account\n   */\n  async register(data: RegisterData): Promise<ApiResponse<{ user: User; tokens: AuthTokens }>> {\n    return this.post('/register', data);\n  }\n\n  /**\n   * Logout current user\n   */\n  async logout(): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/logout');\n  }\n\n  /**\n   * Refresh authentication tokens\n   */\n  async refreshTokens(refreshToken: string): Promise<ApiResponse<AuthTokens>> {\n    return this.post('/refresh', { refreshToken });\n  }\n\n  /**\n   * Get current user profile\n   */\n  async getCurrentUser(): Promise<ApiResponse<User>> {\n    return this.get('/me');\n  }\n\n  /**\n   * Update current user profile\n   */\n  async updateProfile(data: Partial<User>): Promise<ApiResponse<User>> {\n    return this.patch('/me', data);\n  }\n\n  /**\n   * Change user password\n   */\n  async changePassword(data: ChangePasswordData): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/change-password', data);\n  }\n\n  /**\n   * Request password reset\n   */\n  async requestPasswordReset(email: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/forgot-password', { email });\n  }\n\n  /**\n   * Reset password with token\n   */\n  async resetPassword(data: ResetPasswordData): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/reset-password', data);\n  }\n\n  /**\n   * Verify email address\n   */\n  async verifyEmail(token: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/verify-email', { token });\n  }\n\n  /**\n   * Resend email verification\n   */\n  async resendVerification(): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/resend-verification');\n  }\n\n  /**\n   * Google OAuth login\n   */\n  async googleLogin(data: GoogleAuthData): Promise<ApiResponse<{ user: User; tokens: AuthTokens }>> {\n    return this.post('/google', data);\n  }\n\n  /**\n   * Get Google OAuth URL\n   */\n  async getGoogleAuthUrl(redirectUrl?: string): Promise<ApiResponse<{ url: string }>> {\n    const params = redirectUrl ? { redirectUrl } : undefined;\n    return this.get('/google/url', params);\n  }\n\n  /**\n   * Delete user account\n   */\n  async deleteAccount(password: string): Promise<ApiResponse<{ message: string }>> {\n    return this.delete('/me', { data: { password } });\n  }\n\n  /**\n   * Update user role (admin only)\n   */\n  async updateUserRole(userId: string, role: UserRole): Promise<ApiResponse<User>> {\n    return this.patch(`/users/${userId}/role`, { role });\n  }\n\n  /**\n   * Update user status (admin/moderator only)\n   */\n  async updateUserStatus(userId: string, status: UserStatus, reason?: string): Promise<ApiResponse<User>> {\n    return this.patch(`/users/${userId}/status`, { status, reason });\n  }\n\n  /**\n   * Get user sessions\n   */\n  async getSessions(): Promise<ApiResponse<Array<{\n    id: string;\n    deviceInfo: string;\n    ipAddress: string;\n    lastActive: string;\n    isCurrent: boolean;\n  }>>> {\n    return this.get('/sessions');\n  }\n\n  /**\n   * Revoke user session\n   */\n  async revokeSession(sessionId: string): Promise<ApiResponse<{ message: string }>> {\n    return this.delete(`/sessions/${sessionId}`);\n  }\n\n  /**\n   * Revoke all sessions except current\n   */\n  async revokeAllSessions(): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/sessions/revoke-all');\n  }\n\n  /**\n   * Enable two-factor authentication\n   */\n  async enableTwoFactor(): Promise<ApiResponse<{ qrCode: string; secret: string }>> {\n    return this.post('/2fa/enable');\n  }\n\n  /**\n   * Verify and activate two-factor authentication\n   */\n  async verifyTwoFactor(token: string): Promise<ApiResponse<{ backupCodes: string[] }>> {\n    return this.post('/2fa/verify', { token });\n  }\n\n  /**\n   * Disable two-factor authentication\n   */\n  async disableTwoFactor(token: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post('/2fa/disable', { token });\n  }\n\n  /**\n   * Generate new backup codes\n   */\n  async generateBackupCodes(): Promise<ApiResponse<{ backupCodes: string[] }>> {\n    return this.post('/2fa/backup-codes');\n  }\n}\n\n// Export singleton instance\nexport const authService = new AuthService();\n"],
      names: ["AuthService", "authService", "BaseService", "login", "credentials", "post", "register", "data", "logout", "refreshTokens", "refreshToken", "getCurrentUser", "get", "updateProfile", "patch", "changePassword", "requestPasswordReset", "email", "resetPassword", "verifyEmail", "token", "resendVerification", "googleLogin", "getGoogleAuthUrl", "redirectUrl", "params", "undefined", "deleteAccount", "password", "delete", "updateUserRole", "userId", "role", "updateUserStatus", "status", "reason", "getSessions", "revokeSession", "sessionId", "revokeAllSessions", "enableTwoFactor", "verifyTwoFactor", "disableTwoFactor", "generateBackupCodes"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9c288e489493c1d5a2edf66005b7f43d58b51ff8"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_6r3ayvska = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_6r3ayvska();
cov_6r3ayvska().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_6r3ayvska().f[0]++;
  cov_6r3ayvska().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_6r3ayvska().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_6r3ayvska().s[3]++;
_export(exports, {
  get AuthService() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[1]++;
    cov_6r3ayvska().s[4]++;
    return AuthService;
  },
  get authService() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[2]++;
    cov_6r3ayvska().s[5]++;
    return authService;
  }
});
const _BaseService =
/* istanbul ignore next */
(cov_6r3ayvska().s[6]++, require("./BaseService"));
class AuthService extends
/* istanbul ignore next */
(_BaseService.BaseService) {
  constructor() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[3]++;
    cov_6r3ayvska().s[7]++;
    super('/auth');
  }
  /**
  * Login with email and password
  */
  async login(credentials) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[4]++;
    cov_6r3ayvska().s[8]++;
    return this.post('/login', credentials);
  }
  /**
  * Register new user account
  */
  async register(data) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[5]++;
    cov_6r3ayvska().s[9]++;
    return this.post('/register', data);
  }
  /**
  * Logout current user
  */
  async logout() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[6]++;
    cov_6r3ayvska().s[10]++;
    return this.post('/logout');
  }
  /**
  * Refresh authentication tokens
  */
  async refreshTokens(refreshToken) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[7]++;
    cov_6r3ayvska().s[11]++;
    return this.post('/refresh', {
      refreshToken
    });
  }
  /**
  * Get current user profile
  */
  async getCurrentUser() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[8]++;
    cov_6r3ayvska().s[12]++;
    return this.get('/me');
  }
  /**
  * Update current user profile
  */
  async updateProfile(data) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[9]++;
    cov_6r3ayvska().s[13]++;
    return this.patch('/me', data);
  }
  /**
  * Change user password
  */
  async changePassword(data) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[10]++;
    cov_6r3ayvska().s[14]++;
    return this.post('/change-password', data);
  }
  /**
  * Request password reset
  */
  async requestPasswordReset(email) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[11]++;
    cov_6r3ayvska().s[15]++;
    return this.post('/forgot-password', {
      email
    });
  }
  /**
  * Reset password with token
  */
  async resetPassword(data) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[12]++;
    cov_6r3ayvska().s[16]++;
    return this.post('/reset-password', data);
  }
  /**
  * Verify email address
  */
  async verifyEmail(token) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[13]++;
    cov_6r3ayvska().s[17]++;
    return this.post('/verify-email', {
      token
    });
  }
  /**
  * Resend email verification
  */
  async resendVerification() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[14]++;
    cov_6r3ayvska().s[18]++;
    return this.post('/resend-verification');
  }
  /**
  * Google OAuth login
  */
  async googleLogin(data) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[15]++;
    cov_6r3ayvska().s[19]++;
    return this.post('/google', data);
  }
  /**
  * Get Google OAuth URL
  */
  async getGoogleAuthUrl(redirectUrl) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[16]++;
    const params =
    /* istanbul ignore next */
    (cov_6r3ayvska().s[20]++, redirectUrl ?
    /* istanbul ignore next */
    (cov_6r3ayvska().b[0][0]++, {
      redirectUrl
    }) :
    /* istanbul ignore next */
    (cov_6r3ayvska().b[0][1]++, undefined));
    /* istanbul ignore next */
    cov_6r3ayvska().s[21]++;
    return this.get('/google/url', params);
  }
  /**
  * Delete user account
  */
  async deleteAccount(password) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[17]++;
    cov_6r3ayvska().s[22]++;
    return this.delete('/me', {
      data: {
        password
      }
    });
  }
  /**
  * Update user role (admin only)
  */
  async updateUserRole(userId, role) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[18]++;
    cov_6r3ayvska().s[23]++;
    return this.patch(`/users/${userId}/role`, {
      role
    });
  }
  /**
  * Update user status (admin/moderator only)
  */
  async updateUserStatus(userId, status, reason) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[19]++;
    cov_6r3ayvska().s[24]++;
    return this.patch(`/users/${userId}/status`, {
      status,
      reason
    });
  }
  /**
  * Get user sessions
  */
  async getSessions() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[20]++;
    cov_6r3ayvska().s[25]++;
    return this.get('/sessions');
  }
  /**
  * Revoke user session
  */
  async revokeSession(sessionId) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[21]++;
    cov_6r3ayvska().s[26]++;
    return this.delete(`/sessions/${sessionId}`);
  }
  /**
  * Revoke all sessions except current
  */
  async revokeAllSessions() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[22]++;
    cov_6r3ayvska().s[27]++;
    return this.post('/sessions/revoke-all');
  }
  /**
  * Enable two-factor authentication
  */
  async enableTwoFactor() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[23]++;
    cov_6r3ayvska().s[28]++;
    return this.post('/2fa/enable');
  }
  /**
  * Verify and activate two-factor authentication
  */
  async verifyTwoFactor(token) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[24]++;
    cov_6r3ayvska().s[29]++;
    return this.post('/2fa/verify', {
      token
    });
  }
  /**
  * Disable two-factor authentication
  */
  async disableTwoFactor(token) {
    /* istanbul ignore next */
    cov_6r3ayvska().f[25]++;
    cov_6r3ayvska().s[30]++;
    return this.post('/2fa/disable', {
      token
    });
  }
  /**
  * Generate new backup codes
  */
  async generateBackupCodes() {
    /* istanbul ignore next */
    cov_6r3ayvska().f[26]++;
    cov_6r3ayvska().s[31]++;
    return this.post('/2fa/backup-codes');
  }
}
const authService =
/* istanbul ignore next */
(cov_6r3ayvska().s[32]++, new AuthService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,