{"version":3,"names":["cov_1q1kluwd23","actualCoverage","s","default","f","_default","useDropdownNavigation","useFocusManagement","useKeyboardNavigation","useRovingTabIndex","useSkipLinks","useTableNavigation","items","options","b","orientation","loop","gridColumns","onSelect","onEscape","currentIndexRef","_react","useRef","handleKeyDown","useCallback","event","length","currentIndex","current","newIndex","key","preventDefault","Math","min","max","focus","focusItem","index","containerRef","getFocusableElements","Array","from","querySelectorAll","focusFirst","elements","focusLast","trapFocus","firstElement","lastElement","shiftKey","document","activeElement","isOpen","onClose","menuRef","getMenuItems","nextIndex","prevIndex","useEffect","addEventListener","removeEventListener","rows","columns","onCellSelect","tableRef","currentCellRef","row","col","getCellElement","cell","querySelector","focusCell","ctrlKey","activeIndex","forEach","item","tabIndex","setActiveIndex","skipToContent","mainContent","getElementById","scrollIntoView","skipToNavigation","navigation"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/hooks/useKeyboardNavigation.ts"],"sourcesContent":["'use client';\n\nimport { useEffect, useCallback, useRef } from 'react';\n\n// Hook for handling keyboard navigation in lists and grids\nexport const useKeyboardNavigation = (\n  items: HTMLElement[],\n  options: {\n    orientation?: 'horizontal' | 'vertical' | 'grid';\n    loop?: boolean;\n    gridColumns?: number;\n    onSelect?: (index: number) => void;\n    onEscape?: () => void;\n  } = {}\n) => {\n  const {\n    orientation = 'vertical',\n    loop = true,\n    gridColumns = 1,\n    onSelect,\n    onEscape\n  } = options;\n\n  const currentIndexRef = useRef(0);\n\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (items.length === 0) return;\n\n    const currentIndex = currentIndexRef.current;\n    let newIndex = currentIndex;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        event.preventDefault();\n        if (orientation === 'vertical' || orientation === 'grid') {\n          newIndex = orientation === 'grid' \n            ? Math.min(currentIndex + gridColumns, items.length - 1)\n            : currentIndex + 1;\n          if (loop && newIndex >= items.length) {\n            newIndex = 0;\n          }\n        }\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n        if (orientation === 'vertical' || orientation === 'grid') {\n          newIndex = orientation === 'grid'\n            ? Math.max(currentIndex - gridColumns, 0)\n            : currentIndex - 1;\n          if (loop && newIndex < 0) {\n            newIndex = items.length - 1;\n          }\n        }\n        break;\n\n      case 'ArrowRight':\n        event.preventDefault();\n        if (orientation === 'horizontal' || orientation === 'grid') {\n          newIndex = currentIndex + 1;\n          if (loop && newIndex >= items.length) {\n            newIndex = 0;\n          }\n        }\n        break;\n\n      case 'ArrowLeft':\n        event.preventDefault();\n        if (orientation === 'horizontal' || orientation === 'grid') {\n          newIndex = currentIndex - 1;\n          if (loop && newIndex < 0) {\n            newIndex = items.length - 1;\n          }\n        }\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        newIndex = 0;\n        break;\n\n      case 'End':\n        event.preventDefault();\n        newIndex = items.length - 1;\n        break;\n\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        onSelect?.(currentIndex);\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        onEscape?.();\n        break;\n\n      default:\n        return;\n    }\n\n    if (newIndex !== currentIndex && newIndex >= 0 && newIndex < items.length) {\n      currentIndexRef.current = newIndex;\n      items[newIndex]?.focus();\n    }\n  }, [items, orientation, loop, gridColumns, onSelect, onEscape]);\n\n  const focusItem = useCallback((index: number) => {\n    if (index >= 0 && index < items.length) {\n      currentIndexRef.current = index;\n      items[index]?.focus();\n    }\n  }, [items]);\n\n  return {\n    handleKeyDown,\n    focusItem,\n    currentIndex: currentIndexRef.current\n  };\n};\n\n// Hook for managing focus within a container\nexport const useFocusManagement = () => {\n  const containerRef = useRef<HTMLElement>(null);\n\n  const getFocusableElements = useCallback(() => {\n    if (!containerRef.current) return [];\n    \n    return Array.from(\n      containerRef.current.querySelectorAll(\n        'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n      )\n    ) as HTMLElement[];\n  }, []);\n\n  const focusFirst = useCallback(() => {\n    const elements = getFocusableElements();\n    elements[0]?.focus();\n  }, [getFocusableElements]);\n\n  const focusLast = useCallback(() => {\n    const elements = getFocusableElements();\n    elements[elements.length - 1]?.focus();\n  }, [getFocusableElements]);\n\n  const trapFocus = useCallback((event: KeyboardEvent) => {\n    if (event.key !== 'Tab') return;\n\n    const elements = getFocusableElements();\n    if (elements.length === 0) return;\n\n    const firstElement = elements[0];\n    const lastElement = elements[elements.length - 1];\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstElement) {\n        event.preventDefault();\n        lastElement.focus();\n      }\n    } else {\n      if (document.activeElement === lastElement) {\n        event.preventDefault();\n        firstElement.focus();\n      }\n    }\n  }, [getFocusableElements]);\n\n  return {\n    containerRef,\n    focusFirst,\n    focusLast,\n    trapFocus,\n    getFocusableElements\n  };\n};\n\n// Hook for dropdown/menu keyboard navigation\nexport const useDropdownNavigation = (\n  isOpen: boolean,\n  onClose: () => void,\n  onSelect?: (index: number) => void\n) => {\n  const menuRef = useRef<HTMLElement>(null);\n  const currentIndexRef = useRef(-1);\n\n  const getMenuItems = useCallback(() => {\n    if (!menuRef.current) return [];\n    return Array.from(\n      menuRef.current.querySelectorAll('[role=\"menuitem\"], button, a')\n    ) as HTMLElement[];\n  }, []);\n\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (!isOpen) return;\n\n    const items = getMenuItems();\n    const currentIndex = currentIndexRef.current;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        event.preventDefault();\n        const nextIndex = currentIndex < items.length - 1 ? currentIndex + 1 : 0;\n        currentIndexRef.current = nextIndex;\n        items[nextIndex]?.focus();\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n        const prevIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;\n        currentIndexRef.current = prevIndex;\n        items[prevIndex]?.focus();\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        currentIndexRef.current = 0;\n        items[0]?.focus();\n        break;\n\n      case 'End':\n        event.preventDefault();\n        currentIndexRef.current = items.length - 1;\n        items[items.length - 1]?.focus();\n        break;\n\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        if (currentIndex >= 0) {\n          onSelect?.(currentIndex);\n        }\n        break;\n\n      case 'Escape':\n        event.preventDefault();\n        onClose();\n        break;\n\n      case 'Tab':\n        onClose();\n        break;\n    }\n  }, [isOpen, getMenuItems, onSelect, onClose]);\n\n  useEffect(() => {\n    if (isOpen) {\n      const items = getMenuItems();\n      if (items.length > 0) {\n        currentIndexRef.current = 0;\n        items[0].focus();\n      }\n    } else {\n      currentIndexRef.current = -1;\n    }\n  }, [isOpen, getMenuItems]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [handleKeyDown]);\n\n  return {\n    menuRef,\n    handleKeyDown\n  };\n};\n\n// Hook for table keyboard navigation\nexport const useTableNavigation = (\n  rows: number,\n  columns: number,\n  onCellSelect?: (row: number, col: number) => void\n) => {\n  const tableRef = useRef<HTMLTableElement>(null);\n  const currentCellRef = useRef({ row: 0, col: 0 });\n\n  const getCellElement = useCallback((row: number, col: number) => {\n    if (!tableRef.current) return null;\n    const cell = tableRef.current.querySelector(\n      `tr:nth-child(${row + 1}) td:nth-child(${col + 1}), tr:nth-child(${row + 1}) th:nth-child(${col + 1})`\n    ) as HTMLElement;\n    return cell;\n  }, []);\n\n  const focusCell = useCallback((row: number, col: number) => {\n    const cell = getCellElement(row, col);\n    if (cell) {\n      cell.focus();\n      currentCellRef.current = { row, col };\n    }\n  }, [getCellElement]);\n\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    const { row, col } = currentCellRef.current;\n\n    switch (event.key) {\n      case 'ArrowDown':\n        event.preventDefault();\n        if (row < rows - 1) {\n          focusCell(row + 1, col);\n        }\n        break;\n\n      case 'ArrowUp':\n        event.preventDefault();\n        if (row > 0) {\n          focusCell(row - 1, col);\n        }\n        break;\n\n      case 'ArrowRight':\n        event.preventDefault();\n        if (col < columns - 1) {\n          focusCell(row, col + 1);\n        }\n        break;\n\n      case 'ArrowLeft':\n        event.preventDefault();\n        if (col > 0) {\n          focusCell(row, col - 1);\n        }\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        if (event.ctrlKey) {\n          focusCell(0, 0);\n        } else {\n          focusCell(row, 0);\n        }\n        break;\n\n      case 'End':\n        event.preventDefault();\n        if (event.ctrlKey) {\n          focusCell(rows - 1, columns - 1);\n        } else {\n          focusCell(row, columns - 1);\n        }\n        break;\n\n      case 'Enter':\n      case ' ':\n        event.preventDefault();\n        onCellSelect?.(row, col);\n        break;\n    }\n  }, [rows, columns, focusCell, onCellSelect]);\n\n  return {\n    tableRef,\n    handleKeyDown,\n    focusCell\n  };\n};\n\n// Hook for managing roving tabindex\nexport const useRovingTabIndex = (items: HTMLElement[], activeIndex: number = 0) => {\n  useEffect(() => {\n    items.forEach((item, index) => {\n      if (item) {\n        item.tabIndex = index === activeIndex ? 0 : -1;\n      }\n    });\n  }, [items, activeIndex]);\n\n  const setActiveIndex = useCallback((newIndex: number) => {\n    items.forEach((item, index) => {\n      if (item) {\n        item.tabIndex = index === newIndex ? 0 : -1;\n        if (index === newIndex) {\n          item.focus();\n        }\n      }\n    });\n  }, [items]);\n\n  return { setActiveIndex };\n};\n\n// Hook for skip links\nexport const useSkipLinks = () => {\n  const skipToContent = useCallback(() => {\n    const mainContent = document.getElementById('main-content');\n    if (mainContent) {\n      mainContent.focus();\n      mainContent.scrollIntoView();\n    }\n  }, []);\n\n  const skipToNavigation = useCallback(() => {\n    const navigation = document.getElementById('main-navigation');\n    if (navigation) {\n      navigation.focus();\n      navigation.scrollIntoView();\n    }\n  }, []);\n\n  return {\n    skipToContent,\n    skipToNavigation\n  };\n};\n\nexport default useKeyboardNavigation;\n"],"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","ignoreList":[]}