7f9b693124765dd66ca4ce92639ecad1
/**
 * Search results page for The Robot Overlord
 * Displays comprehensive search results across topics, posts, and users
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_9rop1arjf() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/search/page.tsx";
  var hash = "23b227b2c6a381db79fae457271cf257ec5781fd";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/search/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 26
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "7": {
        start: {
          line: 19,
          column: 23
        },
        end: {
          line: 19,
          column: 71
        }
      },
      "8": {
        start: {
          line: 20,
          column: 23
        },
        end: {
          line: 20,
          column: 71
        }
      },
      "9": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 53
        }
      },
      "10": {
        start: {
          line: 22,
          column: 18
        },
        end: {
          line: 22,
          column: 50
        }
      },
      "11": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "12": {
        start: {
          line: 24,
          column: 39
        },
        end: {
          line: 24,
          column: 51
        }
      },
      "13": {
        start: {
          line: 25,
          column: 28
        },
        end: {
          line: 25,
          column: 41
        }
      },
      "14": {
        start: {
          line: 26,
          column: 27
        },
        end: {
          line: 26,
          column: 40
        }
      },
      "15": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 29,
          column: 20
        }
      },
      "16": {
        start: {
          line: 28,
          column: 8
        },
        end: {
          line: 28,
          column: 66
        }
      },
      "17": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 5
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 19
        }
      },
      "19": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 38,
          column: 10
        }
      },
      "21": {
        start: {
          line: 40,
          column: 16
        },
        end: {
          line: 40,
          column: 53
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 43,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 42,
          column: 30
        }
      },
      "24": {
        start: {
          line: 44,
          column: 17
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "25": {
        start: {
          line: 47,
          column: 32
        },
        end: {
          line: 47,
          column: 88
        }
      },
      "26": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "27": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 56,
          column: 9
        }
      },
      "28": {
        start: {
          line: 50,
          column: 23
        },
        end: {
          line: 50,
          column: 95
        }
      },
      "29": {
        start: {
          line: 51,
          column: 12
        },
        end: {
          line: 55,
          column: 13
        }
      },
      "30": {
        start: {
          line: 52,
          column: 16
        },
        end: {
          line: 52,
          column: 57
        }
      },
      "31": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 39
        }
      },
      "32": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "33": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 61,
          column: 5
        }
      },
      "34": {
        start: {
          line: 60,
          column: 8
        },
        end: {
          line: 60,
          column: 31
        }
      },
      "35": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 18
        }
      },
      "36": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 65,
          column: 59
        }
      },
      "37": {
        start: {
          line: 66,
          column: 19
        },
        end: {
          line: 66,
          column: 47
        }
      },
      "38": {
        start: {
          line: 67,
          column: 32
        },
        end: {
          line: 67,
          column: 60
        }
      },
      "39": {
        start: {
          line: 68,
          column: 30
        },
        end: {
          line: 68,
          column: 79
        }
      },
      "40": {
        start: {
          line: 69,
          column: 34
        },
        end: {
          line: 69,
          column: 58
        }
      },
      "41": {
        start: {
          line: 70,
          column: 38
        },
        end: {
          line: 70,
          column: 65
        }
      },
      "42": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "43": {
        start: {
          line: 72,
          column: 44
        },
        end: {
          line: 72,
          column: 67
        }
      },
      "44": {
        start: {
          line: 73,
          column: 42
        },
        end: {
          line: 73,
          column: 65
        }
      },
      "45": {
        start: {
          line: 74,
          column: 40
        },
        end: {
          line: 74,
          column: 63
        }
      },
      "46": {
        start: {
          line: 75,
          column: 34
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "47": {
        start: {
          line: 83,
          column: 26
        },
        end: {
          line: 167,
          column: 5
        }
      },
      "48": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 84,
          column: 40
        }
      },
      "49": {
        start: {
          line: 84,
          column: 33
        },
        end: {
          line: 84,
          column: 40
        }
      },
      "50": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 85,
          column: 27
        }
      },
      "51": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 86,
          column: 23
        }
      },
      "52": {
        start: {
          line: 87,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "53": {
        start: {
          line: 89,
          column: 12
        },
        end: {
          line: 89,
          column: 67
        }
      },
      "54": {
        start: {
          line: 89,
          column: 41
        },
        end: {
          line: 89,
          column: 65
        }
      },
      "55": {
        start: {
          line: 91,
          column: 32
        },
        end: {
          line: 151,
          column: 98
        }
      },
      "56": {
        start: {
          line: 151,
          column: 31
        },
        end: {
          line: 151,
          column: 97
        }
      },
      "57": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 36
        }
      },
      "58": {
        start: {
          line: 153,
          column: 12
        },
        end: {
          line: 153,
          column: 48
        }
      },
      "59": {
        start: {
          line: 154,
          column: 12
        },
        end: {
          line: 154,
          column: 62
        }
      },
      "60": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 155,
          column: 33
        }
      },
      "61": {
        start: {
          line: 157,
          column: 33
        },
        end: {
          line: 157,
          column: 85
        }
      },
      "62": {
        start: {
          line: 158,
          column: 12
        },
        end: {
          line: 158,
          column: 35
        }
      },
      "63": {
        start: {
          line: 159,
          column: 12
        },
        end: {
          line: 163,
          column: 15
        }
      },
      "64": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 32
        }
      },
      "65": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 173,
          column: 11
        }
      },
      "66": {
        start: {
          line: 170,
          column: 8
        },
        end: {
          line: 172,
          column: 9
        }
      },
      "67": {
        start: {
          line: 171,
          column: 12
        },
        end: {
          line: 171,
          column: 42
        }
      },
      "68": {
        start: {
          line: 175,
          column: 25
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "69": {
        start: {
          line: 176,
          column: 8
        },
        end: {
          line: 176,
          column: 27
        }
      },
      "70": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 65
        }
      },
      "71": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 41
        }
      },
      "72": {
        start: {
          line: 181,
          column: 32
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "73": {
        start: {
          line: 182,
          column: 8
        },
        end: {
          line: 182,
          column: 31
        }
      },
      "74": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "75": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 45
        }
      },
      "76": {
        start: {
          line: 188,
          column: 29
        },
        end: {
          line: 191,
          column: 5
        }
      },
      "77": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 189,
          column: 29
        }
      },
      "78": {
        start: {
          line: 190,
          column: 8
        },
        end: {
          line: 190,
          column: 44
        }
      },
      "79": {
        start: {
          line: 192,
          column: 4
        },
        end: {
          line: 278,
          column: 7
        }
      },
      "80": {
        start: {
          line: 215,
          column: 45
        },
        end: {
          line: 215,
          column: 70
        }
      },
      "81": {
        start: {
          line: 265,
          column: 45
        },
        end: {
          line: 265,
          column: 67
        }
      },
      "82": {
        start: {
          line: 270,
          column: 45
        },
        end: {
          line: 270,
          column: 85
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 23,
            column: 9
          },
          end: {
            line: 23,
            column: 33
          }
        },
        loc: {
          start: {
            line: 23,
            column: 47
          },
          end: {
            line: 30,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 27,
            column: 39
          },
          end: {
            line: 27,
            column: 40
          }
        },
        loc: {
          start: {
            line: 27,
            column: 61
          },
          end: {
            line: 29,
            column: 5
          }
        },
        line: 27
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 34
          }
        },
        loc: {
          start: {
            line: 31,
            column: 53
          },
          end: {
            line: 63,
            column: 1
          }
        },
        line: 31
      },
      "4": {
        name: "SearchPage",
        decl: {
          start: {
            line: 64,
            column: 9
          },
          end: {
            line: 64,
            column: 19
          }
        },
        loc: {
          start: {
            line: 64,
            column: 22
          },
          end: {
            line: 279,
            column: 1
          }
        },
        line: 64
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 26
          },
          end: {
            line: 83,
            column: 27
          }
        },
        loc: {
          start: {
            line: 83,
            column: 72
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 89,
            column: 31
          }
        },
        loc: {
          start: {
            line: 89,
            column: 41
          },
          end: {
            line: 89,
            column: 65
          }
        },
        line: 89
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 151,
            column: 21
          },
          end: {
            line: 151,
            column: 22
          }
        },
        loc: {
          start: {
            line: 151,
            column: 31
          },
          end: {
            line: 151,
            column: 97
          }
        },
        line: 151
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 169,
            column: 26
          },
          end: {
            line: 169,
            column: 27
          }
        },
        loc: {
          start: {
            line: 169,
            column: 30
          },
          end: {
            line: 173,
            column: 5
          }
        },
        line: 169
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 175,
            column: 25
          },
          end: {
            line: 175,
            column: 26
          }
        },
        loc: {
          start: {
            line: 175,
            column: 37
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 175
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 181,
            column: 32
          },
          end: {
            line: 181,
            column: 33
          }
        },
        loc: {
          start: {
            line: 181,
            column: 46
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 181
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 188,
            column: 29
          },
          end: {
            line: 188,
            column: 30
          }
        },
        loc: {
          start: {
            line: 188,
            column: 37
          },
          end: {
            line: 191,
            column: 5
          }
        },
        line: 188
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 215,
            column: 30
          },
          end: {
            line: 215,
            column: 31
          }
        },
        loc: {
          start: {
            line: 215,
            column: 45
          },
          end: {
            line: 215,
            column: 70
          }
        },
        line: 215
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 265,
            column: 41
          },
          end: {
            line: 265,
            column: 42
          }
        },
        loc: {
          start: {
            line: 265,
            column: 45
          },
          end: {
            line: 265,
            column: 67
          }
        },
        line: 265
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 270,
            column: 41
          },
          end: {
            line: 270,
            column: 42
          }
        },
        loc: {
          start: {
            line: 270,
            column: 45
          },
          end: {
            line: 270,
            column: 85
          }
        },
        line: 270
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "1": {
        loc: {
          start: {
            line: 28,
            column: 15
          },
          end: {
            line: 28,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 28,
            column: 29
          },
          end: {
            line: 28,
            column: 45
          }
        }, {
          start: {
            line: 28,
            column: 48
          },
          end: {
            line: 28,
            column: 65
          }
        }],
        line: 28
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 8
          },
          end: {
            line: 32,
            column: 20
          }
        }, {
          start: {
            line: 32,
            column: 24
          },
          end: {
            line: 32,
            column: 27
          }
        }, {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 45
          }
        }],
        line: 32
      },
      "4": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "5": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 47
          }
        }, {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 76
          }
        }],
        line: 35
      },
      "6": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 43,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "7": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 13
          }
        }, {
          start: {
            line: 41,
            column: 17
          },
          end: {
            line: 41,
            column: 31
          }
        }],
        line: 41
      },
      "8": {
        loc: {
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 32
          },
          end: {
            line: 47,
            column: 53
          }
        }, {
          start: {
            line: 47,
            column: 57
          },
          end: {
            line: 47,
            column: 88
          }
        }],
        line: 47
      },
      "9": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 56,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "10": {
        loc: {
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 12
          },
          end: {
            line: 49,
            column: 29
          }
        }, {
          start: {
            line: 49,
            column: 33
          },
          end: {
            line: 49,
            column: 79
          }
        }],
        line: 49
      },
      "11": {
        loc: {
          start: {
            line: 50,
            column: 23
          },
          end: {
            line: 50,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 88
          }
        }, {
          start: {
            line: 50,
            column: 91
          },
          end: {
            line: 50,
            column: 95
          }
        }],
        line: 50
      },
      "12": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 55,
            column: 13
          }
        }, {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 55,
            column: 13
          }
        }],
        line: 51
      },
      "13": {
        loc: {
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 16
          },
          end: {
            line: 51,
            column: 20
          }
        }, {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 33
          }
        }, {
          start: {
            line: 51,
            column: 37
          },
          end: {
            line: 51,
            column: 45
          }
        }],
        line: 51
      },
      "14": {
        loc: {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 61,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 59
      },
      "15": {
        loc: {
          start: {
            line: 68,
            column: 51
          },
          end: {
            line: 68,
            column: 78
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 68,
            column: 51
          },
          end: {
            line: 68,
            column: 72
          }
        }, {
          start: {
            line: 68,
            column: 76
          },
          end: {
            line: 68,
            column: 78
          }
        }],
        line: 68
      },
      "16": {
        loc: {
          start: {
            line: 83,
            column: 61
          },
          end: {
            line: 83,
            column: 69
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 83,
            column: 68
          },
          end: {
            line: 83,
            column: 69
          }
        }],
        line: 83
      },
      "17": {
        loc: {
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 84,
            column: 40
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 8
          },
          end: {
            line: 84,
            column: 40
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 84
      },
      "18": {
        loc: {
          start: {
            line: 151,
            column: 31
          },
          end: {
            line: 151,
            column: 97
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 151,
            column: 31
          },
          end: {
            line: 151,
            column: 59
          }
        }, {
          start: {
            line: 151,
            column: 63
          },
          end: {
            line: 151,
            column: 97
          }
        }],
        line: 151
      },
      "19": {
        loc: {
          start: {
            line: 157,
            column: 33
          },
          end: {
            line: 157,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 157,
            column: 56
          },
          end: {
            line: 157,
            column: 67
          }
        }, {
          start: {
            line: 157,
            column: 70
          },
          end: {
            line: 157,
            column: 85
          }
        }],
        line: 157
      },
      "20": {
        loc: {
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 8
          },
          end: {
            line: 172,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 170
      },
      "21": {
        loc: {
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 183,
            column: 8
          },
          end: {
            line: 185,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 183
      },
      "22": {
        loc: {
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 244,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 12
          },
          end: {
            line: 218,
            column: 17
          }
        }, {
          start: {
            line: 218,
            column: 35
          },
          end: {
            line: 244,
            column: 14
          }
        }],
        line: 218
      },
      "23": {
        loc: {
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 276,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 245,
            column: 12
          },
          end: {
            line: 245,
            column: 18
          }
        }, {
          start: {
            line: 245,
            column: 36
          },
          end: {
            line: 276,
            column: 14
          }
        }],
        line: 245
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/search/page.tsx"],
      sourcesContent: ["/**\n * Search results page for The Robot Overlord\n * Displays comprehensive search results across topics, posts, and users\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport { SearchBar } from '@/components/search/SearchBar';\nimport { SearchResults } from '@/components/search/SearchResults';\nimport { SearchFilters } from '@/components/search/SearchFilters';\nimport { Button } from '@/components/ui/Button';\nimport { useAppStore } from '@/stores/appStore';\n\ninterface SearchFiltersType {\n  type: 'all' | 'topics' | 'posts' | 'users';\n  category?: string;\n  dateRange?: 'day' | 'week' | 'month' | 'year' | 'all';\n  sortBy: 'relevance' | 'date' | 'score' | 'activity';\n  sortOrder: 'desc' | 'asc';\n}\n\nexport default function SearchPage() {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const { addNotification } = useAppStore();\n  \n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const [results, setResults] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [totalResults, setTotalResults] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  \n  const [filters, setFilters] = useState<SearchFiltersType>({\n    type: 'all',\n    category: undefined,\n    dateRange: 'all',\n    sortBy: 'relevance',\n    sortOrder: 'desc',\n  });\n\n  // Perform search\n  const performSearch = async (searchQuery: string, searchFilters: SearchFiltersType, page: number = 1) => {\n    if (!searchQuery.trim()) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Mock search API call - replace with actual implementation\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Mock results based on query and filters\n      const mockResults = [\n        {\n          id: '1',\n          type: 'topic',\n          title: `AI Ethics Discussion - ${searchQuery}`,\n          description: 'Exploring the ethical implications of artificial intelligence in modern society',\n          url: '/topics/ai-ethics-discussion',\n          score: 95,\n          author: { username: 'robot_overlord', avatar: null },\n          category: { name: 'Philosophy', color: '#8B5CF6' },\n          createdAt: '2024-01-15T10:00:00Z',\n          stats: { posts: 42, participants: 15, views: 1250 }\n        },\n        {\n          id: '2',\n          type: 'post',\n          title: `Machine Learning Best Practices for ${searchQuery}`,\n          description: 'A comprehensive guide to implementing ML solutions effectively',\n          url: '/topics/ml-guide/posts/123',\n          score: 87,\n          author: { username: 'ai_researcher', avatar: null },\n          topic: { title: 'ML Guide', slug: 'ml-guide' },\n          createdAt: '2024-01-10T14:30:00Z',\n          stats: { upvotes: 45, downvotes: 3, replies: 12 }\n        },\n        {\n          id: '3',\n          type: 'user',\n          title: 'robot_master',\n          description: 'Senior AI Engineer specializing in robotics and automation',\n          url: '/users/robot_master',\n          score: 78,\n          stats: { loyaltyScore: 1250, posts: 89, topics: 12 },\n          createdAt: '2023-06-01T00:00:00Z',\n          lastActive: '2024-01-20T16:45:00Z'\n        }\n      ].filter(result => \n        searchFilters.type === 'all' || result.type === searchFilters.type\n      );\n\n      setResults(mockResults);\n      setTotalResults(mockResults.length);\n      setTotalPages(Math.ceil(mockResults.length / 20));\n      setCurrentPage(page);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Search failed';\n      setError(errorMessage);\n      addNotification({\n        type: 'error',\n        title: 'Search Error',\n        message: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initial search on page load\n  useEffect(() => {\n    if (query) {\n      performSearch(query, filters);\n    }\n  }, []);\n\n  // Handle new search\n  const handleSearch = (newQuery: string) => {\n    setQuery(newQuery);\n    router.push(`/search?q=${encodeURIComponent(newQuery)}`);\n    performSearch(newQuery, filters);\n  };\n\n  // Handle filter changes\n  const handleFiltersChange = (newFilters: SearchFiltersType) => {\n    setFilters(newFilters);\n    if (query) {\n      performSearch(query, newFilters);\n    }\n  };\n\n  // Handle page changes\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    performSearch(query, filters, page);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-light-text\">Search</h1>\n          <p className=\"text-muted-light mt-1\">\n            Find topics, posts, and users across The Robot Overlord\n          </p>\n        </div>\n      </div>\n\n      {/* Search Bar */}\n      <div className=\"max-w-2xl\">\n        <SearchBar\n          placeholder=\"Search topics, posts, and users...\"\n          showResults={false}\n          onSearch={(searchQuery) => handleSearch(searchQuery)}\n        />\n      </div>\n\n      {/* Search Results */}\n      {query && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Filters Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <SearchFilters\n              filters={filters}\n              onFiltersChange={handleFiltersChange}\n              totalResults={totalResults}\n            />\n          </div>\n\n          {/* Results */}\n          <div className=\"lg:col-span-3\">\n            <SearchResults\n              query={query}\n              results={results}\n              isLoading={isLoading}\n              error={error}\n              totalResults={totalResults}\n              currentPage={currentPage}\n              totalPages={totalPages}\n              onPageChange={handlePageChange}\n              filters={filters}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Empty State */}\n      {!query && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">\uD83D\uDD0D</div>\n          <h3 className=\"text-xl font-bold text-light-text mb-2\">\n            Search The Robot Overlord\n          </h3>\n          <p className=\"text-muted-light mb-6\">\n            Enter a search term above to find topics, posts, and users\n          </p>\n          <div className=\"flex items-center justify-center space-x-4\">\n            <Button \n              variant=\"ghost\" \n              onClick={() => router.push('/topics')}\n            >\n              Browse Topics\n            </Button>\n            <Button \n              variant=\"primary\" \n              onClick={() => document.querySelector('input')?.focus()}\n            >\n              Start Searching\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],
      names: ["SearchPage", "searchParams", "useSearchParams", "router", "useRouter", "addNotification", "useAppStore", "query", "setQuery", "useState", "get", "results", "setResults", "isLoading", "setIsLoading", "error", "setError", "totalResults", "setTotalResults", "currentPage", "setCurrentPage", "totalPages", "setTotalPages", "filters", "setFilters", "type", "category", "undefined", "dateRange", "sortBy", "sortOrder", "performSearch", "searchQuery", "searchFilters", "page", "trim", "Promise", "resolve", "setTimeout", "mockResults", "id", "title", "description", "url", "score", "author", "username", "avatar", "name", "color", "createdAt", "stats", "posts", "participants", "views", "topic", "slug", "upvotes", "downvotes", "replies", "loyaltyScore", "topics", "lastActive", "filter", "result", "length", "Math", "ceil", "err", "errorMessage", "Error", "message", "useEffect", "handleSearch", "newQuery", "push", "encodeURIComponent", "handleFiltersChange", "newFilters", "handlePageChange", "div", "className", "h1", "p", "SearchBar", "placeholder", "showResults", "onSearch", "SearchFilters", "onFiltersChange", "SearchResults", "onPageChange", "h3", "Button", "variant", "onClick", "document", "querySelector", "focus"],
      mappings: "AAAA;;;CAGC,GAED;;;;;+BAkBA;;;eAAwBA;;;;+DAhBmB;4BACA;2BACjB;+BACI;+BACA;wBACP;0BACK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUb,SAASA;IACtB,MAAMC,eAAeC,IAAAA,2BAAe;IACpC,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAM,EAAEC,eAAe,EAAE,GAAGC,IAAAA,qBAAW;IAEvC,MAAM,CAACC,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAACR,aAAaS,GAAG,CAAC,QAAQ;IAC5D,MAAM,CAACC,SAASC,WAAW,GAAGH,IAAAA,eAAQ,EAAQ,EAAE;IAChD,MAAM,CAACI,WAAWC,aAAa,GAAGL,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACM,OAAOC,SAAS,GAAGP,IAAAA,eAAQ,EAAgB;IAClD,MAAM,CAACQ,cAAcC,gBAAgB,GAAGT,IAAAA,eAAQ,EAAC;IACjD,MAAM,CAACU,aAAaC,eAAe,GAAGX,IAAAA,eAAQ,EAAC;IAC/C,MAAM,CAACY,YAAYC,cAAc,GAAGb,IAAAA,eAAQ,EAAC;IAE7C,MAAM,CAACc,SAASC,WAAW,GAAGf,IAAAA,eAAQ,EAAoB;QACxDgB,MAAM;QACNC,UAAUC;QACVC,WAAW;QACXC,QAAQ;QACRC,WAAW;IACb;IAEA,iBAAiB;IACjB,MAAMC,gBAAgB,OAAOC,aAAqBC,eAAkCC,OAAe,CAAC;QAClG,IAAI,CAACF,YAAYG,IAAI,IAAI;QAEzBrB,aAAa;QACbE,SAAS;QAET,IAAI;YACF,4DAA4D;YAC5D,MAAM,IAAIoB,QAAQC,CAAAA,UAAWC,WAAWD,SAAS;YAEjD,0CAA0C;YAC1C,MAAME,cAAc;gBAClB;oBACEC,IAAI;oBACJf,MAAM;oBACNgB,OAAO,CAAC,uBAAuB,EAAET,aAAa;oBAC9CU,aAAa;oBACbC,KAAK;oBACLC,OAAO;oBACPC,QAAQ;wBAAEC,UAAU;wBAAkBC,QAAQ;oBAAK;oBACnDrB,UAAU;wBAAEsB,MAAM;wBAAcC,OAAO;oBAAU;oBACjDC,WAAW;oBACXC,OAAO;wBAAEC,OAAO;wBAAIC,cAAc;wBAAIC,OAAO;oBAAK;gBACpD;gBACA;oBACEd,IAAI;oBACJf,MAAM;oBACNgB,OAAO,CAAC,oCAAoC,EAAET,aAAa;oBAC3DU,aAAa;oBACbC,KAAK;oBACLC,OAAO;oBACPC,QAAQ;wBAAEC,UAAU;wBAAiBC,QAAQ;oBAAK;oBAClDQ,OAAO;wBAAEd,OAAO;wBAAYe,MAAM;oBAAW;oBAC7CN,WAAW;oBACXC,OAAO;wBAAEM,SAAS;wBAAIC,WAAW;wBAAGC,SAAS;oBAAG;gBAClD;gBACA;oBACEnB,IAAI;oBACJf,MAAM;oBACNgB,OAAO;oBACPC,aAAa;oBACbC,KAAK;oBACLC,OAAO;oBACPO,OAAO;wBAAES,cAAc;wBAAMR,OAAO;wBAAIS,QAAQ;oBAAG;oBACnDX,WAAW;oBACXY,YAAY;gBACd;aACD,CAACC,MAAM,CAACC,CAAAA,SACP/B,cAAcR,IAAI,KAAK,SAASuC,OAAOvC,IAAI,KAAKQ,cAAcR,IAAI;YAGpEb,WAAW2B;YACXrB,gBAAgBqB,YAAY0B,MAAM;YAClC3C,cAAc4C,KAAKC,IAAI,CAAC5B,YAAY0B,MAAM,GAAG;YAC7C7C,eAAec;QACjB,EAAE,OAAOkC,KAAK;YACZ,MAAMC,eAAeD,eAAeE,QAAQF,IAAIG,OAAO,GAAG;YAC1DvD,SAASqD;YACThE,gBAAgB;gBACdoB,MAAM;gBACNgB,OAAO;gBACP8B,SAASF;YACX;QACF,SAAU;YACRvD,aAAa;QACf;IACF;IAEA,8BAA8B;IAC9B0D,IAAAA,gBAAS,EAAC;QACR,IAAIjE,OAAO;YACTwB,cAAcxB,OAAOgB;QACvB;IACF,GAAG,EAAE;IAEL,oBAAoB;IACpB,MAAMkD,eAAe,CAACC;QACpBlE,SAASkE;QACTvE,OAAOwE,IAAI,CAAC,CAAC,UAAU,EAAEC,mBAAmBF,WAAW;QACvD3C,cAAc2C,UAAUnD;IAC1B;IAEA,wBAAwB;IACxB,MAAMsD,sBAAsB,CAACC;QAC3BtD,WAAWsD;QACX,IAAIvE,OAAO;YACTwB,cAAcxB,OAAOuE;QACvB;IACF;IAEA,sBAAsB;IACtB,MAAMC,mBAAmB,CAAC7C;QACxBd,eAAec;QACfH,cAAcxB,OAAOgB,SAASW;IAChC;IAEA,qBACE,sBAAC8C;QAAIC,WAAU;;0BAEb,qBAACD;gBAAIC,WAAU;0BACb,cAAA,sBAACD;;sCACC,qBAACE;4BAAGD,WAAU;sCAAqC;;sCACnD,qBAACE;4BAAEF,WAAU;sCAAwB;;;;;0BAOzC,qBAACD;gBAAIC,WAAU;0BACb,cAAA,qBAACG,oBAAS;oBACRC,aAAY;oBACZC,aAAa;oBACbC,UAAU,CAACvD,cAAgByC,aAAazC;;;YAK3CzB,uBACC,sBAACyE;gBAAIC,WAAU;;kCAEb,qBAACD;wBAAIC,WAAU;kCACb,cAAA,qBAACO,4BAAa;4BACZjE,SAASA;4BACTkE,iBAAiBZ;4BACjB5D,cAAcA;;;kCAKlB,qBAAC+D;wBAAIC,WAAU;kCACb,cAAA,qBAACS,4BAAa;4BACZnF,OAAOA;4BACPI,SAASA;4BACTE,WAAWA;4BACXE,OAAOA;4BACPE,cAAcA;4BACdE,aAAaA;4BACbE,YAAYA;4BACZsE,cAAcZ;4BACdxD,SAASA;;;;;YAOhB,CAAChB,uBACA,sBAACyE;gBAAIC,WAAU;;kCACb,qBAACD;wBAAIC,WAAU;kCAAgB;;kCAC/B,qBAACW;wBAAGX,WAAU;kCAAyC;;kCAGvD,qBAACE;wBAAEF,WAAU;kCAAwB;;kCAGrC,sBAACD;wBAAIC,WAAU;;0CACb,qBAACY,cAAM;gCACLC,SAAQ;gCACRC,SAAS,IAAM5F,OAAOwE,IAAI,CAAC;0CAC5B;;0CAGD,qBAACkB,cAAM;gCACLC,SAAQ;gCACRC,SAAS,IAAMC,SAASC,aAAa,CAAC,UAAUC;0CACjD;;;;;;;;AAQb"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "23b227b2c6a381db79fae457271cf257ec5781fd"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_9rop1arjf = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_9rop1arjf();
cov_9rop1arjf().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_9rop1arjf().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_9rop1arjf().f[0]++;
    cov_9rop1arjf().s[2]++;
    return SearchPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_9rop1arjf().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_9rop1arjf().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_9rop1arjf().s[5]++, require("next/navigation"));
const _SearchBar =
/* istanbul ignore next */
(cov_9rop1arjf().s[6]++, require("../../components/search/SearchBar"));
const _SearchResults =
/* istanbul ignore next */
(cov_9rop1arjf().s[7]++, require("../../components/search/SearchResults"));
const _SearchFilters =
/* istanbul ignore next */
(cov_9rop1arjf().s[8]++, require("../../components/search/SearchFilters"));
const _Button =
/* istanbul ignore next */
(cov_9rop1arjf().s[9]++, require("../../components/ui/Button"));
const _appStore =
/* istanbul ignore next */
(cov_9rop1arjf().s[10]++, require("../../stores/appStore"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_9rop1arjf().f[1]++;
  cov_9rop1arjf().s[11]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_9rop1arjf().b[0][0]++;
    cov_9rop1arjf().s[12]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_9rop1arjf().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[13]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[14]++, new WeakMap());
  /* istanbul ignore next */
  cov_9rop1arjf().s[15]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_9rop1arjf().f[2]++;
    cov_9rop1arjf().s[16]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_9rop1arjf().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_9rop1arjf().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_9rop1arjf().f[3]++;
  cov_9rop1arjf().s[17]++;
  if (
  /* istanbul ignore next */
  (cov_9rop1arjf().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_9rop1arjf().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_9rop1arjf().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_9rop1arjf().b[2][0]++;
    cov_9rop1arjf().s[18]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_9rop1arjf().b[2][1]++;
  }
  cov_9rop1arjf().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_9rop1arjf().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_9rop1arjf().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_9rop1arjf().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_9rop1arjf().b[4][0]++;
    cov_9rop1arjf().s[20]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_9rop1arjf().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[21]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_9rop1arjf().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_9rop1arjf().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_9rop1arjf().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_9rop1arjf().b[6][0]++;
    cov_9rop1arjf().s[23]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_9rop1arjf().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[24]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[25]++,
  /* istanbul ignore next */
  (cov_9rop1arjf().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_9rop1arjf().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_9rop1arjf().s[26]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_9rop1arjf().s[27]++;
    if (
    /* istanbul ignore next */
    (cov_9rop1arjf().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_9rop1arjf().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_9rop1arjf().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_9rop1arjf().s[28]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_9rop1arjf().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_9rop1arjf().b[11][1]++, null));
      /* istanbul ignore next */
      cov_9rop1arjf().s[29]++;
      if (
      /* istanbul ignore next */
      (cov_9rop1arjf().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_9rop1arjf().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_9rop1arjf().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_9rop1arjf().b[12][0]++;
        cov_9rop1arjf().s[30]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_9rop1arjf().b[12][1]++;
        cov_9rop1arjf().s[31]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_9rop1arjf().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_9rop1arjf().s[32]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_9rop1arjf().s[33]++;
  if (cache) {
    /* istanbul ignore next */
    cov_9rop1arjf().b[14][0]++;
    cov_9rop1arjf().s[34]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_9rop1arjf().b[14][1]++;
  }
  cov_9rop1arjf().s[35]++;
  return newObj;
}
function SearchPage() {
  /* istanbul ignore next */
  cov_9rop1arjf().f[4]++;
  const searchParams =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[36]++, (0, _navigation.useSearchParams)());
  const router =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[37]++, (0, _navigation.useRouter)());
  const {
    addNotification
  } =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[38]++, (0, _appStore.useAppStore)());
  const [query, setQuery] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[39]++, (0, _react.useState)(
  /* istanbul ignore next */
  (cov_9rop1arjf().b[15][0]++, searchParams.get('q')) ||
  /* istanbul ignore next */
  (cov_9rop1arjf().b[15][1]++, '')));
  const [results, setResults] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[40]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[41]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[42]++, (0, _react.useState)(null));
  const [totalResults, setTotalResults] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[43]++, (0, _react.useState)(0));
  const [currentPage, setCurrentPage] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[44]++, (0, _react.useState)(1));
  const [totalPages, setTotalPages] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[45]++, (0, _react.useState)(1));
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_9rop1arjf().s[46]++, (0, _react.useState)({
    type: 'all',
    category: undefined,
    dateRange: 'all',
    sortBy: 'relevance',
    sortOrder: 'desc'
  }));
  // Perform search
  /* istanbul ignore next */
  cov_9rop1arjf().s[47]++;
  const performSearch = async (searchQuery, searchFilters, page =
  /* istanbul ignore next */
  (cov_9rop1arjf().b[16][0]++, 1)) => {
    /* istanbul ignore next */
    cov_9rop1arjf().f[5]++;
    cov_9rop1arjf().s[48]++;
    if (!searchQuery.trim()) {
      /* istanbul ignore next */
      cov_9rop1arjf().b[17][0]++;
      cov_9rop1arjf().s[49]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_9rop1arjf().b[17][1]++;
    }
    cov_9rop1arjf().s[50]++;
    setIsLoading(true);
    /* istanbul ignore next */
    cov_9rop1arjf().s[51]++;
    setError(null);
    /* istanbul ignore next */
    cov_9rop1arjf().s[52]++;
    try {
      /* istanbul ignore next */
      cov_9rop1arjf().s[53]++;
      // Mock search API call - replace with actual implementation
      await new Promise(resolve => {
        /* istanbul ignore next */
        cov_9rop1arjf().f[6]++;
        cov_9rop1arjf().s[54]++;
        return setTimeout(resolve, 500);
      });
      // Mock results based on query and filters
      const mockResults =
      /* istanbul ignore next */
      (cov_9rop1arjf().s[55]++, [{
        id: '1',
        type: 'topic',
        title: `AI Ethics Discussion - ${searchQuery}`,
        description: 'Exploring the ethical implications of artificial intelligence in modern society',
        url: '/topics/ai-ethics-discussion',
        score: 95,
        author: {
          username: 'robot_overlord',
          avatar: null
        },
        category: {
          name: 'Philosophy',
          color: '#8B5CF6'
        },
        createdAt: '2024-01-15T10:00:00Z',
        stats: {
          posts: 42,
          participants: 15,
          views: 1250
        }
      }, {
        id: '2',
        type: 'post',
        title: `Machine Learning Best Practices for ${searchQuery}`,
        description: 'A comprehensive guide to implementing ML solutions effectively',
        url: '/topics/ml-guide/posts/123',
        score: 87,
        author: {
          username: 'ai_researcher',
          avatar: null
        },
        topic: {
          title: 'ML Guide',
          slug: 'ml-guide'
        },
        createdAt: '2024-01-10T14:30:00Z',
        stats: {
          upvotes: 45,
          downvotes: 3,
          replies: 12
        }
      }, {
        id: '3',
        type: 'user',
        title: 'robot_master',
        description: 'Senior AI Engineer specializing in robotics and automation',
        url: '/users/robot_master',
        score: 78,
        stats: {
          loyaltyScore: 1250,
          posts: 89,
          topics: 12
        },
        createdAt: '2023-06-01T00:00:00Z',
        lastActive: '2024-01-20T16:45:00Z'
      }].filter(result => {
        /* istanbul ignore next */
        cov_9rop1arjf().f[7]++;
        cov_9rop1arjf().s[56]++;
        return /* istanbul ignore next */(cov_9rop1arjf().b[18][0]++, searchFilters.type === 'all') ||
        /* istanbul ignore next */
        (cov_9rop1arjf().b[18][1]++, result.type === searchFilters.type);
      }));
      /* istanbul ignore next */
      cov_9rop1arjf().s[57]++;
      setResults(mockResults);
      /* istanbul ignore next */
      cov_9rop1arjf().s[58]++;
      setTotalResults(mockResults.length);
      /* istanbul ignore next */
      cov_9rop1arjf().s[59]++;
      setTotalPages(Math.ceil(mockResults.length / 20));
      /* istanbul ignore next */
      cov_9rop1arjf().s[60]++;
      setCurrentPage(page);
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_9rop1arjf().s[61]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_9rop1arjf().b[19][0]++, err.message) :
      /* istanbul ignore next */
      (cov_9rop1arjf().b[19][1]++, 'Search failed'));
      /* istanbul ignore next */
      cov_9rop1arjf().s[62]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_9rop1arjf().s[63]++;
      addNotification({
        type: 'error',
        title: 'Search Error',
        message: errorMessage
      });
    } finally {
      /* istanbul ignore next */
      cov_9rop1arjf().s[64]++;
      setIsLoading(false);
    }
  };
  // Initial search on page load
  /* istanbul ignore next */
  cov_9rop1arjf().s[65]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_9rop1arjf().f[8]++;
    cov_9rop1arjf().s[66]++;
    if (query) {
      /* istanbul ignore next */
      cov_9rop1arjf().b[20][0]++;
      cov_9rop1arjf().s[67]++;
      performSearch(query, filters);
    } else
    /* istanbul ignore next */
    {
      cov_9rop1arjf().b[20][1]++;
    }
  }, []);
  // Handle new search
  /* istanbul ignore next */
  cov_9rop1arjf().s[68]++;
  const handleSearch = newQuery => {
    /* istanbul ignore next */
    cov_9rop1arjf().f[9]++;
    cov_9rop1arjf().s[69]++;
    setQuery(newQuery);
    /* istanbul ignore next */
    cov_9rop1arjf().s[70]++;
    router.push(`/search?q=${encodeURIComponent(newQuery)}`);
    /* istanbul ignore next */
    cov_9rop1arjf().s[71]++;
    performSearch(newQuery, filters);
  };
  // Handle filter changes
  /* istanbul ignore next */
  cov_9rop1arjf().s[72]++;
  const handleFiltersChange = newFilters => {
    /* istanbul ignore next */
    cov_9rop1arjf().f[10]++;
    cov_9rop1arjf().s[73]++;
    setFilters(newFilters);
    /* istanbul ignore next */
    cov_9rop1arjf().s[74]++;
    if (query) {
      /* istanbul ignore next */
      cov_9rop1arjf().b[21][0]++;
      cov_9rop1arjf().s[75]++;
      performSearch(query, newFilters);
    } else
    /* istanbul ignore next */
    {
      cov_9rop1arjf().b[21][1]++;
    }
  };
  // Handle page changes
  /* istanbul ignore next */
  cov_9rop1arjf().s[76]++;
  const handlePageChange = page => {
    /* istanbul ignore next */
    cov_9rop1arjf().f[11]++;
    cov_9rop1arjf().s[77]++;
    setCurrentPage(page);
    /* istanbul ignore next */
    cov_9rop1arjf().s[78]++;
    performSearch(query, filters, page);
  };
  /* istanbul ignore next */
  cov_9rop1arjf().s[79]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-center justify-between",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-light-text",
          children: "Search"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light mt-1",
          children: "Find topics, posts, and users across The Robot Overlord"
        })]
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "max-w-2xl",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_SearchBar.SearchBar, {
        placeholder: "Search topics, posts, and users...",
        showResults: false,
        onSearch: searchQuery => {
          /* istanbul ignore next */
          cov_9rop1arjf().f[12]++;
          cov_9rop1arjf().s[80]++;
          return handleSearch(searchQuery);
        }
      })
    }),
    /* istanbul ignore next */
    (cov_9rop1arjf().b[22][0]++, query) &&
    /* istanbul ignore next */
    (cov_9rop1arjf().b[22][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-4 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-1",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_SearchFilters.SearchFilters, {
          filters: filters,
          onFiltersChange: handleFiltersChange,
          totalResults: totalResults
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-3",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_SearchResults.SearchResults, {
          query: query,
          results: results,
          isLoading: isLoading,
          error: error,
          totalResults: totalResults,
          currentPage: currentPage,
          totalPages: totalPages,
          onPageChange: handlePageChange,
          filters: filters
        })
      })]
    })),
    /* istanbul ignore next */
    (cov_9rop1arjf().b[23][0]++, !query) &&
    /* istanbul ignore next */
    (cov_9rop1arjf().b[23][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "text-center py-12",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "text-6xl mb-4",
        children: "\uD83D\uDD0D"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
        className: "text-xl font-bold text-light-text mb-2",
        children: "Search The Robot Overlord"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
        className: "text-muted-light mb-6",
        children: "Enter a search term above to find topics, posts, and users"
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center justify-center space-x-4",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "ghost",
          onClick: () => {
            /* istanbul ignore next */
            cov_9rop1arjf().f[13]++;
            cov_9rop1arjf().s[81]++;
            return router.push('/topics');
          },
          children: "Browse Topics"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "primary",
          onClick: () => {
            /* istanbul ignore next */
            cov_9rop1arjf().f[14]++;
            cov_9rop1arjf().s[82]++;
            return document.querySelector('input')?.focus();
          },
          children: "Start Searching"
        })]
      })]
    }))]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,