{"version":3,"names":["SearchPage","cov_9rop1arjf","f","searchParams","s","_navigation","useSearchParams","router","useRouter","addNotification","_appStore","useAppStore","query","setQuery","_react","useState","b","get","results","setResults","isLoading","setIsLoading","error","setError","totalResults","setTotalResults","currentPage","setCurrentPage","totalPages","setTotalPages","filters","setFilters","type","category","undefined","dateRange","sortBy","sortOrder","performSearch","searchQuery","searchFilters","page","trim","Promise","resolve","setTimeout","mockResults","id","title","description","url","score","author","username","avatar","name","color","createdAt","stats","posts","participants","views","topic","slug","upvotes","downvotes","replies","loyaltyScore","topics","lastActive","filter","result","length","Math","ceil","err","errorMessage","Error","message","useEffect","handleSearch","newQuery","push","encodeURIComponent","handleFiltersChange","newFilters","handlePageChange","_jsxruntime","jsxs","className","jsx","_SearchBar","SearchBar","placeholder","showResults","onSearch","_SearchFilters","SearchFilters","onFiltersChange","_SearchResults","SearchResults","onPageChange","_Button","Button","variant","onClick","document","querySelector","focus"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/search/page.tsx"],"sourcesContent":["/**\n * Search results page for The Robot Overlord\n * Displays comprehensive search results across topics, posts, and users\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useSearchParams, useRouter } from 'next/navigation';\nimport { SearchBar } from '@/components/search/SearchBar';\nimport { SearchResults } from '@/components/search/SearchResults';\nimport { SearchFilters } from '@/components/search/SearchFilters';\nimport { Button } from '@/components/ui/Button';\nimport { useAppStore } from '@/stores/appStore';\n\ninterface SearchFiltersType {\n  type: 'all' | 'topics' | 'posts' | 'users';\n  category?: string;\n  dateRange?: 'day' | 'week' | 'month' | 'year' | 'all';\n  sortBy: 'relevance' | 'date' | 'score' | 'activity';\n  sortOrder: 'desc' | 'asc';\n}\n\nexport default function SearchPage() {\n  const searchParams = useSearchParams();\n  const router = useRouter();\n  const { addNotification } = useAppStore();\n  \n  const [query, setQuery] = useState(searchParams.get('q') || '');\n  const [results, setResults] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [totalResults, setTotalResults] = useState(0);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  \n  const [filters, setFilters] = useState<SearchFiltersType>({\n    type: 'all',\n    category: undefined,\n    dateRange: 'all',\n    sortBy: 'relevance',\n    sortOrder: 'desc',\n  });\n\n  // Perform search\n  const performSearch = async (searchQuery: string, searchFilters: SearchFiltersType, page: number = 1) => {\n    if (!searchQuery.trim()) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Mock search API call - replace with actual implementation\n      await new Promise(resolve => setTimeout(resolve, 500));\n      \n      // Mock results based on query and filters\n      const mockResults = [\n        {\n          id: '1',\n          type: 'topic',\n          title: `AI Ethics Discussion - ${searchQuery}`,\n          description: 'Exploring the ethical implications of artificial intelligence in modern society',\n          url: '/topics/ai-ethics-discussion',\n          score: 95,\n          author: { username: 'robot_overlord', avatar: null },\n          category: { name: 'Philosophy', color: '#8B5CF6' },\n          createdAt: '2024-01-15T10:00:00Z',\n          stats: { posts: 42, participants: 15, views: 1250 }\n        },\n        {\n          id: '2',\n          type: 'post',\n          title: `Machine Learning Best Practices for ${searchQuery}`,\n          description: 'A comprehensive guide to implementing ML solutions effectively',\n          url: '/topics/ml-guide/posts/123',\n          score: 87,\n          author: { username: 'ai_researcher', avatar: null },\n          topic: { title: 'ML Guide', slug: 'ml-guide' },\n          createdAt: '2024-01-10T14:30:00Z',\n          stats: { upvotes: 45, downvotes: 3, replies: 12 }\n        },\n        {\n          id: '3',\n          type: 'user',\n          title: 'robot_master',\n          description: 'Senior AI Engineer specializing in robotics and automation',\n          url: '/users/robot_master',\n          score: 78,\n          stats: { loyaltyScore: 1250, posts: 89, topics: 12 },\n          createdAt: '2023-06-01T00:00:00Z',\n          lastActive: '2024-01-20T16:45:00Z'\n        }\n      ].filter(result => \n        searchFilters.type === 'all' || result.type === searchFilters.type\n      );\n\n      setResults(mockResults);\n      setTotalResults(mockResults.length);\n      setTotalPages(Math.ceil(mockResults.length / 20));\n      setCurrentPage(page);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Search failed';\n      setError(errorMessage);\n      addNotification({\n        type: 'error',\n        title: 'Search Error',\n        message: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initial search on page load\n  useEffect(() => {\n    if (query) {\n      performSearch(query, filters);\n    }\n  }, []);\n\n  // Handle new search\n  const handleSearch = (newQuery: string) => {\n    setQuery(newQuery);\n    router.push(`/search?q=${encodeURIComponent(newQuery)}`);\n    performSearch(newQuery, filters);\n  };\n\n  // Handle filter changes\n  const handleFiltersChange = (newFilters: SearchFiltersType) => {\n    setFilters(newFilters);\n    if (query) {\n      performSearch(query, newFilters);\n    }\n  };\n\n  // Handle page changes\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n    performSearch(query, filters, page);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-light-text\">Search</h1>\n          <p className=\"text-muted-light mt-1\">\n            Find topics, posts, and users across The Robot Overlord\n          </p>\n        </div>\n      </div>\n\n      {/* Search Bar */}\n      <div className=\"max-w-2xl\">\n        <SearchBar\n          placeholder=\"Search topics, posts, and users...\"\n          showResults={false}\n          onSearch={(searchQuery) => handleSearch(searchQuery)}\n        />\n      </div>\n\n      {/* Search Results */}\n      {query && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          {/* Filters Sidebar */}\n          <div className=\"lg:col-span-1\">\n            <SearchFilters\n              filters={filters}\n              onFiltersChange={handleFiltersChange}\n              totalResults={totalResults}\n            />\n          </div>\n\n          {/* Results */}\n          <div className=\"lg:col-span-3\">\n            <SearchResults\n              query={query}\n              results={results}\n              isLoading={isLoading}\n              error={error}\n              totalResults={totalResults}\n              currentPage={currentPage}\n              totalPages={totalPages}\n              onPageChange={handlePageChange}\n              filters={filters}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Empty State */}\n      {!query && (\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">üîç</div>\n          <h3 className=\"text-xl font-bold text-light-text mb-2\">\n            Search The Robot Overlord\n          </h3>\n          <p className=\"text-muted-light mb-6\">\n            Enter a search term above to find topics, posts, and users\n          </p>\n          <div className=\"flex items-center justify-center space-x-4\">\n            <Button \n              variant=\"ghost\" \n              onClick={() => router.push('/topics')}\n            >\n              Browse Topics\n            </Button>\n            <Button \n              variant=\"primary\" \n              onClick={() => document.querySelector('input')?.focus()}\n            >\n              Start Searching\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"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","ignoreList":[]}