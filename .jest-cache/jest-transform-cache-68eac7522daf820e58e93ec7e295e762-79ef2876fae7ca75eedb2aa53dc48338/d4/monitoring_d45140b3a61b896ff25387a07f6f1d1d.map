{"version":3,"names":["addBreadcrumb","cov_2mcms72dr","f","s","captureError","captureMessage","captureReactError","measureAsync","setUserContext","startTransaction","error","context","process","env","NEXT_PUBLIC_ENABLE_ERROR_TRACKING","b","console","_nextjs","withScope","scope","user","setUser","extra","Object","entries","forEach","key","value","setExtra","tags","setTag","level","setLevel","captureException","message","log","category","data","timestamp","Date","now","name","op","finish","setData","fn","transaction","result","function","errorInfo","component","componentStack"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/utils/monitoring.ts"],"sourcesContent":["import * as Sentry from '@sentry/nextjs'\n\n/**\n * Error tracking and monitoring utilities\n */\n\nexport interface ErrorContext {\n  user?: {\n    id: string\n    email?: string\n    username?: string\n  }\n  extra?: Record<string, any>\n  tags?: Record<string, string>\n  level?: 'error' | 'warning' | 'info' | 'debug'\n}\n\n/**\n * Capture and report errors to Sentry\n */\nexport function captureError(error: Error, context?: ErrorContext): void {\n  if (process.env.NEXT_PUBLIC_ENABLE_ERROR_TRACKING !== 'true') {\n    console.error('Error captured:', error, context)\n    return\n  }\n\n  Sentry.withScope((scope) => {\n    if (context?.user) {\n      scope.setUser(context.user)\n    }\n    \n    if (context?.extra) {\n      Object.entries(context.extra).forEach(([key, value]) => {\n        scope.setExtra(key, value)\n      })\n    }\n    \n    if (context?.tags) {\n      Object.entries(context.tags).forEach(([key, value]) => {\n        scope.setTag(key, value)\n      })\n    }\n    \n    if (context?.level) {\n      scope.setLevel(context.level)\n    }\n    \n    Sentry.captureException(error)\n  })\n}\n\n/**\n * Capture custom messages\n */\nexport function captureMessage(message: string, context?: ErrorContext): void {\n  if (process.env.NEXT_PUBLIC_ENABLE_ERROR_TRACKING !== 'true') {\n    console.log('Message captured:', message, context)\n    return\n  }\n\n  Sentry.withScope((scope) => {\n    if (context?.user) {\n      scope.setUser(context.user)\n    }\n    \n    if (context?.extra) {\n      Object.entries(context.extra).forEach(([key, value]) => {\n        scope.setExtra(key, value)\n      })\n    }\n    \n    if (context?.tags) {\n      Object.entries(context.tags).forEach(([key, value]) => {\n        scope.setTag(key, value)\n      })\n    }\n    \n    const level = context?.level || 'info'\n    Sentry.captureMessage(message, level)\n  })\n}\n\n/**\n * Set user context for error tracking\n */\nexport function setUserContext(user: ErrorContext['user']): void {\n  if (process.env.NEXT_PUBLIC_ENABLE_ERROR_TRACKING !== 'true') {\n    return\n  }\n\n  Sentry.setUser(user || null)\n}\n\n/**\n * Add breadcrumb for debugging\n */\nexport function addBreadcrumb(message: string, category?: string, data?: Record<string, any>): void {\n  if (process.env.NEXT_PUBLIC_ENABLE_ERROR_TRACKING !== 'true') {\n    return\n  }\n\n  Sentry.addBreadcrumb({\n    message,\n    category: category || 'custom',\n    data,\n    level: 'info',\n    timestamp: Date.now() / 1000,\n  })\n}\n\n/**\n * Performance monitoring\n */\nexport function startTransaction(name: string, op?: string) {\n  if (process.env.NEXT_PUBLIC_ENABLE_ERROR_TRACKING !== 'true') {\n    return {\n      finish: () => {},\n      setTag: () => {},\n      setData: () => {},\n    }\n  }\n\n  return Sentry.startTransaction({\n    name,\n    op: op || 'custom',\n  })\n}\n\n/**\n * Measure function execution time\n */\nexport async function measureAsync<T>(\n  name: string,\n  fn: () => Promise<T>,\n  context?: ErrorContext\n): Promise<T> {\n  const transaction = startTransaction(name, 'function')\n  \n  try {\n    const result = await fn()\n    transaction.setTag('status', 'success')\n    return result\n  } catch (error) {\n    transaction.setTag('status', 'error')\n    captureError(error as Error, {\n      ...context,\n      tags: {\n        ...context?.tags,\n        function: name,\n      },\n    })\n    throw error\n  } finally {\n    transaction.finish()\n  }\n}\n\n/**\n * React error boundary helper\n */\nexport function captureReactError(error: Error, errorInfo: { componentStack: string }): void {\n  captureError(error, {\n    tags: {\n      component: 'react',\n    },\n    extra: {\n      componentStack: errorInfo.componentStack,\n    },\n    level: 'error',\n  })\n}\n"],"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","ignoreList":[]}