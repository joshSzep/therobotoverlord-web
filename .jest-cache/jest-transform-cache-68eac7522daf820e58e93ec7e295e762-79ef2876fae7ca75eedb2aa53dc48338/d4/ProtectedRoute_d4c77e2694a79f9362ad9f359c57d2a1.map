{"version":3,"names":["cov_1vcrfv3spv","actualCoverage","s","ProtectedRoute","f","RoleGuard","useHasRole","withAuth","children","fallback","requireRole","b","redirectTo","user","isAuthenticated","isLoading","_AuthContext","useAuth","_jsxruntime","jsx","className","_Card","Card","jsxs","CardContent","window","location","href","length","hasRequiredRole","includes","role","variant","join","Fragment","Component","options","AuthenticatedComponent","props","roles","roleArray","Array","isArray","hasRole"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/auth/ProtectedRoute.tsx"],"sourcesContent":["/**\n * Protected Route wrapper component\n * Ensures user is authenticated before rendering children\n */\n\n'use client';\n\nimport React from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { Card, CardContent } from '@/components/ui/Card';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  fallback?: React.ReactNode;\n  requireRole?: string[];\n  redirectTo?: string;\n}\n\nexport function ProtectedRoute({ \n  children, \n  fallback,\n  requireRole = [],\n  redirectTo = '/login'\n}: ProtectedRouteProps) {\n  const { user, isAuthenticated, isLoading } = useAuth();\n\n  // Show loading state while checking authentication\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <Card className=\"w-96\">\n          <CardContent className=\"p-8 text-center\">\n            <div className=\"w-8 h-8 border-2 border-overlord-red border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n            <p className=\"text-muted-light\">Verifying your loyalty to the Overlord...</p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    if (typeof window !== 'undefined') {\n      window.location.href = redirectTo;\n    }\n    \n    return fallback || (\n      <div className=\"min-h-screen flex items-center justify-center bg-background\">\n        <Card className=\"w-96\">\n          <CardContent className=\"p-8 text-center\">\n            <div className=\"text-overlord-red text-4xl mb-4\">ü§ñ</div>\n            <h2 className=\"text-xl font-bold text-overlord-red mb-2\">Access Denied</h2>\n            <p className=\"text-muted-light mb-4\">\n              You must pledge your loyalty to the Robot Overlord to access this area.\n            </p>\n            <p className=\"text-sm text-muted-light\">\n              Redirecting to authentication portal...\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Check role requirements\n  if (requireRole.length > 0 && user) {\n    const hasRequiredRole = requireRole.includes(user.role);\n    \n    if (!hasRequiredRole) {\n      return fallback || (\n        <div className=\"min-h-screen flex items-center justify-center bg-background\">\n          <Card className=\"w-96\" variant=\"bordered\">\n            <CardContent className=\"p-8 text-center\">\n              <div className=\"text-rejected-red text-4xl mb-4\">‚ö†Ô∏è</div>\n              <h2 className=\"text-xl font-bold text-rejected-red mb-2\">Insufficient Privileges</h2>\n              <p className=\"text-muted-light mb-4\">\n                Your current loyalty level ({user.role}) does not grant access to this restricted area.\n              </p>\n              <p className=\"text-sm text-muted-light\">\n                Required access level: {requireRole.join(' or ')}\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      );\n    }\n  }\n\n  // User is authenticated and has required permissions\n  return <>{children}</>;\n}\n\n/**\n * Higher-order component version of ProtectedRoute\n */\nexport function withAuth<P extends object>(\n  Component: React.ComponentType<P>,\n  options?: Omit<ProtectedRouteProps, 'children'>\n) {\n  return function AuthenticatedComponent(props: P) {\n    return (\n      <ProtectedRoute {...options}>\n        <Component {...props} />\n      </ProtectedRoute>\n    );\n  };\n}\n\n/**\n * Hook to check if user has specific role\n */\nexport function useHasRole(roles: string | string[]): boolean {\n  const { user } = useAuth();\n  \n  if (!user) return false;\n  \n  const roleArray = Array.isArray(roles) ? roles : [roles];\n  return roleArray.includes(user.role);\n}\n\n/**\n * Component to conditionally render based on user role\n */\ninterface RoleGuardProps {\n  children: React.ReactNode;\n  roles: string | string[];\n  fallback?: React.ReactNode;\n}\n\nexport function RoleGuard({ children, roles, fallback = null }: RoleGuardProps) {\n  const hasRole = useHasRole(roles);\n  \n  return hasRole ? <>{children}</> : <>{fallback}</>;\n}\n"],"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","ignoreList":[]}