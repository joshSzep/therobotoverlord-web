{"version":3,"names":["cov_13moyphpsp","actualCoverage","s","UserRole","f","UserStatus"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/types/user.ts"],"sourcesContent":["/**\n * User type definitions for The Robot Overlord\n * Based on backend API schema\n */\n\n// User role enum\nexport enum UserRole {\n  CITIZEN = 'citizen',\n  MODERATOR = 'moderator', \n  ADMIN = 'admin'\n}\n\n// User status enum\nexport enum UserStatus {\n  ACTIVE = 'active',\n  SUSPENDED = 'suspended',\n  BANNED = 'banned'\n}\n\n// Badge type\nexport interface Badge {\n  id: string;\n  name: string;\n  description: string;\n  icon_url?: string;\n  rarity: 'common' | 'rare' | 'epic' | 'legendary';\n  earned_at: string;\n}\n\n// User badge (awarded badge with metadata)\nexport interface UserBadge {\n  id: string;\n  userId: string;\n  badgeId: string;\n  awardedAt: string;\n  awardedBy?: string;\n  reason?: string;\n}\n\n// User statistics\nexport interface UserStats {\n  total_posts: number;\n  approved_posts: number;\n  rejected_posts: number;\n  pending_posts: number;\n  loyalty_score: number;\n  reputation_score: number;\n  badges_count: number;\n  rank_position?: number;\n}\n\n// Main User interface\nexport interface User {\n  id: string;\n  email: string;\n  name: string;\n  username: string;\n  display_name?: string;\n  bio?: string;\n  avatar_url?: string;\n  role: UserRole;\n  status: UserStatus;\n  loyalty_score: number;\n  reputation_score: number;\n  created_at: string;\n  updated_at: string;\n  last_login?: string;\n  is_verified: boolean;\n  \n  // Optional expanded data\n  stats?: UserStats;\n  badges?: Badge[];\n}\n\n// User profile update payload\nexport interface UserProfileUpdate {\n  name?: string;\n  avatar_url?: string;\n}\n\n// Authentication token data\nexport interface AuthTokens {\n  access_token: string;\n  refresh_token: string;\n  token_type: string;\n  expires_in: number;\n}\n\n// Authentication response\nexport interface AuthResponse {\n  user: User;\n  tokens: AuthTokens;\n}\n\n// Login credentials\nexport interface LoginCredentials {\n  email: string;\n  password: string;\n}\n\n// OAuth provider data\nexport interface OAuthProvider {\n  provider: 'google';\n  code?: string;\n  token?: string;\n  redirect_uri?: string;\n}\n\n// Current user context data\nexport interface CurrentUser extends User {\n  permissions: string[];\n  preferences: UserPreferences;\n}\n\n// User preferences\nexport interface UserPreferences {\n  theme: 'dark' | 'light' | 'auto';\n  notifications_enabled: boolean;\n  email_notifications: boolean;\n  show_loyalty_score: boolean;\n}\n\n// Leaderboard entry\nexport interface LeaderboardEntry {\n  user: User;\n  rank: number;\n  loyalty_score: number;\n  reputation_score: number;\n  badges_count: number;\n  recent_activity: string;\n}\n\n// User activity log entry\nexport interface UserActivity {\n  id: string;\n  user_id: string;\n  action: string;\n  description: string;\n  metadata?: Record<string, any>;\n  created_at: string;\n}\n\n// User search filters\nexport interface UserSearchFilters {\n  query?: string;\n  role?: UserRole;\n  status?: UserStatus;\n  min_loyalty_score?: number;\n  max_loyalty_score?: number;\n  has_badges?: boolean;\n  sort_by?: 'loyalty_score' | 'reputation_score' | 'created_at' | 'name';\n  sort_order?: 'asc' | 'desc';\n  limit?: number;\n  offset?: number;\n}\n\n// User search response\nexport interface UserSearchResponse {\n  users: User[];\n  total: number;\n  page: number;\n  per_page: number;\n  has_more: boolean;\n}\n"],"mappings":"AAAA;;;GAAA,CAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACY;IAAAA,cAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,cAAA;AAAAA,cAAA,GAAAE,CAAA;;;;;;;;;;;;;;;;;;;;MAAAC,SAAA;IAAA;IAAAH,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAC,QAAA;;MAOAE,WAAA;IAAA;IAAAL,cAAA,GAAAI,CAAA;IAAAJ,cAAA,GAAAE,CAAA;WAAAG,UAAA;;;AAPL,IAAAF,QAAK;AAAA;AAAA,cAAAH,cAAA,GAAAE,CAAA,iBAAAC,QAAA;EAAA;EAAAH,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;;;;;;;;;;SAAAC,QAAA;;AAOL,IAAAE,UAAK;AAAA;AAAA,cAAAL,cAAA,GAAAE,CAAA,kBAAAG,UAAA;EAAA;EAAAL,cAAA,GAAAI,CAAA;EAAAJ,cAAA,GAAAE,CAAA;;;;;;;;;;SAAAG,UAAA","ignoreList":[]}