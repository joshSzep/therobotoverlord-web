ef7033f974dee06ed841361c279da6b1
/**
 * Post moderation queue page for The Robot Overlord
 * Allows moderators to approve, reject, and manage pending posts
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_1mwvvqt1yv() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/moderation/posts/page.tsx";
  var hash = "1a91c7777111be410767544b7fac9c6094186695";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/moderation/posts/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 34
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 88
        }
      },
      "7": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 86
        }
      },
      "8": {
        start: {
          line: 20,
          column: 16
        },
        end: {
          line: 20,
          column: 56
        }
      },
      "9": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "10": {
        start: {
          line: 22,
          column: 24
        },
        end: {
          line: 22,
          column: 72
        }
      },
      "11": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "12": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "14": {
        start: {
          line: 26,
          column: 39
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "15": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "16": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "17": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 20
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "19": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "21": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "22": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "23": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "24": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "26": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "27": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 88
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "30": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 95
        }
      },
      "31": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "32": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "33": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "34": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "35": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "36": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "37": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 18
        }
      },
      "38": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "39": {
        start: {
          line: 68,
          column: 32
        },
        end: {
          line: 68,
          column: 60
        }
      },
      "40": {
        start: {
          line: 69,
          column: 30
        },
        end: {
          line: 69,
          column: 54
        }
      },
      "41": {
        start: {
          line: 70,
          column: 38
        },
        end: {
          line: 70,
          column: 64
        }
      },
      "42": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 71,
          column: 56
        }
      },
      "43": {
        start: {
          line: 72,
          column: 46
        },
        end: {
          line: 72,
          column: 77
        }
      },
      "44": {
        start: {
          line: 73,
          column: 42
        },
        end: {
          line: 73,
          column: 65
        }
      },
      "45": {
        start: {
          line: 74,
          column: 40
        },
        end: {
          line: 74,
          column: 63
        }
      },
      "46": {
        start: {
          line: 75,
          column: 40
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "47": {
        start: {
          line: 76,
          column: 34
        },
        end: {
          line: 81,
          column: 6
        }
      },
      "48": {
        start: {
          line: 83,
          column: 22
        },
        end: {
          line: 107,
          column: 5
        }
      },
      "49": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 106,
          column: 9
        }
      },
      "50": {
        start: {
          line: 85,
          column: 12
        },
        end: {
          line: 85,
          column: 31
        }
      },
      "51": {
        start: {
          line: 86,
          column: 12
        },
        end: {
          line: 86,
          column: 27
        }
      },
      "52": {
        start: {
          line: 87,
          column: 29
        },
        end: {
          line: 87,
          column: 88
        }
      },
      "53": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 95,
          column: 13
        }
      },
      "54": {
        start: {
          line: 89,
          column: 16
        },
        end: {
          line: 89,
          column: 46
        }
      },
      "55": {
        start: {
          line: 90,
          column: 16
        },
        end: {
          line: 90,
          column: 56
        }
      },
      "56": {
        start: {
          line: 91,
          column: 16
        },
        end: {
          line: 91,
          column: 51
        }
      },
      "57": {
        start: {
          line: 92,
          column: 16
        },
        end: {
          line: 92,
          column: 37
        }
      },
      "58": {
        start: {
          line: 94,
          column: 16
        },
        end: {
          line: 94,
          column: 67
        }
      },
      "59": {
        start: {
          line: 97,
          column: 33
        },
        end: {
          line: 97,
          column: 92
        }
      },
      "60": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 35
        }
      },
      "61": {
        start: {
          line: 99,
          column: 12
        },
        end: {
          line: 103,
          column: 15
        }
      },
      "62": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 32
        }
      },
      "63": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 113,
          column: 7
        }
      },
      "64": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 20
        }
      },
      "65": {
        start: {
          line: 115,
          column: 33
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "66": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 146,
          column: 9
        }
      },
      "67": {
        start: {
          line: 117,
          column: 29
        },
        end: {
          line: 121,
          column: 14
        }
      },
      "68": {
        start: {
          line: 122,
          column: 12
        },
        end: {
          line: 138,
          column: 13
        }
      },
      "69": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 127,
          column: 19
        }
      },
      "70": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 39
        }
      },
      "71": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 135,
          column: 19
        }
      },
      "72": {
        start: {
          line: 132,
          column: 35
        },
        end: {
          line: 132,
          column: 48
        }
      },
      "73": {
        start: {
          line: 133,
          column: 20
        },
        end: {
          line: 133,
          column: 42
        }
      },
      "74": {
        start: {
          line: 134,
          column: 20
        },
        end: {
          line: 134,
          column: 34
        }
      },
      "75": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 60
        }
      },
      "76": {
        start: {
          line: 140,
          column: 33
        },
        end: {
          line: 140,
          column: 96
        }
      },
      "77": {
        start: {
          line: 141,
          column: 12
        },
        end: {
          line: 145,
          column: 15
        }
      },
      "78": {
        start: {
          line: 149,
          column: 33
        },
        end: {
          line: 186,
          column: 5
        }
      },
      "79": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 157,
          column: 9
        }
      },
      "80": {
        start: {
          line: 151,
          column: 12
        },
        end: {
          line: 155,
          column: 15
        }
      },
      "81": {
        start: {
          line: 156,
          column: 12
        },
        end: {
          line: 156,
          column: 19
        }
      },
      "82": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 185,
          column: 9
        }
      },
      "83": {
        start: {
          line: 159,
          column: 28
        },
        end: {
          line: 159,
          column: 53
        }
      },
      "84": {
        start: {
          line: 160,
          column: 29
        },
        end: {
          line: 164,
          column: 14
        }
      },
      "85": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 177,
          column: 13
        }
      },
      "86": {
        start: {
          line: 166,
          column: 44
        },
        end: {
          line: 166,
          column: 57
        }
      },
      "87": {
        start: {
          line: 167,
          column: 16
        },
        end: {
          line: 171,
          column: 19
        }
      },
      "88": {
        start: {
          line: 173,
          column: 16
        },
        end: {
          line: 173,
          column: 39
        }
      },
      "89": {
        start: {
          line: 174,
          column: 16
        },
        end: {
          line: 174,
          column: 44
        }
      },
      "90": {
        start: {
          line: 176,
          column: 16
        },
        end: {
          line: 176,
          column: 66
        }
      },
      "91": {
        start: {
          line: 179,
          column: 33
        },
        end: {
          line: 179,
          column: 102
        }
      },
      "92": {
        start: {
          line: 180,
          column: 12
        },
        end: {
          line: 184,
          column: 15
        }
      },
      "93": {
        start: {
          line: 188,
          column: 29
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "94": {
        start: {
          line: 189,
          column: 8
        },
        end: {
          line: 197,
          column: 11
        }
      },
      "95": {
        start: {
          line: 190,
          column: 27
        },
        end: {
          line: 190,
          column: 40
        }
      },
      "96": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 195,
          column: 13
        }
      },
      "97": {
        start: {
          line: 192,
          column: 16
        },
        end: {
          line: 192,
          column: 35
        }
      },
      "98": {
        start: {
          line: 194,
          column: 16
        },
        end: {
          line: 194,
          column: 38
        }
      },
      "99": {
        start: {
          line: 196,
          column: 12
        },
        end: {
          line: 196,
          column: 26
        }
      },
      "100": {
        start: {
          line: 200,
          column: 28
        },
        end: {
          line: 206,
          column: 5
        }
      },
      "101": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 205,
          column: 9
        }
      },
      "102": {
        start: {
          line: 202,
          column: 12
        },
        end: {
          line: 202,
          column: 66
        }
      },
      "103": {
        start: {
          line: 202,
          column: 55
        },
        end: {
          line: 202,
          column: 62
        }
      },
      "104": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 40
        }
      },
      "105": {
        start: {
          line: 208,
          column: 32
        },
        end: {
          line: 211,
          column: 5
        }
      },
      "106": {
        start: {
          line: 209,
          column: 8
        },
        end: {
          line: 209,
          column: 31
        }
      },
      "107": {
        start: {
          line: 210,
          column: 8
        },
        end: {
          line: 210,
          column: 26
        }
      },
      "108": {
        start: {
          line: 213,
          column: 29
        },
        end: {
          line: 215,
          column: 5
        }
      },
      "109": {
        start: {
          line: 214,
          column: 8
        },
        end: {
          line: 214,
          column: 24
        }
      },
      "110": {
        start: {
          line: 216,
          column: 29
        },
        end: {
          line: 259,
          column: 5
        }
      },
      "111": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 41
        }
      },
      "112": {
        start: {
          line: 217,
          column: 29
        },
        end: {
          line: 217,
          column: 41
        }
      },
      "113": {
        start: {
          line: 218,
          column: 22
        },
        end: {
          line: 218,
          column: 24
        }
      },
      "114": {
        start: {
          line: 219,
          column: 32
        },
        end: {
          line: 219,
          column: 33
        }
      },
      "115": {
        start: {
          line: 220,
          column: 24
        },
        end: {
          line: 220,
          column: 82
        }
      },
      "116": {
        start: {
          line: 221,
          column: 22
        },
        end: {
          line: 221,
          column: 75
        }
      },
      "117": {
        start: {
          line: 222,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "118": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 223,
          column: 67
        }
      },
      "119": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "120": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 233,
          column: 24
        }
      },
      "121": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 230,
          column: 62
        }
      },
      "122": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "123": {
        start: {
          line: 236,
          column: 20
        },
        end: {
          line: 236,
          column: 29
        }
      },
      "124": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 243,
          column: 19
        }
      },
      "125": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 48
        }
      },
      "126": {
        start: {
          line: 246,
          column: 8
        },
        end: {
          line: 254,
          column: 9
        }
      },
      "127": {
        start: {
          line: 247,
          column: 12
        },
        end: {
          line: 253,
          column: 24
        }
      },
      "128": {
        start: {
          line: 250,
          column: 29
        },
        end: {
          line: 250,
          column: 62
        }
      },
      "129": {
        start: {
          line: 255,
          column: 8
        },
        end: {
          line: 258,
          column: 11
        }
      },
      "130": {
        start: {
          line: 260,
          column: 4
        },
        end: {
          line: 492,
          column: 7
        }
      },
      "131": {
        start: {
          line: 290,
          column: 45
        },
        end: {
          line: 290,
          column: 67
        }
      },
      "132": {
        start: {
          line: 321,
          column: 53
        },
        end: {
          line: 321,
          column: 84
        }
      },
      "133": {
        start: {
          line: 328,
          column: 53
        },
        end: {
          line: 328,
          column: 101
        }
      },
      "134": {
        start: {
          line: 335,
          column: 53
        },
        end: {
          line: 335,
          column: 100
        }
      },
      "135": {
        start: {
          line: 342,
          column: 53
        },
        end: {
          line: 342,
          column: 80
        }
      },
      "136": {
        start: {
          line: 371,
          column: 60
        },
        end: {
          line: 426,
          column: 41
        }
      },
      "137": {
        start: {
          line: 437,
          column: 63
        },
        end: {
          line: 437,
          column: 96
        }
      },
      "138": {
        start: {
          line: 450,
          column: 68
        },
        end: {
          line: 455,
          column: 51
        }
      },
      "139": {
        start: {
          line: 453,
          column: 66
        },
        end: {
          line: 453,
          column: 101
        }
      },
      "140": {
        start: {
          line: 454,
          column: 74
        },
        end: {
          line: 454,
          column: 119
        }
      },
      "141": {
        start: {
          line: 479,
          column: 53
        },
        end: {
          line: 482,
          column: 46
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 40
          }
        },
        loc: {
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 34
          }
        },
        loc: {
          start: {
            line: 33,
            column: 53
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 33
      },
      "4": {
        name: "PostModerationPage",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 27
          }
        },
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 493,
            column: 1
          }
        },
        line: 66
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 83,
            column: 22
          },
          end: {
            line: 83,
            column: 23
          }
        },
        loc: {
          start: {
            line: 83,
            column: 40
          },
          end: {
            line: 107,
            column: 5
          }
        },
        line: 83
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 109,
            column: 26
          },
          end: {
            line: 109,
            column: 27
          }
        },
        loc: {
          start: {
            line: 109,
            column: 30
          },
          end: {
            line: 111,
            column: 5
          }
        },
        line: 109
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 115,
            column: 33
          },
          end: {
            line: 115,
            column: 34
          }
        },
        loc: {
          start: {
            line: 115,
            column: 65
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 115
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 131,
            column: 33
          },
          end: {
            line: 131,
            column: 34
          }
        },
        loc: {
          start: {
            line: 131,
            column: 41
          },
          end: {
            line: 135,
            column: 17
          }
        },
        line: 131
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 149,
            column: 33
          },
          end: {
            line: 149,
            column: 34
          }
        },
        loc: {
          start: {
            line: 149,
            column: 57
          },
          end: {
            line: 186,
            column: 5
          }
        },
        line: 149
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 188,
            column: 29
          },
          end: {
            line: 188,
            column: 30
          }
        },
        loc: {
          start: {
            line: 188,
            column: 49
          },
          end: {
            line: 198,
            column: 5
          }
        },
        line: 188
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 189,
            column: 25
          },
          end: {
            line: 189,
            column: 26
          }
        },
        loc: {
          start: {
            line: 189,
            column: 33
          },
          end: {
            line: 197,
            column: 9
          }
        },
        line: 189
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 200,
            column: 28
          },
          end: {
            line: 200,
            column: 29
          }
        },
        loc: {
          start: {
            line: 200,
            column: 40
          },
          end: {
            line: 206,
            column: 5
          }
        },
        line: 200
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 202,
            column: 47
          },
          end: {
            line: 202,
            column: 48
          }
        },
        loc: {
          start: {
            line: 202,
            column: 55
          },
          end: {
            line: 202,
            column: 62
          }
        },
        line: 202
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 208,
            column: 32
          },
          end: {
            line: 208,
            column: 33
          }
        },
        loc: {
          start: {
            line: 208,
            column: 46
          },
          end: {
            line: 211,
            column: 5
          }
        },
        line: 208
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 213,
            column: 29
          },
          end: {
            line: 213,
            column: 30
          }
        },
        loc: {
          start: {
            line: 213,
            column: 37
          },
          end: {
            line: 215,
            column: 5
          }
        },
        line: 213
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 216,
            column: 29
          },
          end: {
            line: 216,
            column: 30
          }
        },
        loc: {
          start: {
            line: 216,
            column: 33
          },
          end: {
            line: 259,
            column: 5
          }
        },
        line: 216
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 230,
            column: 25
          },
          end: {
            line: 230,
            column: 26
          }
        },
        loc: {
          start: {
            line: 230,
            column: 29
          },
          end: {
            line: 230,
            column: 62
          }
        },
        line: 230
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 240,
            column: 25
          },
          end: {
            line: 240,
            column: 26
          }
        },
        loc: {
          start: {
            line: 240,
            column: 29
          },
          end: {
            line: 240,
            column: 48
          }
        },
        line: 240
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 250,
            column: 25
          },
          end: {
            line: 250,
            column: 26
          }
        },
        loc: {
          start: {
            line: 250,
            column: 29
          },
          end: {
            line: 250,
            column: 62
          }
        },
        line: 250
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 290,
            column: 41
          },
          end: {
            line: 290,
            column: 42
          }
        },
        loc: {
          start: {
            line: 290,
            column: 45
          },
          end: {
            line: 290,
            column: 67
          }
        },
        line: 290
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 321,
            column: 49
          },
          end: {
            line: 321,
            column: 50
          }
        },
        loc: {
          start: {
            line: 321,
            column: 53
          },
          end: {
            line: 321,
            column: 84
          }
        },
        line: 321
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 328,
            column: 49
          },
          end: {
            line: 328,
            column: 50
          }
        },
        loc: {
          start: {
            line: 328,
            column: 53
          },
          end: {
            line: 328,
            column: 101
          }
        },
        line: 328
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 335,
            column: 49
          },
          end: {
            line: 335,
            column: 50
          }
        },
        loc: {
          start: {
            line: 335,
            column: 53
          },
          end: {
            line: 335,
            column: 100
          }
        },
        line: 335
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 342,
            column: 49
          },
          end: {
            line: 342,
            column: 50
          }
        },
        loc: {
          start: {
            line: 342,
            column: 53
          },
          end: {
            line: 342,
            column: 80
          }
        },
        line: 342
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 371,
            column: 38
          },
          end: {
            line: 371,
            column: 39
          }
        },
        loc: {
          start: {
            line: 371,
            column: 60
          },
          end: {
            line: 426,
            column: 41
          }
        },
        line: 371
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 437,
            column: 58
          },
          end: {
            line: 437,
            column: 59
          }
        },
        loc: {
          start: {
            line: 437,
            column: 63
          },
          end: {
            line: 437,
            column: 96
          }
        },
        line: 437
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 450,
            column: 46
          },
          end: {
            line: 450,
            column: 47
          }
        },
        loc: {
          start: {
            line: 450,
            column: 68
          },
          end: {
            line: 455,
            column: 51
          }
        },
        line: 450
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 453,
            column: 54
          },
          end: {
            line: 453,
            column: 55
          }
        },
        loc: {
          start: {
            line: 453,
            column: 66
          },
          end: {
            line: 453,
            column: 101
          }
        },
        line: 453
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 454,
            column: 56
          },
          end: {
            line: 454,
            column: 57
          }
        },
        loc: {
          start: {
            line: 454,
            column: 74
          },
          end: {
            line: 454,
            column: 119
          }
        },
        line: 454
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 479,
            column: 49
          },
          end: {
            line: 479,
            column: 50
          }
        },
        loc: {
          start: {
            line: 479,
            column: 53
          },
          end: {
            line: 482,
            column: 46
          }
        },
        line: 479
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 45
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 65
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 45
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 47
          }
        }, {
          start: {
            line: 37,
            column: 51
          },
          end: {
            line: 37,
            column: 76
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 31
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 49,
            column: 88
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 29
          }
        }, {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 79
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 52,
            column: 88
          }
        }, {
          start: {
            line: 52,
            column: 91
          },
          end: {
            line: 52,
            column: 95
          }
        }],
        line: 52
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 19
          },
          end: {
            line: 57,
            column: 13
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 33
          }
        }, {
          start: {
            line: 53,
            column: 37
          },
          end: {
            line: 53,
            column: 45
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "15": {
        loc: {
          start: {
            line: 83,
            column: 29
          },
          end: {
            line: 83,
            column: 37
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 83,
            column: 36
          },
          end: {
            line: 83,
            column: 37
          }
        }],
        line: 83
      },
      "16": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 95,
            column: 13
          }
        }, {
          start: {
            line: 93,
            column: 19
          },
          end: {
            line: 95,
            column: 13
          }
        }],
        line: 88
      },
      "17": {
        loc: {
          start: {
            line: 89,
            column: 25
          },
          end: {
            line: 89,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 89,
            column: 25
          },
          end: {
            line: 89,
            column: 38
          }
        }, {
          start: {
            line: 89,
            column: 42
          },
          end: {
            line: 89,
            column: 44
          }
        }],
        line: 89
      },
      "18": {
        loc: {
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 90,
            column: 30
          },
          end: {
            line: 90,
            column: 49
          }
        }, {
          start: {
            line: 90,
            column: 53
          },
          end: {
            line: 90,
            column: 54
          }
        }],
        line: 90
      },
      "19": {
        loc: {
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 91,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 91,
            column: 30
          },
          end: {
            line: 91,
            column: 44
          }
        }, {
          start: {
            line: 91,
            column: 48
          },
          end: {
            line: 91,
            column: 49
          }
        }],
        line: 91
      },
      "20": {
        loc: {
          start: {
            line: 97,
            column: 33
          },
          end: {
            line: 97,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 97,
            column: 56
          },
          end: {
            line: 97,
            column: 67
          }
        }, {
          start: {
            line: 97,
            column: 70
          },
          end: {
            line: 97,
            column: 92
          }
        }],
        line: 97
      },
      "21": {
        loc: {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 138,
            column: 13
          }
        }, {
          start: {
            line: 136,
            column: 19
          },
          end: {
            line: 138,
            column: 13
          }
        }],
        line: 122
      },
      "22": {
        loc: {
          start: {
            line: 140,
            column: 33
          },
          end: {
            line: 140,
            column: 96
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 140,
            column: 56
          },
          end: {
            line: 140,
            column: 67
          }
        }, {
          start: {
            line: 140,
            column: 70
          },
          end: {
            line: 140,
            column: 96
          }
        }],
        line: 140
      },
      "23": {
        loc: {
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 8
          },
          end: {
            line: 157,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "24": {
        loc: {
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 165,
            column: 12
          },
          end: {
            line: 177,
            column: 13
          }
        }, {
          start: {
            line: 175,
            column: 19
          },
          end: {
            line: 177,
            column: 13
          }
        }],
        line: 165
      },
      "25": {
        loc: {
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 165,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 165,
            column: 16
          },
          end: {
            line: 165,
            column: 32
          }
        }, {
          start: {
            line: 165,
            column: 36
          },
          end: {
            line: 165,
            column: 49
          }
        }],
        line: 165
      },
      "26": {
        loc: {
          start: {
            line: 168,
            column: 26
          },
          end: {
            line: 168,
            column: 66
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 168,
            column: 47
          },
          end: {
            line: 168,
            column: 56
          }
        }, {
          start: {
            line: 168,
            column: 59
          },
          end: {
            line: 168,
            column: 66
          }
        }],
        line: 168
      },
      "27": {
        loc: {
          start: {
            line: 170,
            column: 79
          },
          end: {
            line: 170,
            column: 131
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 170,
            column: 99
          },
          end: {
            line: 170,
            column: 126
          }
        }, {
          start: {
            line: 170,
            column: 129
          },
          end: {
            line: 170,
            column: 131
          }
        }],
        line: 170
      },
      "28": {
        loc: {
          start: {
            line: 179,
            column: 33
          },
          end: {
            line: 179,
            column: 102
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 179,
            column: 56
          },
          end: {
            line: 179,
            column: 67
          }
        }, {
          start: {
            line: 179,
            column: 70
          },
          end: {
            line: 179,
            column: 102
          }
        }],
        line: 179
      },
      "29": {
        loc: {
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 191,
            column: 12
          },
          end: {
            line: 195,
            column: 13
          }
        }, {
          start: {
            line: 193,
            column: 19
          },
          end: {
            line: 195,
            column: 13
          }
        }],
        line: 191
      },
      "30": {
        loc: {
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 201,
            column: 8
          },
          end: {
            line: 205,
            column: 9
          }
        }, {
          start: {
            line: 203,
            column: 15
          },
          end: {
            line: 205,
            column: 9
          }
        }],
        line: 201
      },
      "31": {
        loc: {
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 217,
            column: 8
          },
          end: {
            line: 217,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 217
      },
      "32": {
        loc: {
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 222,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 222
      },
      "33": {
        loc: {
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 226,
            column: 8
          },
          end: {
            line: 234,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 226
      },
      "34": {
        loc: {
          start: {
            line: 238,
            column: 25
          },
          end: {
            line: 238,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 238,
            column: 45
          },
          end: {
            line: 238,
            column: 54
          }
        }, {
          start: {
            line: 238,
            column: 57
          },
          end: {
            line: 238,
            column: 64
          }
        }],
        line: 238
      },
      "35": {
        loc: {
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 246,
            column: 8
          },
          end: {
            line: 254,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 246
      },
      "36": {
        loc: {
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 350,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 298,
            column: 12
          },
          end: {
            line: 298,
            column: 34
          }
        }, {
          start: {
            line: 298,
            column: 52
          },
          end: {
            line: 350,
            column: 14
          }
        }],
        line: 298
      },
      "37": {
        loc: {
          start: {
            line: 311,
            column: 36
          },
          end: {
            line: 311,
            column: 71
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 311,
            column: 63
          },
          end: {
            line: 311,
            column: 66
          }
        }, {
          start: {
            line: 311,
            column: 69
          },
          end: {
            line: 311,
            column: 71
          }
        }],
        line: 311
      },
      "38": {
        loc: {
          start: {
            line: 428,
            column: 38
          },
          end: {
            line: 486,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 428,
            column: 71
          },
          end: {
            line: 458,
            column: 30
          }
        }, {
          start: {
            line: 458,
            column: 47
          },
          end: {
            line: 486,
            column: 30
          }
        }],
        line: 428
      },
      "39": {
        loc: {
          start: {
            line: 436,
            column: 57
          },
          end: {
            line: 436,
            column: 112
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 436,
            column: 57
          },
          end: {
            line: 436,
            column: 92
          }
        }, {
          start: {
            line: 436,
            column: 96
          },
          end: {
            line: 436,
            column: 112
          }
        }],
        line: 436
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/moderation/posts/page.tsx"],
      sourcesContent: ["/**\n * Post moderation queue page for The Robot Overlord\n * Allows moderators to approve, reject, and manage pending posts\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { PostModerationCard } from '@/components/moderation/PostModerationCard';\nimport { ModerationFilters } from '@/components/moderation/ModerationFilters';\nimport { Button } from '@/components/ui/Button';\nimport { Card, CardContent, CardHeader } from '@/components/ui/Card';\nimport { LoadingSpinner, LoadingState } from '@/components/ui/LoadingSpinner';\nimport { useAppStore } from '@/stores/appStore';\nimport { postsService } from '@/services';\nimport { Post } from '@/types/posts';\n\ninterface ModerationFiltersType {\n  status: 'pending' | 'approved' | 'rejected' | 'flagged' | 'all';\n  category?: string;\n  dateRange?: 'day' | 'week' | 'month' | 'all';\n  sortBy: 'newest' | 'oldest' | 'priority';\n}\n\nexport default function PostModerationPage() {\n  const router = useRouter();\n  const { addNotification } = useAppStore();\n  \n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedPosts, setSelectedPosts] = useState<Set<string>>(new Set());\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  \n  const [filters, setFilters] = useState<ModerationFiltersType>({\n    status: 'pending',\n    category: undefined,\n    dateRange: 'all',\n    sortBy: 'newest',\n  });\n\n  // Load posts for moderation\n  const loadPosts = async (page: number = 1) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const response = await postsService.getPendingModeration(page, 20);\n\n      if (response.data) {\n        setPosts(response.data as Post[] || []);\n        setTotalPages((response as any).totalPages || 1);\n        setTotalCount((response as any).total || 0);\n        setCurrentPage(page);\n      } else {\n        throw new Error('Failed to load moderation queue');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load posts';\n      setError(errorMessage);\n      addNotification({\n        type: 'error',\n        title: 'Loading Error',\n        message: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Initial load\n  useEffect(() => {\n    loadPosts();\n  }, [filters]);\n\n  // Handle post moderation\n  const handlePostModeration = async (postId: string, action: 'approve' | 'reject' | 'flag', reason?: string) => {\n    try {\n      const response = await postsService.moderatePost(postId, {\n        action,\n        reason,\n        notifyAuthor: true,\n      });\n\n      if (response.success) {\n        addNotification({\n          type: 'success',\n          title: 'Post Moderated',\n          message: `Post has been ${action}d successfully`,\n        });\n\n        // Refresh the list\n        loadPosts(currentPage);\n        \n        // Remove from selected posts\n        setSelectedPosts(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(postId);\n          return newSet;\n        });\n      } else {\n        throw new Error(`Failed to ${action} post`);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : `Failed to ${action} post`;\n      addNotification({\n        type: 'error',\n        title: 'Moderation Error',\n        message: errorMessage,\n      });\n    }\n  };\n\n  // Handle bulk moderation\n  const handleBulkModeration = async (action: 'approve' | 'reject' | 'flag', reason?: string) => {\n    if (selectedPosts.size === 0) {\n      addNotification({\n        type: 'warning',\n        title: 'No Selection',\n        message: 'Please select posts to moderate',\n      });\n      return;\n    }\n\n    try {\n      const postIds = Array.from(selectedPosts);\n      const response = await postsService.bulkModerate(postIds, {\n        action,\n        reason,\n        notifyAuthor: true,\n      });\n\n      if (response.success && response.data) {\n        const { success, failed } = response.data;\n        \n        addNotification({\n          type: success.length > 0 ? 'success' : 'error',\n          title: 'Bulk Moderation Complete',\n          message: `${success.length} posts ${action}d successfully${failed.length > 0 ? `, ${failed.length} failed` : ''}`,\n        });\n\n        // Refresh the list\n        loadPosts(currentPage);\n        setSelectedPosts(new Set());\n      } else {\n        throw new Error(`Failed to bulk ${action} posts`);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : `Failed to bulk ${action} posts`;\n      addNotification({\n        type: 'error',\n        title: 'Bulk Moderation Error',\n        message: errorMessage,\n      });\n    }\n  };\n\n  // Handle post selection\n  const handlePostSelect = (postId: string, selected: boolean) => {\n    setSelectedPosts(prev => {\n      const newSet = new Set(prev);\n      if (selected) {\n        newSet.add(postId);\n      } else {\n        newSet.delete(postId);\n      }\n      return newSet;\n    });\n  };\n\n  // Handle select all\n  const handleSelectAll = (selected: boolean) => {\n    if (selected) {\n      setSelectedPosts(new Set(posts.map(post => post.id)));\n    } else {\n      setSelectedPosts(new Set());\n    }\n  };\n\n  // Handle filter changes\n  const handleFiltersChange = (newFilters: ModerationFiltersType) => {\n    setFilters(newFilters);\n    setCurrentPage(1);\n  };\n\n  // Handle page changes\n  const handlePageChange = (page: number) => {\n    loadPosts(page);\n  };\n\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n\n    const pages = [];\n    const maxVisiblePages = 5;\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    // Previous button\n    if (currentPage > 1) {\n      pages.push(\n        <Button\n          key=\"prev\"\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => handlePageChange(currentPage - 1)}\n          className=\"mr-2\"\n        >\n          \u2190 Previous\n        </Button>\n      );\n    }\n\n    // Page numbers\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(\n        <Button\n          key={i}\n          variant={currentPage === i ? \"primary\" : \"ghost\"}\n          size=\"sm\"\n          onClick={() => handlePageChange(i)}\n          className=\"mr-1\"\n        >\n          {i}\n        </Button>\n      );\n    }\n\n    // Next button\n    if (currentPage < totalPages) {\n      pages.push(\n        <Button\n          key=\"next\"\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => handlePageChange(currentPage + 1)}\n          className=\"ml-2\"\n        >\n          Next \u2192\n        </Button>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center justify-center mt-8 space-x-1\">\n        {pages}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-light-text\">Post Moderation</h1>\n          <p className=\"text-muted-light mt-1\">\n            Review and moderate posts awaiting approval\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <span className=\"text-sm text-muted-light\">\n            {totalCount} posts in queue\n          </span>\n          <Button\n            variant=\"ghost\"\n            onClick={() => loadPosts(currentPage)}\n            disabled={isLoading}\n          >\n            Refresh\n          </Button>\n        </div>\n      </div>\n\n      {/* Bulk Actions */}\n      {selectedPosts.size > 0 && (\n        <Card variant=\"bordered\" className=\"border-overlord-red/30\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-light-text font-medium\">\n                {selectedPosts.size} post{selectedPosts.size !== 1 ? 's' : ''} selected\n              </span>\n              <div className=\"flex items-center space-x-3\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => handleBulkModeration('approve')}\n                  className=\"text-approved-green hover:bg-approved-green/10\"\n                >\n                  \u2713 Approve All\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => handleBulkModeration('reject', 'Bulk rejection')}\n                  className=\"text-rejected-red hover:bg-rejected-red/10\"\n                >\n                  \u2717 Reject All\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => handleBulkModeration('flag', 'Requires review')}\n                  className=\"text-warning-amber hover:bg-warning-amber/10\"\n                >\n                  \uD83D\uDEA9 Flag All\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={() => setSelectedPosts(new Set())}\n                >\n                  Clear Selection\n                </Button>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Filters Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <ModerationFilters\n            filters={filters}\n            onFiltersChange={handleFiltersChange}\n            totalCount={totalCount}\n          />\n        </div>\n\n        {/* Posts List */}\n        <div className=\"lg:col-span-3\">\n          <LoadingState\n            isLoading={isLoading}\n            error={error}\n            loadingComponent={\n              <div className=\"space-y-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Card key={i} variant=\"bordered\" className=\"animate-pulse\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex items-start space-x-4\">\n                        <div className=\"w-6 h-6 bg-muted/20 rounded\"></div>\n                        <div className=\"flex-1\">\n                          <div className=\"h-6 bg-muted/20 rounded w-3/4 mb-2\"></div>\n                          <div className=\"h-4 bg-muted/20 rounded w-full mb-2\"></div>\n                          <div className=\"h-4 bg-muted/20 rounded w-2/3 mb-4\"></div>\n                          <div className=\"flex justify-between\">\n                            <div className=\"flex space-x-4\">\n                              <div className=\"h-4 bg-muted/20 rounded w-16\"></div>\n                              <div className=\"h-4 bg-muted/20 rounded w-20\"></div>\n                            </div>\n                            <div className=\"flex space-x-2\">\n                              <div className=\"h-8 bg-muted/20 rounded w-16\"></div>\n                              <div className=\"h-8 bg-muted/20 rounded w-16\"></div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            }\n          >\n            {posts.length > 0 ? (\n              <div className=\"space-y-4\">\n                {/* Select All */}\n                <div className=\"flex items-center space-x-3 p-4 bg-dark-bg/50 rounded-lg border border-muted/20\">\n                  <input\n                    type=\"checkbox\"\n                    checked={selectedPosts.size === posts.length && posts.length > 0}\n                    onChange={(e) => handleSelectAll(e.target.checked)}\n                    className=\"w-4 h-4 text-overlord-red bg-dark-bg border-muted/30 rounded focus:ring-overlord-red focus:ring-2\"\n                  />\n                  <span className=\"text-sm text-light-text\">\n                    Select all {posts.length} posts on this page\n                  </span>\n                </div>\n\n                {/* Posts */}\n                {posts.map((post) => (\n                  <PostModerationCard\n                    key={post.id}\n                    post={post}\n                    selected={selectedPosts.has(post.id)}\n                    onSelect={(selected) => handlePostSelect(post.id, selected)}\n                    onModerate={(action, reason) => handlePostModeration(post.id, action, reason)}\n                  />\n                ))}\n\n                {renderPagination()}\n              </div>\n            ) : (\n              <div className=\"text-center py-12\">\n                <div className=\"text-6xl mb-4\">\u2705</div>\n                <h3 className=\"text-xl font-bold text-light-text mb-2\">\n                  No Posts to Moderate\n                </h3>\n                <p className=\"text-muted-light mb-6\">\n                  All posts in the {filters.status} queue have been processed\n                </p>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => setFilters({ ...filters, status: 'pending' })}\n                >\n                  View Pending Posts\n                </Button>\n              </div>\n            )}\n          </LoadingState>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      names: ["PostModerationPage", "router", "useRouter", "addNotification", "useAppStore", "posts", "setPosts", "useState", "isLoading", "setIsLoading", "error", "setError", "selectedPosts", "setSelectedPosts", "Set", "currentPage", "setCurrentPage", "totalPages", "setTotalPages", "totalCount", "setTotalCount", "filters", "setFilters", "status", "category", "undefined", "dateRange", "sortBy", "loadPosts", "page", "response", "postsService", "getPendingModeration", "data", "total", "Error", "err", "errorMessage", "message", "type", "title", "useEffect", "handlePostModeration", "postId", "action", "reason", "moderatePost", "notifyAuthor", "success", "prev", "newSet", "delete", "handleBulkModeration", "size", "postIds", "Array", "from", "bulkModerate", "failed", "length", "handlePostSelect", "selected", "add", "handleSelectAll", "map", "post", "id", "handleFiltersChange", "newFilters", "handlePageChange", "renderPagination", "pages", "maxVisiblePages", "startPage", "Math", "max", "floor", "endPage", "min", "push", "Button", "variant", "onClick", "className", "i", "div", "h1", "p", "span", "disabled", "Card", "CardContent", "ModerationFilters", "onFiltersChange", "LoadingState", "loadingComponent", "_", "input", "checked", "onChange", "e", "target", "PostModerationCard", "has", "onSelect", "onModerate", "h3"],
      mappings: "AAAA;;;CAGC,GAED;;;;;+BAoBA;;;eAAwBA;;;;+DAlBmB;4BACjB;oCACS;mCACD;wBACX;sBACuB;gCACD;0BACjB;0BACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUd,SAASA;IACtB,MAAMC,SAASC,IAAAA,qBAAS;IACxB,MAAM,EAAEC,eAAe,EAAE,GAAGC,IAAAA,qBAAW;IAEvC,MAAM,CAACC,OAAOC,SAAS,GAAGC,IAAAA,eAAQ,EAAS,EAAE;IAC7C,MAAM,CAACC,WAAWC,aAAa,GAAGF,IAAAA,eAAQ,EAAC;IAC3C,MAAM,CAACG,OAAOC,SAAS,GAAGJ,IAAAA,eAAQ,EAAgB;IAClD,MAAM,CAACK,eAAeC,iBAAiB,GAAGN,IAAAA,eAAQ,EAAc,IAAIO;IACpE,MAAM,CAACC,aAAaC,eAAe,GAAGT,IAAAA,eAAQ,EAAC;IAC/C,MAAM,CAACU,YAAYC,cAAc,GAAGX,IAAAA,eAAQ,EAAC;IAC7C,MAAM,CAACY,YAAYC,cAAc,GAAGb,IAAAA,eAAQ,EAAC;IAE7C,MAAM,CAACc,SAASC,WAAW,GAAGf,IAAAA,eAAQ,EAAwB;QAC5DgB,QAAQ;QACRC,UAAUC;QACVC,WAAW;QACXC,QAAQ;IACV;IAEA,4BAA4B;IAC5B,MAAMC,YAAY,OAAOC,OAAe,CAAC;QACvC,IAAI;YACFpB,aAAa;YACbE,SAAS;YAET,MAAMmB,WAAW,MAAMC,sBAAY,CAACC,oBAAoB,CAACH,MAAM;YAE/D,IAAIC,SAASG,IAAI,EAAE;gBACjB3B,SAASwB,SAASG,IAAI,IAAc,EAAE;gBACtCf,cAAc,AAACY,SAAiBb,UAAU,IAAI;gBAC9CG,cAAc,AAACU,SAAiBI,KAAK,IAAI;gBACzClB,eAAea;YACjB,OAAO;gBACL,MAAM,IAAIM,MAAM;YAClB;QACF,EAAE,OAAOC,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG;YAC1D3B,SAAS0B;YACTlC,gBAAgB;gBACdoC,MAAM;gBACNC,OAAO;gBACPF,SAASD;YACX;QACF,SAAU;YACR5B,aAAa;QACf;IACF;IAEA,eAAe;IACfgC,IAAAA,gBAAS,EAAC;QACRb;IACF,GAAG;QAACP;KAAQ;IAEZ,yBAAyB;IACzB,MAAMqB,uBAAuB,OAAOC,QAAgBC,QAAuCC;QACzF,IAAI;YACF,MAAMf,WAAW,MAAMC,sBAAY,CAACe,YAAY,CAACH,QAAQ;gBACvDC;gBACAC;gBACAE,cAAc;YAChB;YAEA,IAAIjB,SAASkB,OAAO,EAAE;gBACpB7C,gBAAgB;oBACdoC,MAAM;oBACNC,OAAO;oBACPF,SAAS,CAAC,cAAc,EAAEM,OAAO,cAAc,CAAC;gBAClD;gBAEA,mBAAmB;gBACnBhB,UAAUb;gBAEV,6BAA6B;gBAC7BF,iBAAiBoC,CAAAA;oBACf,MAAMC,SAAS,IAAIpC,IAAImC;oBACvBC,OAAOC,MAAM,CAACR;oBACd,OAAOO;gBACT;YACF,OAAO;gBACL,MAAM,IAAIf,MAAM,CAAC,UAAU,EAAES,OAAO,KAAK,CAAC;YAC5C;QACF,EAAE,OAAOR,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG,CAAC,UAAU,EAAEM,OAAO,KAAK,CAAC;YACpFzC,gBAAgB;gBACdoC,MAAM;gBACNC,OAAO;gBACPF,SAASD;YACX;QACF;IACF;IAEA,yBAAyB;IACzB,MAAMe,uBAAuB,OAAOR,QAAuCC;QACzE,IAAIjC,cAAcyC,IAAI,KAAK,GAAG;YAC5BlD,gBAAgB;gBACdoC,MAAM;gBACNC,OAAO;gBACPF,SAAS;YACX;YACA;QACF;QAEA,IAAI;YACF,MAAMgB,UAAUC,MAAMC,IAAI,CAAC5C;YAC3B,MAAMkB,WAAW,MAAMC,sBAAY,CAAC0B,YAAY,CAACH,SAAS;gBACxDV;gBACAC;gBACAE,cAAc;YAChB;YAEA,IAAIjB,SAASkB,OAAO,IAAIlB,SAASG,IAAI,EAAE;gBACrC,MAAM,EAAEe,OAAO,EAAEU,MAAM,EAAE,GAAG5B,SAASG,IAAI;gBAEzC9B,gBAAgB;oBACdoC,MAAMS,QAAQW,MAAM,GAAG,IAAI,YAAY;oBACvCnB,OAAO;oBACPF,SAAS,GAAGU,QAAQW,MAAM,CAAC,OAAO,EAAEf,OAAO,cAAc,EAAEc,OAAOC,MAAM,GAAG,IAAI,CAAC,EAAE,EAAED,OAAOC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI;gBACnH;gBAEA,mBAAmB;gBACnB/B,UAAUb;gBACVF,iBAAiB,IAAIC;YACvB,OAAO;gBACL,MAAM,IAAIqB,MAAM,CAAC,eAAe,EAAES,OAAO,MAAM,CAAC;YAClD;QACF,EAAE,OAAOR,KAAK;YACZ,MAAMC,eAAeD,eAAeD,QAAQC,IAAIE,OAAO,GAAG,CAAC,eAAe,EAAEM,OAAO,MAAM,CAAC;YAC1FzC,gBAAgB;gBACdoC,MAAM;gBACNC,OAAO;gBACPF,SAASD;YACX;QACF;IACF;IAEA,wBAAwB;IACxB,MAAMuB,mBAAmB,CAACjB,QAAgBkB;QACxChD,iBAAiBoC,CAAAA;YACf,MAAMC,SAAS,IAAIpC,IAAImC;YACvB,IAAIY,UAAU;gBACZX,OAAOY,GAAG,CAACnB;YACb,OAAO;gBACLO,OAAOC,MAAM,CAACR;YAChB;YACA,OAAOO;QACT;IACF;IAEA,oBAAoB;IACpB,MAAMa,kBAAkB,CAACF;QACvB,IAAIA,UAAU;YACZhD,iBAAiB,IAAIC,IAAIT,MAAM2D,GAAG,CAACC,CAAAA,OAAQA,KAAKC,EAAE;QACpD,OAAO;YACLrD,iBAAiB,IAAIC;QACvB;IACF;IAEA,wBAAwB;IACxB,MAAMqD,sBAAsB,CAACC;QAC3B9C,WAAW8C;QACXpD,eAAe;IACjB;IAEA,sBAAsB;IACtB,MAAMqD,mBAAmB,CAACxC;QACxBD,UAAUC;IACZ;IAEA,MAAMyC,mBAAmB;QACvB,IAAIrD,cAAc,GAAG,OAAO;QAE5B,MAAMsD,QAAQ,EAAE;QAChB,MAAMC,kBAAkB;QACxB,IAAIC,YAAYC,KAAKC,GAAG,CAAC,GAAG5D,cAAc2D,KAAKE,KAAK,CAACJ,kBAAkB;QACvE,IAAIK,UAAUH,KAAKI,GAAG,CAAC7D,YAAYwD,YAAYD,kBAAkB;QAEjE,IAAIK,UAAUJ,YAAY,IAAID,iBAAiB;YAC7CC,YAAYC,KAAKC,GAAG,CAAC,GAAGE,UAAUL,kBAAkB;QACtD;QAEA,kBAAkB;QAClB,IAAIzD,cAAc,GAAG;YACnBwD,MAAMQ,IAAI,eACR,qBAACC,cAAM;gBAELC,SAAQ;gBACR5B,MAAK;gBACL6B,SAAS,IAAMb,iBAAiBtD,cAAc;gBAC9CoE,WAAU;0BACX;eALK;QASV;QAEA,eAAe;QACf,IAAK,IAAIC,IAAIX,WAAWW,KAAKP,SAASO,IAAK;YACzCb,MAAMQ,IAAI,eACR,qBAACC,cAAM;gBAELC,SAASlE,gBAAgBqE,IAAI,YAAY;gBACzC/B,MAAK;gBACL6B,SAAS,IAAMb,iBAAiBe;gBAChCD,WAAU;0BAETC;eANIA;QASX;QAEA,cAAc;QACd,IAAIrE,cAAcE,YAAY;YAC5BsD,MAAMQ,IAAI,eACR,qBAACC,cAAM;gBAELC,SAAQ;gBACR5B,MAAK;gBACL6B,SAAS,IAAMb,iBAAiBtD,cAAc;gBAC9CoE,WAAU;0BACX;eALK;QASV;QAEA,qBACE,qBAACE;YAAIF,WAAU;sBACZZ;;IAGP;IAEA,qBACE,sBAACc;QAAIF,WAAU;;0BAEb,sBAACE;gBAAIF,WAAU;;kCACb,sBAACE;;0CACC,qBAACC;gCAAGH,WAAU;0CAAqC;;0CACnD,qBAACI;gCAAEJ,WAAU;0CAAwB;;;;kCAIvC,sBAACE;wBAAIF,WAAU;;0CACb,sBAACK;gCAAKL,WAAU;;oCACbhE;oCAAW;;;0CAEd,qBAAC6D,cAAM;gCACLC,SAAQ;gCACRC,SAAS,IAAMtD,UAAUb;gCACzB0E,UAAUjF;0CACX;;;;;;YAOJI,cAAcyC,IAAI,GAAG,mBACpB,qBAACqC,UAAI;gBAACT,SAAQ;gBAAWE,WAAU;0BACjC,cAAA,qBAACQ,iBAAW;oBAACR,WAAU;8BACrB,cAAA,sBAACE;wBAAIF,WAAU;;0CACb,sBAACK;gCAAKL,WAAU;;oCACbvE,cAAcyC,IAAI;oCAAC;oCAAMzC,cAAcyC,IAAI,KAAK,IAAI,MAAM;oCAAG;;;0CAEhE,sBAACgC;gCAAIF,WAAU;;kDACb,qBAACH,cAAM;wCACLC,SAAQ;wCACR5B,MAAK;wCACL6B,SAAS,IAAM9B,qBAAqB;wCACpC+B,WAAU;kDACX;;kDAGD,qBAACH,cAAM;wCACLC,SAAQ;wCACR5B,MAAK;wCACL6B,SAAS,IAAM9B,qBAAqB,UAAU;wCAC9C+B,WAAU;kDACX;;kDAGD,qBAACH,cAAM;wCACLC,SAAQ;wCACR5B,MAAK;wCACL6B,SAAS,IAAM9B,qBAAqB,QAAQ;wCAC5C+B,WAAU;kDACX;;kDAGD,qBAACH,cAAM;wCACLC,SAAQ;wCACR5B,MAAK;wCACL6B,SAAS,IAAMrE,iBAAiB,IAAIC;kDACrC;;;;;;;;0BAUX,sBAACuE;gBAAIF,WAAU;;kCAEb,qBAACE;wBAAIF,WAAU;kCACb,cAAA,qBAACS,oCAAiB;4BAChBvE,SAASA;4BACTwE,iBAAiB1B;4BACjBhD,YAAYA;;;kCAKhB,qBAACkE;wBAAIF,WAAU;kCACb,cAAA,qBAACW,4BAAY;4BACXtF,WAAWA;4BACXE,OAAOA;4BACPqF,gCACE,qBAACV;gCAAIF,WAAU;0CACZ;uCAAI5B,MAAM;iCAAG,CAACS,GAAG,CAAC,CAACgC,GAAGZ,kBACrB,qBAACM,UAAI;wCAAST,SAAQ;wCAAWE,WAAU;kDACzC,cAAA,qBAACQ,iBAAW;4CAACR,WAAU;sDACrB,cAAA,sBAACE;gDAAIF,WAAU;;kEACb,qBAACE;wDAAIF,WAAU;;kEACf,sBAACE;wDAAIF,WAAU;;0EACb,qBAACE;gEAAIF,WAAU;;0EACf,qBAACE;gEAAIF,WAAU;;0EACf,qBAACE;gEAAIF,WAAU;;0EACf,sBAACE;gEAAIF,WAAU;;kFACb,sBAACE;wEAAIF,WAAU;;0FACb,qBAACE;gFAAIF,WAAU;;0FACf,qBAACE;gFAAIF,WAAU;;;;kFAEjB,sBAACE;wEAAIF,WAAU;;0FACb,qBAACE;gFAAIF,WAAU;;0FACf,qBAACE;gFAAIF,WAAU;;;;;;;;;;;uCAfhBC;;sCA0BhB/E,MAAMsD,MAAM,GAAG,kBACd,sBAAC0B;gCAAIF,WAAU;;kDAEb,sBAACE;wCAAIF,WAAU;;0DACb,qBAACc;gDACC1D,MAAK;gDACL2D,SAAStF,cAAcyC,IAAI,KAAKhD,MAAMsD,MAAM,IAAItD,MAAMsD,MAAM,GAAG;gDAC/DwC,UAAU,CAACC,IAAMrC,gBAAgBqC,EAAEC,MAAM,CAACH,OAAO;gDACjDf,WAAU;;0DAEZ,sBAACK;gDAAKL,WAAU;;oDAA0B;oDAC5B9E,MAAMsD,MAAM;oDAAC;;;;;oCAK5BtD,MAAM2D,GAAG,CAAC,CAACC,qBACV,qBAACqC,sCAAkB;4CAEjBrC,MAAMA;4CACNJ,UAAUjD,cAAc2F,GAAG,CAACtC,KAAKC,EAAE;4CACnCsC,UAAU,CAAC3C,WAAaD,iBAAiBK,KAAKC,EAAE,EAAEL;4CAClD4C,YAAY,CAAC7D,QAAQC,SAAWH,qBAAqBuB,KAAKC,EAAE,EAAEtB,QAAQC;2CAJjEoB,KAAKC,EAAE;oCAQfI;;+CAGH,sBAACe;gCAAIF,WAAU;;kDACb,qBAACE;wCAAIF,WAAU;kDAAgB;;kDAC/B,qBAACuB;wCAAGvB,WAAU;kDAAyC;;kDAGvD,sBAACI;wCAAEJ,WAAU;;4CAAwB;4CACjB9D,QAAQE,MAAM;4CAAC;;;kDAEnC,qBAACyD,cAAM;wCACLC,SAAQ;wCACRC,SAAS,IAAM5D,WAAW;gDAAE,GAAGD,OAAO;gDAAEE,QAAQ;4CAAU;kDAC3D;;;;;;;;;;AAUjB"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "1a91c7777111be410767544b7fac9c6094186695"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mwvvqt1yv = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mwvvqt1yv();
cov_1mwvvqt1yv().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1mwvvqt1yv().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[0]++;
    cov_1mwvvqt1yv().s[2]++;
    return PostModerationPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1mwvvqt1yv().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[5]++, require("next/navigation"));
const _PostModerationCard =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[6]++, require("../../../components/moderation/PostModerationCard"));
const _ModerationFilters =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[7]++, require("../../../components/moderation/ModerationFilters"));
const _Button =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[8]++, require("../../../components/ui/Button"));
const _Card =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[9]++, require("../../../components/ui/Card"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[10]++, require("../../../components/ui/LoadingSpinner"));
const _appStore =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[11]++, require("../../../stores/appStore"));
const _services =
/* istanbul ignore next */
(cov_1mwvvqt1yv().s[12]++, require("../../../services"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1mwvvqt1yv().f[1]++;
  cov_1mwvvqt1yv().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().b[0][0]++;
    cov_1mwvvqt1yv().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1mwvvqt1yv().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[2]++;
    cov_1mwvvqt1yv().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1mwvvqt1yv().f[3]++;
  cov_1mwvvqt1yv().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().b[2][0]++;
    cov_1mwvvqt1yv().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1mwvvqt1yv().b[2][1]++;
  }
  cov_1mwvvqt1yv().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().b[4][0]++;
    cov_1mwvvqt1yv().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1mwvvqt1yv().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().b[6][0]++;
    cov_1mwvvqt1yv().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1mwvvqt1yv().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[27]++,
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[12][0]++;
        cov_1mwvvqt1yv().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[12][1]++;
        cov_1mwvvqt1yv().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1mwvvqt1yv().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().b[14][0]++;
    cov_1mwvvqt1yv().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1mwvvqt1yv().b[14][1]++;
  }
  cov_1mwvvqt1yv().s[37]++;
  return newObj;
}
function PostModerationPage() {
  /* istanbul ignore next */
  cov_1mwvvqt1yv().f[4]++;
  const router =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[38]++, (0, _navigation.useRouter)());
  const {
    addNotification
  } =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[39]++, (0, _appStore.useAppStore)());
  const [posts, setPosts] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[40]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[41]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[42]++, (0, _react.useState)(null));
  const [selectedPosts, setSelectedPosts] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[43]++, (0, _react.useState)(new Set()));
  const [currentPage, setCurrentPage] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[44]++, (0, _react.useState)(1));
  const [totalPages, setTotalPages] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[45]++, (0, _react.useState)(1));
  const [totalCount, setTotalCount] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[46]++, (0, _react.useState)(0));
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().s[47]++, (0, _react.useState)({
    status: 'pending',
    category: undefined,
    dateRange: 'all',
    sortBy: 'newest'
  }));
  // Load posts for moderation
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[48]++;
  const loadPosts = async (page =
  /* istanbul ignore next */
  (cov_1mwvvqt1yv().b[15][0]++, 1)) => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[5]++;
    cov_1mwvvqt1yv().s[49]++;
    try {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[50]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[51]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[52]++, await _services.postsService.getPendingModeration(page, 20));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[53]++;
      if (response.data) {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[16][0]++;
        cov_1mwvvqt1yv().s[54]++;
        setPosts(
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[17][0]++, response.data) ||
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[17][1]++, []));
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[55]++;
        setTotalPages(
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[18][0]++, response.totalPages) ||
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[18][1]++, 1));
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[56]++;
        setTotalCount(
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[19][0]++, response.total) ||
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[19][1]++, 0));
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[57]++;
        setCurrentPage(page);
      } else {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[16][1]++;
        cov_1mwvvqt1yv().s[58]++;
        throw new Error('Failed to load moderation queue');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[59]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[20][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[20][1]++, 'Failed to load posts'));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[60]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[61]++;
      addNotification({
        type: 'error',
        title: 'Loading Error',
        message: errorMessage
      });
    } finally {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[62]++;
      setIsLoading(false);
    }
  };
  // Initial load
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[63]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[6]++;
    cov_1mwvvqt1yv().s[64]++;
    loadPosts();
  }, [filters]);
  // Handle post moderation
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[65]++;
  const handlePostModeration = async (postId, action, reason) => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[7]++;
    cov_1mwvvqt1yv().s[66]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[67]++, await _services.postsService.moderatePost(postId, {
        action,
        reason,
        notifyAuthor: true
      }));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[68]++;
      if (response.success) {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[21][0]++;
        cov_1mwvvqt1yv().s[69]++;
        addNotification({
          type: 'success',
          title: 'Post Moderated',
          message: `Post has been ${action}d successfully`
        });
        // Refresh the list
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[70]++;
        loadPosts(currentPage);
        // Remove from selected posts
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[71]++;
        setSelectedPosts(prev => {
          /* istanbul ignore next */
          cov_1mwvvqt1yv().f[8]++;
          const newSet =
          /* istanbul ignore next */
          (cov_1mwvvqt1yv().s[72]++, new Set(prev));
          /* istanbul ignore next */
          cov_1mwvvqt1yv().s[73]++;
          newSet.delete(postId);
          /* istanbul ignore next */
          cov_1mwvvqt1yv().s[74]++;
          return newSet;
        });
      } else {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[21][1]++;
        cov_1mwvvqt1yv().s[75]++;
        throw new Error(`Failed to ${action} post`);
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[76]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[22][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[22][1]++, `Failed to ${action} post`));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[77]++;
      addNotification({
        type: 'error',
        title: 'Moderation Error',
        message: errorMessage
      });
    }
  };
  // Handle bulk moderation
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[78]++;
  const handleBulkModeration = async (action, reason) => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[9]++;
    cov_1mwvvqt1yv().s[79]++;
    if (selectedPosts.size === 0) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[23][0]++;
      cov_1mwvvqt1yv().s[80]++;
      addNotification({
        type: 'warning',
        title: 'No Selection',
        message: 'Please select posts to moderate'
      });
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[81]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1mwvvqt1yv().b[23][1]++;
    }
    cov_1mwvvqt1yv().s[82]++;
    try {
      const postIds =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[83]++, Array.from(selectedPosts));
      const response =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[84]++, await _services.postsService.bulkModerate(postIds, {
        action,
        reason,
        notifyAuthor: true
      }));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[85]++;
      if (
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[25][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[25][1]++, response.data)) {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[24][0]++;
        const {
          success,
          failed
        } =
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().s[86]++, response.data);
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[87]++;
        addNotification({
          type: success.length > 0 ?
          /* istanbul ignore next */
          (cov_1mwvvqt1yv().b[26][0]++, 'success') :
          /* istanbul ignore next */
          (cov_1mwvvqt1yv().b[26][1]++, 'error'),
          title: 'Bulk Moderation Complete',
          message: `${success.length} posts ${action}d successfully${failed.length > 0 ?
          /* istanbul ignore next */
          (cov_1mwvvqt1yv().b[27][0]++, `, ${failed.length} failed`) :
          /* istanbul ignore next */
          (cov_1mwvvqt1yv().b[27][1]++, '')}`
        });
        // Refresh the list
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[88]++;
        loadPosts(currentPage);
        /* istanbul ignore next */
        cov_1mwvvqt1yv().s[89]++;
        setSelectedPosts(new Set());
      } else {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[24][1]++;
        cov_1mwvvqt1yv().s[90]++;
        throw new Error(`Failed to bulk ${action} posts`);
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[91]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[28][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().b[28][1]++, `Failed to bulk ${action} posts`));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[92]++;
      addNotification({
        type: 'error',
        title: 'Bulk Moderation Error',
        message: errorMessage
      });
    }
  };
  // Handle post selection
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[93]++;
  const handlePostSelect = (postId, selected) => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[10]++;
    cov_1mwvvqt1yv().s[94]++;
    setSelectedPosts(prev => {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().f[11]++;
      const newSet =
      /* istanbul ignore next */
      (cov_1mwvvqt1yv().s[95]++, new Set(prev));
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[96]++;
      if (selected) {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[29][0]++;
        cov_1mwvvqt1yv().s[97]++;
        newSet.add(postId);
      } else {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().b[29][1]++;
        cov_1mwvvqt1yv().s[98]++;
        newSet.delete(postId);
      }
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[99]++;
      return newSet;
    });
  };
  // Handle select all
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[100]++;
  const handleSelectAll = selected => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[12]++;
    cov_1mwvvqt1yv().s[101]++;
    if (selected) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[30][0]++;
      cov_1mwvvqt1yv().s[102]++;
      setSelectedPosts(new Set(posts.map(post => {
        /* istanbul ignore next */
        cov_1mwvvqt1yv().f[13]++;
        cov_1mwvvqt1yv().s[103]++;
        return post.id;
      })));
    } else {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[30][1]++;
      cov_1mwvvqt1yv().s[104]++;
      setSelectedPosts(new Set());
    }
  };
  // Handle filter changes
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[105]++;
  const handleFiltersChange = newFilters => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[14]++;
    cov_1mwvvqt1yv().s[106]++;
    setFilters(newFilters);
    /* istanbul ignore next */
    cov_1mwvvqt1yv().s[107]++;
    setCurrentPage(1);
  };
  // Handle page changes
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[108]++;
  const handlePageChange = page => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[15]++;
    cov_1mwvvqt1yv().s[109]++;
    loadPosts(page);
  };
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[110]++;
  const renderPagination = () => {
    /* istanbul ignore next */
    cov_1mwvvqt1yv().f[16]++;
    cov_1mwvvqt1yv().s[111]++;
    if (totalPages <= 1) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[31][0]++;
      cov_1mwvvqt1yv().s[112]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1mwvvqt1yv().b[31][1]++;
    }
    const pages =
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().s[113]++, []);
    const maxVisiblePages =
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().s[114]++, 5);
    let startPage =
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().s[115]++, Math.max(1, currentPage - Math.floor(maxVisiblePages / 2)));
    let endPage =
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().s[116]++, Math.min(totalPages, startPage + maxVisiblePages - 1));
    /* istanbul ignore next */
    cov_1mwvvqt1yv().s[117]++;
    if (endPage - startPage + 1 < maxVisiblePages) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[32][0]++;
      cov_1mwvvqt1yv().s[118]++;
      startPage = Math.max(1, endPage - maxVisiblePages + 1);
    } else
    /* istanbul ignore next */
    {
      cov_1mwvvqt1yv().b[32][1]++;
    }
    // Previous button
    cov_1mwvvqt1yv().s[119]++;
    if (currentPage > 1) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[33][0]++;
      cov_1mwvvqt1yv().s[120]++;
      pages.push(/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "ghost",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_1mwvvqt1yv().f[17]++;
          cov_1mwvvqt1yv().s[121]++;
          return handlePageChange(currentPage - 1);
        },
        className: "mr-2",
        children: "← Previous"
      }, "prev"));
    } else
    /* istanbul ignore next */
    {
      cov_1mwvvqt1yv().b[33][1]++;
    }
    // Page numbers
    cov_1mwvvqt1yv().s[122]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().s[123]++, startPage); i <= endPage; i++) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().s[124]++;
      pages.push(/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: currentPage === i ?
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[34][0]++, "primary") :
        /* istanbul ignore next */
        (cov_1mwvvqt1yv().b[34][1]++, "ghost"),
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_1mwvvqt1yv().f[18]++;
          cov_1mwvvqt1yv().s[125]++;
          return handlePageChange(i);
        },
        className: "mr-1",
        children: i
      }, i));
    }
    // Next button
    /* istanbul ignore next */
    cov_1mwvvqt1yv().s[126]++;
    if (currentPage < totalPages) {
      /* istanbul ignore next */
      cov_1mwvvqt1yv().b[35][0]++;
      cov_1mwvvqt1yv().s[127]++;
      pages.push(/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "ghost",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_1mwvvqt1yv().f[19]++;
          cov_1mwvvqt1yv().s[128]++;
          return handlePageChange(currentPage + 1);
        },
        className: "ml-2",
        children: "Next →"
      }, "next"));
    } else
    /* istanbul ignore next */
    {
      cov_1mwvvqt1yv().b[35][1]++;
    }
    cov_1mwvvqt1yv().s[129]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-center justify-center mt-8 space-x-1",
      children: pages
    });
  };
  /* istanbul ignore next */
  cov_1mwvvqt1yv().s[130]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-light-text",
          children: "Post Moderation"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light mt-1",
          children: "Review and moderate posts awaiting approval"
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "text-sm text-muted-light",
          children: [totalCount, " posts in queue"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "ghost",
          onClick: () => {
            /* istanbul ignore next */
            cov_1mwvvqt1yv().f[20]++;
            cov_1mwvvqt1yv().s[131]++;
            return loadPosts(currentPage);
          },
          disabled: isLoading,
          children: "Refresh"
        })]
      })]
    }),
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().b[36][0]++, selectedPosts.size > 0) &&
    /* istanbul ignore next */
    (cov_1mwvvqt1yv().b[36][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
      variant: "bordered",
      className: "border-overlord-red/30",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
        className: "p-4",
        children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-between",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
            className: "text-light-text font-medium",
            children: [selectedPosts.size, " post", selectedPosts.size !== 1 ?
            /* istanbul ignore next */
            (cov_1mwvvqt1yv().b[37][0]++, 's') :
            /* istanbul ignore next */
            (cov_1mwvvqt1yv().b[37][1]++, ''), " selected"]
          }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center space-x-3",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              variant: "ghost",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_1mwvvqt1yv().f[21]++;
                cov_1mwvvqt1yv().s[132]++;
                return handleBulkModeration('approve');
              },
              className: "text-approved-green hover:bg-approved-green/10",
              children: "✓ Approve All"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              variant: "ghost",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_1mwvvqt1yv().f[22]++;
                cov_1mwvvqt1yv().s[133]++;
                return handleBulkModeration('reject', 'Bulk rejection');
              },
              className: "text-rejected-red hover:bg-rejected-red/10",
              children: "✗ Reject All"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              variant: "ghost",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_1mwvvqt1yv().f[23]++;
                cov_1mwvvqt1yv().s[134]++;
                return handleBulkModeration('flag', 'Requires review');
              },
              className: "text-warning-amber hover:bg-warning-amber/10",
              children: "\uD83D\uDEA9 Flag All"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              variant: "ghost",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_1mwvvqt1yv().f[24]++;
                cov_1mwvvqt1yv().s[135]++;
                return setSelectedPosts(new Set());
              },
              children: "Clear Selection"
            })]
          })]
        })
      })
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-4 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-1",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_ModerationFilters.ModerationFilters, {
          filters: filters,
          onFiltersChange: handleFiltersChange,
          totalCount: totalCount
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-3",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingState, {
          isLoading: isLoading,
          error: error,
          loadingComponent: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-4",
            children: [...Array(5)].map((_, i) => {
              /* istanbul ignore next */
              cov_1mwvvqt1yv().f[25]++;
              cov_1mwvvqt1yv().s[136]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
                variant: "bordered",
                className: "animate-pulse",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
                  className: "p-6",
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex items-start space-x-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "w-6 h-6 bg-muted/20 rounded"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-6 bg-muted/20 rounded w-3/4 mb-2"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-4 bg-muted/20 rounded w-full mb-2"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-4 bg-muted/20 rounded w-2/3 mb-4"
                      }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex justify-between",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex space-x-4",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                            className: "h-4 bg-muted/20 rounded w-16"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                            className: "h-4 bg-muted/20 rounded w-20"
                          })]
                        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                          className: "flex space-x-2",
                          children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                            className: "h-8 bg-muted/20 rounded w-16"
                          }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                            className: "h-8 bg-muted/20 rounded w-16"
                          })]
                        })]
                      })]
                    })]
                  })
                })
              }, i);
            })
          }),
          children: posts.length > 0 ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1mwvvqt1yv().b[38][0]++, (0, _jsxruntime.jsxs)("div", {
            className: "space-y-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex items-center space-x-3 p-4 bg-dark-bg/50 rounded-lg border border-muted/20",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("input", {
                type: "checkbox",
                checked:
                /* istanbul ignore next */
                (cov_1mwvvqt1yv().b[39][0]++, selectedPosts.size === posts.length) &&
                /* istanbul ignore next */
                (cov_1mwvvqt1yv().b[39][1]++, posts.length > 0),
                onChange: e => {
                  /* istanbul ignore next */
                  cov_1mwvvqt1yv().f[26]++;
                  cov_1mwvvqt1yv().s[137]++;
                  return handleSelectAll(e.target.checked);
                },
                className: "w-4 h-4 text-overlord-red bg-dark-bg border-muted/30 rounded focus:ring-overlord-red focus:ring-2"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
                className: "text-sm text-light-text",
                children: ["Select all ", posts.length, " posts on this page"]
              })]
            }), posts.map(post => {
              /* istanbul ignore next */
              cov_1mwvvqt1yv().f[27]++;
              cov_1mwvvqt1yv().s[138]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_PostModerationCard.PostModerationCard, {
                post: post,
                selected: selectedPosts.has(post.id),
                onSelect: selected => {
                  /* istanbul ignore next */
                  cov_1mwvvqt1yv().f[28]++;
                  cov_1mwvvqt1yv().s[139]++;
                  return handlePostSelect(post.id, selected);
                },
                onModerate: (action, reason) => {
                  /* istanbul ignore next */
                  cov_1mwvvqt1yv().f[29]++;
                  cov_1mwvvqt1yv().s[140]++;
                  return handlePostModeration(post.id, action, reason);
                }
              }, post.id);
            }), renderPagination()]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1mwvvqt1yv().b[38][1]++, (0, _jsxruntime.jsxs)("div", {
            className: "text-center py-12",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-6xl mb-4",
              children: "✅"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-xl font-bold text-light-text mb-2",
              children: "No Posts to Moderate"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("p", {
              className: "text-muted-light mb-6",
              children: ["All posts in the ", filters.status, " queue have been processed"]
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              variant: "primary",
              onClick: () => {
                /* istanbul ignore next */
                cov_1mwvvqt1yv().f[30]++;
                cov_1mwvvqt1yv().s[141]++;
                return setFilters({
                  ...filters,
                  status: 'pending'
                });
              },
              children: "View Pending Posts"
            })]
          }))
        })
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,