8649aaa3b9351a6f14295a6f6c7c8b02
/**
 * Post search page for The Robot Overlord
 * Allows users to search and filter posts with advanced options
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_1fid1wo0jl() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/search/page.tsx";
  var hash = "efa9634d66e75b76c577b0cf8242598f61514cd5";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/search/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 19
        },
        end: {
          line: 18,
          column: 66
        }
      },
      "7": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 81
        }
      },
      "8": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 20,
          column: 81
        }
      },
      "9": {
        start: {
          line: 21,
          column: 14
        },
        end: {
          line: 21,
          column: 52
        }
      },
      "10": {
        start: {
          line: 22,
          column: 16
        },
        end: {
          line: 22,
          column: 56
        }
      },
      "11": {
        start: {
          line: 23,
          column: 24
        },
        end: {
          line: 23,
          column: 72
        }
      },
      "12": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 53
        }
      },
      "13": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 46
        }
      },
      "14": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "15": {
        start: {
          line: 27,
          column: 39
        },
        end: {
          line: 27,
          column: 51
        }
      },
      "16": {
        start: {
          line: 28,
          column: 28
        },
        end: {
          line: 28,
          column: 41
        }
      },
      "17": {
        start: {
          line: 29,
          column: 27
        },
        end: {
          line: 29,
          column: 40
        }
      },
      "18": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 32,
          column: 20
        }
      },
      "19": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 66
        }
      },
      "20": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "21": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 19
        }
      },
      "22": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 42,
          column: 5
        }
      },
      "23": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "24": {
        start: {
          line: 43,
          column: 16
        },
        end: {
          line: 43,
          column: 53
        }
      },
      "25": {
        start: {
          line: 44,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "26": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 30
        }
      },
      "27": {
        start: {
          line: 47,
          column: 17
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "28": {
        start: {
          line: 50,
          column: 32
        },
        end: {
          line: 50,
          column: 88
        }
      },
      "29": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "30": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "31": {
        start: {
          line: 53,
          column: 23
        },
        end: {
          line: 53,
          column: 95
        }
      },
      "32": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 58,
          column: 13
        }
      },
      "33": {
        start: {
          line: 55,
          column: 16
        },
        end: {
          line: 55,
          column: 57
        }
      },
      "34": {
        start: {
          line: 57,
          column: 16
        },
        end: {
          line: 57,
          column: 39
        }
      },
      "35": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 25
        }
      },
      "36": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 64,
          column: 5
        }
      },
      "37": {
        start: {
          line: 63,
          column: 8
        },
        end: {
          line: 63,
          column: 31
        }
      },
      "38": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 18
        }
      },
      "39": {
        start: {
          line: 68,
          column: 19
        },
        end: {
          line: 68,
          column: 47
        }
      },
      "40": {
        start: {
          line: 69,
          column: 25
        },
        end: {
          line: 69,
          column: 59
        }
      },
      "41": {
        start: {
          line: 70,
          column: 32
        },
        end: {
          line: 70,
          column: 60
        }
      },
      "42": {
        start: {
          line: 71,
          column: 30
        },
        end: {
          line: 71,
          column: 54
        }
      },
      "43": {
        start: {
          line: 72,
          column: 38
        },
        end: {
          line: 72,
          column: 65
        }
      },
      "44": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 73,
          column: 56
        }
      },
      "45": {
        start: {
          line: 74,
          column: 42
        },
        end: {
          line: 74,
          column: 65
        }
      },
      "46": {
        start: {
          line: 75,
          column: 40
        },
        end: {
          line: 75,
          column: 63
        }
      },
      "47": {
        start: {
          line: 76,
          column: 40
        },
        end: {
          line: 76,
          column: 63
        }
      },
      "48": {
        start: {
          line: 77,
          column: 42
        },
        end: {
          line: 77,
          column: 69
        }
      },
      "49": {
        start: {
          line: 78,
          column: 34
        },
        end: {
          line: 89,
          column: 6
        }
      },
      "50": {
        start: {
          line: 91,
          column: 22
        },
        end: {
          line: 110,
          column: 6
        }
      },
      "51": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 92,
          column: 44
        }
      },
      "52": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "53": {
        start: {
          line: 93,
          column: 30
        },
        end: {
          line: 93,
          column: 64
        }
      },
      "54": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 77
        }
      },
      "55": {
        start: {
          line: 94,
          column: 33
        },
        end: {
          line: 94,
          column: 77
        }
      },
      "56": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 68
        }
      },
      "57": {
        start: {
          line: 95,
          column: 30
        },
        end: {
          line: 95,
          column: 68
        }
      },
      "58": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "59": {
        start: {
          line: 96,
          column: 31
        },
        end: {
          line: 96,
          column: 71
        }
      },
      "60": {
        start: {
          line: 97,
          column: 8
        },
        end: {
          line: 97,
          column: 105
        }
      },
      "61": {
        start: {
          line: 97,
          column: 59
        },
        end: {
          line: 97,
          column: 105
        }
      },
      "62": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 90
        }
      },
      "63": {
        start: {
          line: 98,
          column: 44
        },
        end: {
          line: 98,
          column: 90
        }
      },
      "64": {
        start: {
          line: 99,
          column: 8
        },
        end: {
          line: 99,
          column: 87
        }
      },
      "65": {
        start: {
          line: 99,
          column: 47
        },
        end: {
          line: 99,
          column: 87
        }
      },
      "66": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 81
        }
      },
      "67": {
        start: {
          line: 100,
          column: 41
        },
        end: {
          line: 100,
          column: 81
        }
      },
      "68": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 88
        }
      },
      "69": {
        start: {
          line: 101,
          column: 33
        },
        end: {
          line: 101,
          column: 88
        }
      },
      "70": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 68
        }
      },
      "71": {
        start: {
          line: 102,
          column: 35
        },
        end: {
          line: 102,
          column: 68
        }
      },
      "72": {
        start: {
          line: 103,
          column: 28
        },
        end: {
          line: 103,
          column: 45
        }
      },
      "73": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 85
        }
      },
      "74": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 107,
          column: 11
        }
      },
      "75": {
        start: {
          line: 112,
          column: 24
        },
        end: {
          line: 154,
          column: 5
        }
      },
      "76": {
        start: {
          line: 113,
          column: 30
        },
        end: {
          line: 113,
          column: 51
        }
      },
      "77": {
        start: {
          line: 114,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "78": {
        start: {
          line: 115,
          column: 12
        },
        end: {
          line: 115,
          column: 19
        }
      },
      "79": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 153,
          column: 9
        }
      },
      "80": {
        start: {
          line: 118,
          column: 12
        },
        end: {
          line: 118,
          column: 31
        }
      },
      "81": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 27
        }
      },
      "82": {
        start: {
          line: 120,
          column: 29
        },
        end: {
          line: 133,
          column: 14
        }
      },
      "83": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 142,
          column: 13
        }
      },
      "84": {
        start: {
          line: 135,
          column: 16
        },
        end: {
          line: 135,
          column: 40
        }
      },
      "85": {
        start: {
          line: 136,
          column: 16
        },
        end: {
          line: 136,
          column: 56
        }
      },
      "86": {
        start: {
          line: 137,
          column: 16
        },
        end: {
          line: 137,
          column: 51
        }
      },
      "87": {
        start: {
          line: 138,
          column: 16
        },
        end: {
          line: 138,
          column: 37
        }
      },
      "88": {
        start: {
          line: 139,
          column: 16
        },
        end: {
          line: 139,
          column: 37
        }
      },
      "89": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 141,
          column: 58
        }
      },
      "90": {
        start: {
          line: 144,
          column: 33
        },
        end: {
          line: 144,
          column: 94
        }
      },
      "91": {
        start: {
          line: 145,
          column: 12
        },
        end: {
          line: 145,
          column: 35
        }
      },
      "92": {
        start: {
          line: 146,
          column: 12
        },
        end: {
          line: 150,
          column: 15
        }
      },
      "93": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 32
        }
      },
      "94": {
        start: {
          line: 156,
          column: 25
        },
        end: {
          line: 164,
          column: 5
        }
      },
      "95": {
        start: {
          line: 157,
          column: 27
        },
        end: {
          line: 160,
          column: 9
        }
      },
      "96": {
        start: {
          line: 161,
          column: 8
        },
        end: {
          line: 161,
          column: 31
        }
      },
      "97": {
        start: {
          line: 162,
          column: 8
        },
        end: {
          line: 162,
          column: 30
        }
      },
      "98": {
        start: {
          line: 163,
          column: 8
        },
        end: {
          line: 163,
          column: 35
        }
      },
      "99": {
        start: {
          line: 166,
          column: 32
        },
        end: {
          line: 175,
          column: 5
        }
      },
      "100": {
        start: {
          line: 167,
          column: 31
        },
        end: {
          line: 170,
          column: 9
        }
      },
      "101": {
        start: {
          line: 171,
          column: 8
        },
        end: {
          line: 171,
          column: 35
        }
      },
      "102": {
        start: {
          line: 172,
          column: 8
        },
        end: {
          line: 172,
          column: 34
        }
      },
      "103": {
        start: {
          line: 173,
          column: 8
        },
        end: {
          line: 173,
          column: 26
        }
      },
      "104": {
        start: {
          line: 174,
          column: 8
        },
        end: {
          line: 174,
          column: 39
        }
      },
      "105": {
        start: {
          line: 177,
          column: 29
        },
        end: {
          line: 179,
          column: 5
        }
      },
      "106": {
        start: {
          line: 178,
          column: 8
        },
        end: {
          line: 178,
          column: 26
        }
      },
      "107": {
        start: {
          line: 181,
          column: 31
        },
        end: {
          line: 199,
          column: 5
        }
      },
      "108": {
        start: {
          line: 182,
          column: 31
        },
        end: {
          line: 193,
          column: 9
        }
      },
      "109": {
        start: {
          line: 194,
          column: 8
        },
        end: {
          line: 194,
          column: 35
        }
      },
      "110": {
        start: {
          line: 195,
          column: 8
        },
        end: {
          line: 195,
          column: 21
        }
      },
      "111": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 30
        }
      },
      "112": {
        start: {
          line: 197,
          column: 8
        },
        end: {
          line: 197,
          column: 26
        }
      },
      "113": {
        start: {
          line: 198,
          column: 8
        },
        end: {
          line: 198,
          column: 40
        }
      },
      "114": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 205,
          column: 11
        }
      },
      "115": {
        start: {
          line: 202,
          column: 8
        },
        end: {
          line: 204,
          column: 9
        }
      },
      "116": {
        start: {
          line: 203,
          column: 12
        },
        end: {
          line: 203,
          column: 27
        }
      },
      "117": {
        start: {
          line: 206,
          column: 29
        },
        end: {
          line: 249,
          column: 5
        }
      },
      "118": {
        start: {
          line: 207,
          column: 8
        },
        end: {
          line: 207,
          column: 41
        }
      },
      "119": {
        start: {
          line: 207,
          column: 29
        },
        end: {
          line: 207,
          column: 41
        }
      },
      "120": {
        start: {
          line: 208,
          column: 22
        },
        end: {
          line: 208,
          column: 24
        }
      },
      "121": {
        start: {
          line: 209,
          column: 32
        },
        end: {
          line: 209,
          column: 33
        }
      },
      "122": {
        start: {
          line: 210,
          column: 24
        },
        end: {
          line: 210,
          column: 82
        }
      },
      "123": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 211,
          column: 75
        }
      },
      "124": {
        start: {
          line: 212,
          column: 8
        },
        end: {
          line: 214,
          column: 9
        }
      },
      "125": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 67
        }
      },
      "126": {
        start: {
          line: 216,
          column: 8
        },
        end: {
          line: 224,
          column: 9
        }
      },
      "127": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 223,
          column: 24
        }
      },
      "128": {
        start: {
          line: 220,
          column: 29
        },
        end: {
          line: 220,
          column: 62
        }
      },
      "129": {
        start: {
          line: 226,
          column: 8
        },
        end: {
          line: 234,
          column: 9
        }
      },
      "130": {
        start: {
          line: 226,
          column: 20
        },
        end: {
          line: 226,
          column: 29
        }
      },
      "131": {
        start: {
          line: 227,
          column: 12
        },
        end: {
          line: 233,
          column: 19
        }
      },
      "132": {
        start: {
          line: 230,
          column: 29
        },
        end: {
          line: 230,
          column: 48
        }
      },
      "133": {
        start: {
          line: 236,
          column: 8
        },
        end: {
          line: 244,
          column: 9
        }
      },
      "134": {
        start: {
          line: 237,
          column: 12
        },
        end: {
          line: 243,
          column: 24
        }
      },
      "135": {
        start: {
          line: 240,
          column: 29
        },
        end: {
          line: 240,
          column: 62
        }
      },
      "136": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 248,
          column: 11
        }
      },
      "137": {
        start: {
          line: 250,
          column: 4
        },
        end: {
          line: 462,
          column: 7
        }
      },
      "138": {
        start: {
          line: 321,
          column: 60
        },
        end: {
          line: 360,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 26,
            column: 9
          },
          end: {
            line: 26,
            column: 33
          }
        },
        loc: {
          start: {
            line: 26,
            column: 47
          },
          end: {
            line: 33,
            column: 1
          }
        },
        line: 26
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 39
          },
          end: {
            line: 30,
            column: 40
          }
        },
        loc: {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 30
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 34
          }
        },
        loc: {
          start: {
            line: 34,
            column: 53
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 34
      },
      "4": {
        name: "PostSearchPage",
        decl: {
          start: {
            line: 67,
            column: 9
          },
          end: {
            line: 67,
            column: 23
          }
        },
        loc: {
          start: {
            line: 67,
            column: 26
          },
          end: {
            line: 463,
            column: 1
          }
        },
        line: 67
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 91,
            column: 46
          },
          end: {
            line: 91,
            column: 47
          }
        },
        loc: {
          start: {
            line: 91,
            column: 60
          },
          end: {
            line: 108,
            column: 5
          }
        },
        line: 91
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 112,
            column: 24
          },
          end: {
            line: 112,
            column: 25
          }
        },
        loc: {
          start: {
            line: 112,
            column: 54
          },
          end: {
            line: 154,
            column: 5
          }
        },
        line: 112
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 156,
            column: 25
          },
          end: {
            line: 156,
            column: 26
          }
        },
        loc: {
          start: {
            line: 156,
            column: 34
          },
          end: {
            line: 164,
            column: 5
          }
        },
        line: 156
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 166,
            column: 32
          },
          end: {
            line: 166,
            column: 33
          }
        },
        loc: {
          start: {
            line: 166,
            column: 46
          },
          end: {
            line: 175,
            column: 5
          }
        },
        line: 166
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 177,
            column: 29
          },
          end: {
            line: 177,
            column: 30
          }
        },
        loc: {
          start: {
            line: 177,
            column: 37
          },
          end: {
            line: 179,
            column: 5
          }
        },
        line: 177
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 181,
            column: 31
          },
          end: {
            line: 181,
            column: 32
          }
        },
        loc: {
          start: {
            line: 181,
            column: 35
          },
          end: {
            line: 199,
            column: 5
          }
        },
        line: 181
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 201,
            column: 26
          },
          end: {
            line: 201,
            column: 27
          }
        },
        loc: {
          start: {
            line: 201,
            column: 30
          },
          end: {
            line: 205,
            column: 5
          }
        },
        line: 201
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 206,
            column: 29
          },
          end: {
            line: 206,
            column: 30
          }
        },
        loc: {
          start: {
            line: 206,
            column: 33
          },
          end: {
            line: 249,
            column: 5
          }
        },
        line: 206
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 220,
            column: 25
          },
          end: {
            line: 220,
            column: 26
          }
        },
        loc: {
          start: {
            line: 220,
            column: 29
          },
          end: {
            line: 220,
            column: 62
          }
        },
        line: 220
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 230,
            column: 25
          },
          end: {
            line: 230,
            column: 26
          }
        },
        loc: {
          start: {
            line: 230,
            column: 29
          },
          end: {
            line: 230,
            column: 48
          }
        },
        line: 230
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 240,
            column: 25
          },
          end: {
            line: 240,
            column: 26
          }
        },
        loc: {
          start: {
            line: 240,
            column: 29
          },
          end: {
            line: 240,
            column: 62
          }
        },
        line: 240
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 321,
            column: 38
          },
          end: {
            line: 321,
            column: 39
          }
        },
        loc: {
          start: {
            line: 321,
            column: 60
          },
          end: {
            line: 360,
            column: 41
          }
        },
        line: 321
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 27,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 27
      },
      "1": {
        loc: {
          start: {
            line: 31,
            column: 15
          },
          end: {
            line: 31,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 31,
            column: 29
          },
          end: {
            line: 31,
            column: 45
          }
        }, {
          start: {
            line: 31,
            column: 48
          },
          end: {
            line: 31,
            column: 65
          }
        }],
        line: 31
      },
      "2": {
        loc: {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 35
      },
      "3": {
        loc: {
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 35,
            column: 8
          },
          end: {
            line: 35,
            column: 20
          }
        }, {
          start: {
            line: 35,
            column: 24
          },
          end: {
            line: 35,
            column: 27
          }
        }, {
          start: {
            line: 35,
            column: 31
          },
          end: {
            line: 35,
            column: 45
          }
        }],
        line: 35
      },
      "4": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 42,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "5": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 47
          }
        }, {
          start: {
            line: 38,
            column: 51
          },
          end: {
            line: 38,
            column: 76
          }
        }],
        line: 38
      },
      "6": {
        loc: {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 46,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 44
      },
      "7": {
        loc: {
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 8
          },
          end: {
            line: 44,
            column: 13
          }
        }, {
          start: {
            line: 44,
            column: 17
          },
          end: {
            line: 44,
            column: 31
          }
        }],
        line: 44
      },
      "8": {
        loc: {
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 50,
            column: 32
          },
          end: {
            line: 50,
            column: 53
          }
        }, {
          start: {
            line: 50,
            column: 57
          },
          end: {
            line: 50,
            column: 88
          }
        }],
        line: 50
      },
      "9": {
        loc: {
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 8
          },
          end: {
            line: 59,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "10": {
        loc: {
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 52,
            column: 12
          },
          end: {
            line: 52,
            column: 29
          }
        }, {
          start: {
            line: 52,
            column: 33
          },
          end: {
            line: 52,
            column: 79
          }
        }],
        line: 52
      },
      "11": {
        loc: {
          start: {
            line: 53,
            column: 23
          },
          end: {
            line: 53,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 53,
            column: 47
          },
          end: {
            line: 53,
            column: 88
          }
        }, {
          start: {
            line: 53,
            column: 91
          },
          end: {
            line: 53,
            column: 95
          }
        }],
        line: 53
      },
      "12": {
        loc: {
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 54,
            column: 12
          },
          end: {
            line: 58,
            column: 13
          }
        }, {
          start: {
            line: 56,
            column: 19
          },
          end: {
            line: 58,
            column: 13
          }
        }],
        line: 54
      },
      "13": {
        loc: {
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 16
          },
          end: {
            line: 54,
            column: 20
          }
        }, {
          start: {
            line: 54,
            column: 25
          },
          end: {
            line: 54,
            column: 33
          }
        }, {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 54,
            column: 45
          }
        }],
        line: 54
      },
      "14": {
        loc: {
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 62,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 62
      },
      "15": {
        loc: {
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 79,
            column: 15
          },
          end: {
            line: 79,
            column: 36
          }
        }, {
          start: {
            line: 79,
            column: 40
          },
          end: {
            line: 79,
            column: 42
          }
        }],
        line: 79
      },
      "16": {
        loc: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 80,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 80,
            column: 46
          }
        }, {
          start: {
            line: 80,
            column: 50
          },
          end: {
            line: 80,
            column: 59
          }
        }],
        line: 80
      },
      "17": {
        loc: {
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 81,
            column: 15
          },
          end: {
            line: 81,
            column: 40
          }
        }, {
          start: {
            line: 81,
            column: 44
          },
          end: {
            line: 81,
            column: 53
          }
        }],
        line: 81
      },
      "18": {
        loc: {
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 82,
            column: 16
          },
          end: {
            line: 82,
            column: 42
          }
        }, {
          start: {
            line: 82,
            column: 46
          },
          end: {
            line: 82,
            column: 55
          }
        }],
        line: 82
      },
      "19": {
        loc: {
          start: {
            line: 83,
            column: 14
          },
          end: {
            line: 83,
            column: 72
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 83,
            column: 14
          },
          end: {
            line: 83,
            column: 66
          }
        }, {
          start: {
            line: 83,
            column: 70
          },
          end: {
            line: 83,
            column: 72
          }
        }],
        line: 83
      },
      "20": {
        loc: {
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 84,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 19
          },
          end: {
            line: 84,
            column: 48
          }
        }, {
          start: {
            line: 84,
            column: 52
          },
          end: {
            line: 84,
            column: 57
          }
        }],
        line: 84
      },
      "21": {
        loc: {
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 85,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 85,
            column: 16
          },
          end: {
            line: 85,
            column: 42
          }
        }, {
          start: {
            line: 85,
            column: 46
          },
          end: {
            line: 85,
            column: 57
          }
        }],
        line: 85
      },
      "22": {
        loc: {
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 86,
            column: 16
          },
          end: {
            line: 86,
            column: 42
          }
        }, {
          start: {
            line: 86,
            column: 46
          },
          end: {
            line: 86,
            column: 51
          }
        }],
        line: 86
      },
      "23": {
        loc: {
          start: {
            line: 87,
            column: 18
          },
          end: {
            line: 87,
            column: 99
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 87,
            column: 49
          },
          end: {
            line: 87,
            column: 87
          }
        }, {
          start: {
            line: 87,
            column: 90
          },
          end: {
            line: 87,
            column: 99
          }
        }],
        line: 87
      },
      "24": {
        loc: {
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 88,
            column: 74
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 88,
            column: 20
          },
          end: {
            line: 88,
            column: 61
          }
        }, {
          start: {
            line: 88,
            column: 65
          },
          end: {
            line: 88,
            column: 74
          }
        }],
        line: 88
      },
      "25": {
        loc: {
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 64
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 93,
            column: 8
          },
          end: {
            line: 93,
            column: 64
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 93
      },
      "26": {
        loc: {
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 77
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 94,
            column: 8
          },
          end: {
            line: 94,
            column: 77
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 94
      },
      "27": {
        loc: {
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 95,
            column: 8
          },
          end: {
            line: 95,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 95
      },
      "28": {
        loc: {
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 71
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 96,
            column: 8
          },
          end: {
            line: 96,
            column: 71
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 96
      },
      "29": {
        loc: {
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 105
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 97,
            column: 8
          },
          end: {
            line: 97,
            column: 105
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 97
      },
      "30": {
        loc: {
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 57
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 12
          },
          end: {
            line: 97,
            column: 27
          }
        }, {
          start: {
            line: 97,
            column: 31
          },
          end: {
            line: 97,
            column: 57
          }
        }],
        line: 97
      },
      "31": {
        loc: {
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 90
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 98,
            column: 8
          },
          end: {
            line: 98,
            column: 90
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 98
      },
      "32": {
        loc: {
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 87
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 99,
            column: 8
          },
          end: {
            line: 99,
            column: 87
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 99
      },
      "33": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 81
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 81
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "34": {
        loc: {
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 101,
            column: 88
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 101,
            column: 8
          },
          end: {
            line: 101,
            column: 88
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 101
      },
      "35": {
        loc: {
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 68
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 8
          },
          end: {
            line: 102,
            column: 68
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 102
      },
      "36": {
        loc: {
          start: {
            line: 104,
            column: 23
          },
          end: {
            line: 104,
            column: 85
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 67
          }
        }, {
          start: {
            line: 104,
            column: 70
          },
          end: {
            line: 104,
            column: 85
          }
        }],
        line: 104
      },
      "37": {
        loc: {
          start: {
            line: 112,
            column: 31
          },
          end: {
            line: 112,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 112,
            column: 38
          },
          end: {
            line: 112,
            column: 39
          }
        }],
        line: 112
      },
      "38": {
        loc: {
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 51
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 30
          },
          end: {
            line: 113,
            column: 40
          }
        }, {
          start: {
            line: 113,
            column: 44
          },
          end: {
            line: 113,
            column: 51
          }
        }],
        line: 113
      },
      "39": {
        loc: {
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "40": {
        loc: {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 115
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 114,
            column: 39
          }
        }, {
          start: {
            line: 114,
            column: 43
          },
          end: {
            line: 114,
            column: 66
          }
        }, {
          start: {
            line: 114,
            column: 70
          },
          end: {
            line: 114,
            column: 90
          }
        }, {
          start: {
            line: 114,
            column: 94
          },
          end: {
            line: 114,
            column: 115
          }
        }],
        line: 114
      },
      "41": {
        loc: {
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 12
          },
          end: {
            line: 142,
            column: 13
          }
        }, {
          start: {
            line: 140,
            column: 19
          },
          end: {
            line: 142,
            column: 13
          }
        }],
        line: 134
      },
      "42": {
        loc: {
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 136,
            column: 54
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 136,
            column: 30
          },
          end: {
            line: 136,
            column: 49
          }
        }, {
          start: {
            line: 136,
            column: 53
          },
          end: {
            line: 136,
            column: 54
          }
        }],
        line: 136
      },
      "43": {
        loc: {
          start: {
            line: 137,
            column: 30
          },
          end: {
            line: 137,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 137,
            column: 30
          },
          end: {
            line: 137,
            column: 44
          }
        }, {
          start: {
            line: 137,
            column: 48
          },
          end: {
            line: 137,
            column: 49
          }
        }],
        line: 137
      },
      "44": {
        loc: {
          start: {
            line: 144,
            column: 33
          },
          end: {
            line: 144,
            column: 94
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 144,
            column: 56
          },
          end: {
            line: 144,
            column: 67
          }
        }, {
          start: {
            line: 144,
            column: 70
          },
          end: {
            line: 144,
            column: 94
          }
        }],
        line: 144
      },
      "45": {
        loc: {
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 202,
            column: 8
          },
          end: {
            line: 204,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 202
      },
      "46": {
        loc: {
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 80
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 202,
            column: 12
          },
          end: {
            line: 202,
            column: 25
          }
        }, {
          start: {
            line: 202,
            column: 29
          },
          end: {
            line: 202,
            column: 45
          }
        }, {
          start: {
            line: 202,
            column: 49
          },
          end: {
            line: 202,
            column: 62
          }
        }, {
          start: {
            line: 202,
            column: 66
          },
          end: {
            line: 202,
            column: 80
          }
        }],
        line: 202
      },
      "47": {
        loc: {
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 207,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 207,
            column: 8
          },
          end: {
            line: 207,
            column: 41
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 207
      },
      "48": {
        loc: {
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 212,
            column: 8
          },
          end: {
            line: 214,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 212
      },
      "49": {
        loc: {
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 8
          },
          end: {
            line: 224,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      },
      "50": {
        loc: {
          start: {
            line: 228,
            column: 25
          },
          end: {
            line: 228,
            column: 64
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 228,
            column: 45
          },
          end: {
            line: 228,
            column: 54
          }
        }, {
          start: {
            line: 228,
            column: 57
          },
          end: {
            line: 228,
            column: 64
          }
        }],
        line: 228
      },
      "51": {
        loc: {
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 236,
            column: 8
          },
          end: {
            line: 244,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 236
      },
      "52": {
        loc: {
          start: {
            line: 268,
            column: 20
          },
          end: {
            line: 286,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 268,
            column: 20
          },
          end: {
            line: 268,
            column: 31
          }
        }, {
          start: {
            line: 268,
            column: 49
          },
          end: {
            line: 286,
            column: 22
          }
        }],
        line: 268
      },
      "53": {
        loc: {
          start: {
            line: 276,
            column: 36
          },
          end: {
            line: 276,
            column: 63
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 276,
            column: 55
          },
          end: {
            line: 276,
            column: 58
          }
        }, {
          start: {
            line: 276,
            column: 61
          },
          end: {
            line: 276,
            column: 63
          }
        }],
        line: 276
      },
      "54": {
        loc: {
          start: {
            line: 362,
            column: 38
          },
          end: {
            line: 456,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 52
          },
          end: {
            line: 414,
            column: 30
          }
        }, {
          start: {
            line: 414,
            column: 47
          },
          end: {
            line: 456,
            column: 30
          }
        }],
        line: 362
      },
      "55": {
        loc: {
          start: {
            line: 362,
            column: 52
          },
          end: {
            line: 414,
            column: 30
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 362,
            column: 85
          },
          end: {
            line: 372,
            column: 30
          }
        }, {
          start: {
            line: 372,
            column: 47
          },
          end: {
            line: 414,
            column: 30
          }
        }],
        line: 362
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0, 0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0, 0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0],
      "50": [0, 0],
      "51": [0, 0],
      "52": [0, 0],
      "53": [0, 0],
      "54": [0, 0],
      "55": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/search/page.tsx"],
      sourcesContent: ["/**\n * Post search page for The Robot Overlord\n * Allows users to search and filter posts with advanced options\n */\n\n'use client';\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { SearchBar } from '@/components/search/SearchBar';\nimport { PostSearchResults } from '@/components/posts/PostSearchResults';\nimport { PostSearchFilters } from '@/components/posts/PostSearchFilters';\nimport { Card, CardContent, CardHeader } from '@/components/ui/Card';\nimport { Button } from '@/components/ui/Button';\nimport { LoadingSpinner, LoadingState } from '@/components/ui/LoadingSpinner';\nimport { useAppStore } from '@/stores/appStore';\nimport { postsService } from '@/services';\nimport { Post } from '@/types/posts';\n\ninterface PostSearchFilters {\n  query: string;\n  category?: string;\n  topic?: string;\n  author?: string;\n  tags?: string[];\n  dateRange?: 'day' | 'week' | 'month' | 'year' | 'all';\n  sortBy: 'relevance' | 'newest' | 'oldest' | 'popular' | 'controversial';\n  status?: 'all' | 'approved' | 'pending' | 'rejected';\n  minScore?: number;\n  hasReplies?: boolean;\n}\n\nexport default function PostSearchPage() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { addNotification } = useAppStore();\n\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [totalCount, setTotalCount] = useState(0);\n  const [hasSearched, setHasSearched] = useState(false);\n\n  const [filters, setFilters] = useState<PostSearchFilters>({\n    query: searchParams.get('q') || '',\n    category: searchParams.get('category') || undefined,\n    topic: searchParams.get('topic') || undefined,\n    author: searchParams.get('author') || undefined,\n    tags: searchParams.get('tags')?.split(',').filter(Boolean) || [],\n    dateRange: (searchParams.get('dateRange') as any) || 'all',\n    sortBy: (searchParams.get('sortBy') as any) || 'relevance',\n    status: (searchParams.get('status') as any) || 'all',\n    minScore: searchParams.get('minScore') ? parseInt(searchParams.get('minScore')!) : undefined,\n    hasReplies: searchParams.get('hasReplies') === 'true' || undefined,\n  });\n\n  // Update URL when filters change\n  const updateURL = useCallback((newFilters: PostSearchFilters) => {\n    const params = new URLSearchParams();\n    \n    if (newFilters.query) params.set('q', newFilters.query);\n    if (newFilters.category) params.set('category', newFilters.category);\n    if (newFilters.topic) params.set('topic', newFilters.topic);\n    if (newFilters.author) params.set('author', newFilters.author);\n    if (newFilters.tags && newFilters.tags.length > 0) params.set('tags', newFilters.tags.join(','));\n    if (newFilters.dateRange !== 'all') params.set('dateRange', newFilters.dateRange!);\n    if (newFilters.sortBy !== 'relevance') params.set('sortBy', newFilters.sortBy);\n    if (newFilters.status !== 'all') params.set('status', newFilters.status!);\n    if (newFilters.minScore) params.set('minScore', newFilters.minScore.toString());\n    if (newFilters.hasReplies) params.set('hasReplies', 'true');\n\n    const queryString = params.toString();\n    const newURL = queryString ? `/posts/search?${queryString}` : '/posts/search';\n    \n    router.replace(newURL, { scroll: false });\n  }, [router]);\n\n  // Search posts\n  const searchPosts = async (page: number = 1, newFilters?: PostSearchFilters) => {\n    const searchFilters = newFilters || filters;\n    \n    if (!searchFilters.query.trim() && !searchFilters.category && !searchFilters.topic && !searchFilters.author) {\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const response = await postsService.searchPosts({\n        query: searchFilters.query.trim(),\n        category: searchFilters.category,\n        topic: searchFilters.topic,\n        author: searchFilters.author,\n        tags: searchFilters.tags,\n        dateRange: searchFilters.dateRange,\n        sortBy: searchFilters.sortBy,\n        status: searchFilters.status,\n        minScore: searchFilters.minScore,\n        hasReplies: searchFilters.hasReplies,\n        page,\n        limit: 20,\n      });\n\n      if (response.data) {\n        setPosts(response.data);\n        setTotalPages((response as any).totalPages || 1);\n        setTotalCount((response as any).total || 0);\n        setCurrentPage(page);\n        setHasSearched(true);\n      } else {\n        throw new Error('Failed to search posts');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to search posts';\n      setError(errorMessage);\n      addNotification({\n        type: 'error',\n        title: 'Search Error',\n        message: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Handle search\n  const handleSearch = (query: string) => {\n    const newFilters = { ...filters, query };\n    setFilters(newFilters);\n    updateURL(newFilters);\n    searchPosts(1, newFilters);\n  };\n\n  // Handle filter changes\n  const handleFiltersChange = (newFilters: Partial<PostSearchFilters>) => {\n    const updatedFilters = { ...filters, ...newFilters };\n    setFilters(updatedFilters);\n    updateURL(updatedFilters);\n    setCurrentPage(1);\n    searchPosts(1, updatedFilters);\n  };\n\n  // Handle page changes\n  const handlePageChange = (page: number) => {\n    searchPosts(page);\n  };\n\n  // Clear all filters\n  const handleClearFilters = () => {\n    const clearedFilters: PostSearchFilters = {\n      query: '',\n      category: undefined,\n      topic: undefined,\n      author: undefined,\n      tags: [],\n      dateRange: 'all',\n      sortBy: 'relevance',\n      status: 'all',\n      minScore: undefined,\n      hasReplies: undefined,\n    };\n    setFilters(clearedFilters);\n    setPosts([]);\n    setHasSearched(false);\n    setCurrentPage(1);\n    router.replace('/posts/search');\n  };\n\n  // Initial search if URL has parameters\n  useEffect(() => {\n    if (filters.query || filters.category || filters.topic || filters.author) {\n      searchPosts(1);\n    }\n  }, []); // Only run on mount\n\n  const renderPagination = () => {\n    if (totalPages <= 1) return null;\n\n    const pages = [];\n    const maxVisiblePages = 5;\n    let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));\n    let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);\n\n    if (endPage - startPage + 1 < maxVisiblePages) {\n      startPage = Math.max(1, endPage - maxVisiblePages + 1);\n    }\n\n    // Previous button\n    if (currentPage > 1) {\n      pages.push(\n        <Button\n          key=\"prev\"\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => handlePageChange(currentPage - 1)}\n          className=\"mr-2\"\n        >\n          \u2190 Previous\n        </Button>\n      );\n    }\n\n    // Page numbers\n    for (let i = startPage; i <= endPage; i++) {\n      pages.push(\n        <Button\n          key={i}\n          variant={currentPage === i ? \"primary\" : \"ghost\"}\n          size=\"sm\"\n          onClick={() => handlePageChange(i)}\n          className=\"mr-1\"\n        >\n          {i}\n        </Button>\n      );\n    }\n\n    // Next button\n    if (currentPage < totalPages) {\n      pages.push(\n        <Button\n          key=\"next\"\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => handlePageChange(currentPage + 1)}\n          className=\"ml-2\"\n        >\n          Next \u2192\n        </Button>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center justify-center mt-8 space-x-1\">\n        {pages}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold text-light-text\">Search Posts</h1>\n          <p className=\"text-muted-light mt-1\">\n            Find posts across all topics and categories\n          </p>\n        </div>\n        {hasSearched && (\n          <div className=\"flex items-center space-x-3\">\n            <span className=\"text-sm text-muted-light\">\n              {totalCount} result{totalCount !== 1 ? 's' : ''} found\n            </span>\n            <Button\n              variant=\"ghost\"\n              onClick={handleClearFilters}\n            >\n              Clear All\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Search Bar */}\n      <Card variant=\"bordered\">\n        <CardContent className=\"p-6\">\n          <SearchBar\n            onSearch={handleSearch}\n            placeholder=\"Search posts by title, content, author, or tags...\"\n            className=\"w-full\"\n          />\n        </CardContent>\n      </Card>\n\n      {/* Content */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Filters Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <PostSearchFilters\n            filters={filters}\n            onFiltersChange={handleFiltersChange}\n            totalCount={totalCount}\n            onClearFilters={handleClearFilters}\n          />\n        </div>\n\n        {/* Results */}\n        <div className=\"lg:col-span-3\">\n          <LoadingState\n            isLoading={isLoading}\n            error={error}\n            loadingComponent={\n              <div className=\"space-y-4\">\n                {[...Array(5)].map((_, i) => (\n                  <Card key={i} variant=\"bordered\" className=\"animate-pulse\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"space-y-3\">\n                        <div className=\"h-6 bg-muted/20 rounded w-3/4\"></div>\n                        <div className=\"h-4 bg-muted/20 rounded w-full\"></div>\n                        <div className=\"h-4 bg-muted/20 rounded w-2/3\"></div>\n                        <div className=\"flex justify-between items-center\">\n                          <div className=\"flex space-x-4\">\n                            <div className=\"h-4 bg-muted/20 rounded w-16\"></div>\n                            <div className=\"h-4 bg-muted/20 rounded w-20\"></div>\n                          </div>\n                          <div className=\"h-4 bg-muted/20 rounded w-24\"></div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            }\n          >\n            {hasSearched ? (\n              posts.length > 0 ? (\n                <div className=\"space-y-4\">\n                  <PostSearchResults\n                    posts={posts}\n                    searchQuery={filters.query}\n                    totalCount={totalCount}\n                  />\n                  {renderPagination()}\n                </div>\n              ) : (\n                <div className=\"text-center py-12\">\n                  <div className=\"text-6xl mb-4\">\uD83D\uDD0D</div>\n                  <h3 className=\"text-xl font-bold text-light-text mb-2\">\n                    No Posts Found\n                  </h3>\n                  <p className=\"text-muted-light mb-6\">\n                    Try adjusting your search terms or filters\n                  </p>\n                  <div className=\"space-y-2\">\n                    <p className=\"text-sm text-muted-light\">Suggestions:</p>\n                    <ul className=\"text-sm text-muted-light space-y-1\">\n                      <li>\u2022 Check your spelling</li>\n                      <li>\u2022 Try broader search terms</li>\n                      <li>\u2022 Remove some filters</li>\n                      <li>\u2022 Search for different keywords</li>\n                    </ul>\n                  </div>\n                </div>\n              )\n            ) : (\n              <div className=\"text-center py-12\">\n                <div className=\"text-6xl mb-4\">\uD83D\uDCDD</div>\n                <h3 className=\"text-xl font-bold text-light-text mb-2\">\n                  Search for Posts\n                </h3>\n                <p className=\"text-muted-light mb-6\">\n                  Enter a search term above to find posts across all topics\n                </p>\n                <div className=\"space-y-2\">\n                  <p className=\"text-sm text-muted-light\">You can search by:</p>\n                  <ul className=\"text-sm text-muted-light space-y-1\">\n                    <li>\u2022 Post title or content</li>\n                    <li>\u2022 Author username</li>\n                    <li>\u2022 Tags and categories</li>\n                    <li>\u2022 Topic names</li>\n                  </ul>\n                </div>\n              </div>\n            )}\n          </LoadingState>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      names: ["PostSearchPage", "router", "useRouter", "searchParams", "useSearchParams", "addNotification", "useAppStore", "posts", "setPosts", "useState", "isLoading", "setIsLoading", "error", "setError", "currentPage", "setCurrentPage", "totalPages", "setTotalPages", "totalCount", "setTotalCount", "hasSearched", "setHasSearched", "filters", "setFilters", "query", "get", "category", "undefined", "topic", "author", "tags", "split", "filter", "Boolean", "dateRange", "sortBy", "status", "minScore", "parseInt", "hasReplies", "updateURL", "useCallback", "newFilters", "params", "URLSearchParams", "set", "length", "join", "toString", "queryString", "newURL", "replace", "scroll", "searchPosts", "page", "searchFilters", "trim", "response", "postsService", "limit", "data", "total", "Error", "err", "errorMessage", "message", "type", "title", "handleSearch", "handleFiltersChange", "updatedFilters", "handlePageChange", "handleClearFilters", "clearedFilters", "useEffect", "renderPagination", "pages", "maxVisiblePages", "startPage", "Math", "max", "floor", "endPage", "min", "push", "Button", "variant", "size", "onClick", "className", "i", "div", "h1", "p", "span", "Card", "CardContent", "SearchBar", "onSearch", "placeholder", "PostSearchFilters", "onFiltersChange", "onClearFilters", "LoadingState", "loadingComponent", "Array", "map", "_", "PostSearchResults", "searchQuery", "h3", "ul", "li"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "efa9634d66e75b76c577b0cf8242598f61514cd5"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1fid1wo0jl = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1fid1wo0jl();
cov_1fid1wo0jl().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1fid1wo0jl().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[0]++;
    cov_1fid1wo0jl().s[2]++;
    return PostSearchPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1fid1wo0jl().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[5]++, require("next/navigation"));
const _SearchBar =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[6]++, require("../../../components/search/SearchBar"));
const _PostSearchResults =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[7]++, require("../../../components/posts/PostSearchResults"));
const _PostSearchFilters =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[8]++, require("../../../components/posts/PostSearchFilters"));
const _Card =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[9]++, require("../../../components/ui/Card"));
const _Button =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[10]++, require("../../../components/ui/Button"));
const _LoadingSpinner =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[11]++, require("../../../components/ui/LoadingSpinner"));
const _appStore =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[12]++, require("../../../stores/appStore"));
const _services =
/* istanbul ignore next */
(cov_1fid1wo0jl().s[13]++, require("../../../services"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1fid1wo0jl().f[1]++;
  cov_1fid1wo0jl().s[14]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1fid1wo0jl().b[0][0]++;
    cov_1fid1wo0jl().s[15]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1fid1wo0jl().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[16]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[17]++, new WeakMap());
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[18]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[2]++;
    cov_1fid1wo0jl().s[19]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1fid1wo0jl().f[3]++;
  cov_1fid1wo0jl().s[20]++;
  if (
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1fid1wo0jl().b[2][0]++;
    cov_1fid1wo0jl().s[21]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1fid1wo0jl().b[2][1]++;
  }
  cov_1fid1wo0jl().s[22]++;
  if (
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1fid1wo0jl().b[4][0]++;
    cov_1fid1wo0jl().s[23]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1fid1wo0jl().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[24]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[25]++;
  if (
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1fid1wo0jl().b[6][0]++;
    cov_1fid1wo0jl().s[26]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1fid1wo0jl().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[27]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[28]++,
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[29]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[30]++;
    if (
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1fid1wo0jl().s[31]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[32]++;
      if (
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1fid1wo0jl().b[12][0]++;
        cov_1fid1wo0jl().s[33]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1fid1wo0jl().b[12][1]++;
        cov_1fid1wo0jl().s[34]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[35]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[36]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1fid1wo0jl().b[14][0]++;
    cov_1fid1wo0jl().s[37]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1fid1wo0jl().b[14][1]++;
  }
  cov_1fid1wo0jl().s[38]++;
  return newObj;
}
function PostSearchPage() {
  /* istanbul ignore next */
  cov_1fid1wo0jl().f[4]++;
  const router =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[39]++, (0, _navigation.useRouter)());
  const searchParams =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[40]++, (0, _navigation.useSearchParams)());
  const {
    addNotification
  } =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[41]++, (0, _appStore.useAppStore)());
  const [posts, setPosts] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[42]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[43]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[44]++, (0, _react.useState)(null));
  const [currentPage, setCurrentPage] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[45]++, (0, _react.useState)(1));
  const [totalPages, setTotalPages] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[46]++, (0, _react.useState)(1));
  const [totalCount, setTotalCount] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[47]++, (0, _react.useState)(0));
  const [hasSearched, setHasSearched] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[48]++, (0, _react.useState)(false));
  const [filters, setFilters] =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[49]++, (0, _react.useState)({
    query:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[15][0]++, searchParams.get('q')) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[15][1]++, ''),
    category:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[16][0]++, searchParams.get('category')) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[16][1]++, undefined),
    topic:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[17][0]++, searchParams.get('topic')) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[17][1]++, undefined),
    author:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[18][0]++, searchParams.get('author')) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[18][1]++, undefined),
    tags:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[19][0]++, searchParams.get('tags')?.split(',').filter(Boolean)) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[19][1]++, []),
    dateRange:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[20][0]++, searchParams.get('dateRange')) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[20][1]++, 'all'),
    sortBy:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[21][0]++, searchParams.get('sortBy')) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[21][1]++, 'relevance'),
    status:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[22][0]++, searchParams.get('status')) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[22][1]++, 'all'),
    minScore: searchParams.get('minScore') ?
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[23][0]++, parseInt(searchParams.get('minScore'))) :
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[23][1]++, undefined),
    hasReplies:
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[24][0]++, searchParams.get('hasReplies') === 'true') ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[24][1]++, undefined)
  }));
  // Update URL when filters change
  const updateURL =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().s[50]++, (0, _react.useCallback)(newFilters => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[5]++;
    const params =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[51]++, new URLSearchParams());
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[52]++;
    if (newFilters.query) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[25][0]++;
      cov_1fid1wo0jl().s[53]++;
      params.set('q', newFilters.query);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[25][1]++;
    }
    cov_1fid1wo0jl().s[54]++;
    if (newFilters.category) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[26][0]++;
      cov_1fid1wo0jl().s[55]++;
      params.set('category', newFilters.category);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[26][1]++;
    }
    cov_1fid1wo0jl().s[56]++;
    if (newFilters.topic) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[27][0]++;
      cov_1fid1wo0jl().s[57]++;
      params.set('topic', newFilters.topic);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[27][1]++;
    }
    cov_1fid1wo0jl().s[58]++;
    if (newFilters.author) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[28][0]++;
      cov_1fid1wo0jl().s[59]++;
      params.set('author', newFilters.author);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[28][1]++;
    }
    cov_1fid1wo0jl().s[60]++;
    if (
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[30][0]++, newFilters.tags) &&
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[30][1]++, newFilters.tags.length > 0)) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[29][0]++;
      cov_1fid1wo0jl().s[61]++;
      params.set('tags', newFilters.tags.join(','));
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[29][1]++;
    }
    cov_1fid1wo0jl().s[62]++;
    if (newFilters.dateRange !== 'all') {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[31][0]++;
      cov_1fid1wo0jl().s[63]++;
      params.set('dateRange', newFilters.dateRange);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[31][1]++;
    }
    cov_1fid1wo0jl().s[64]++;
    if (newFilters.sortBy !== 'relevance') {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[32][0]++;
      cov_1fid1wo0jl().s[65]++;
      params.set('sortBy', newFilters.sortBy);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[32][1]++;
    }
    cov_1fid1wo0jl().s[66]++;
    if (newFilters.status !== 'all') {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[33][0]++;
      cov_1fid1wo0jl().s[67]++;
      params.set('status', newFilters.status);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[33][1]++;
    }
    cov_1fid1wo0jl().s[68]++;
    if (newFilters.minScore) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[34][0]++;
      cov_1fid1wo0jl().s[69]++;
      params.set('minScore', newFilters.minScore.toString());
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[34][1]++;
    }
    cov_1fid1wo0jl().s[70]++;
    if (newFilters.hasReplies) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[35][0]++;
      cov_1fid1wo0jl().s[71]++;
      params.set('hasReplies', 'true');
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[35][1]++;
    }
    const queryString =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[72]++, params.toString());
    const newURL =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[73]++, queryString ?
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[36][0]++, `/posts/search?${queryString}`) :
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[36][1]++, '/posts/search'));
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[74]++;
    router.replace(newURL, {
      scroll: false
    });
  }, [router]));
  // Search posts
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[75]++;
  const searchPosts = async (page =
  /* istanbul ignore next */
  (cov_1fid1wo0jl().b[37][0]++, 1), newFilters) => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[6]++;
    const searchFilters =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[76]++,
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[38][0]++, newFilters) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[38][1]++, filters));
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[77]++;
    if (
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[40][0]++, !searchFilters.query.trim()) &&
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[40][1]++, !searchFilters.category) &&
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[40][2]++, !searchFilters.topic) &&
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[40][3]++, !searchFilters.author)) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[39][0]++;
      cov_1fid1wo0jl().s[78]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[39][1]++;
    }
    cov_1fid1wo0jl().s[79]++;
    try {
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[80]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[81]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1fid1wo0jl().s[82]++, await _services.postsService.searchPosts({
        query: searchFilters.query.trim(),
        category: searchFilters.category,
        topic: searchFilters.topic,
        author: searchFilters.author,
        tags: searchFilters.tags,
        dateRange: searchFilters.dateRange,
        sortBy: searchFilters.sortBy,
        status: searchFilters.status,
        minScore: searchFilters.minScore,
        hasReplies: searchFilters.hasReplies,
        page,
        limit: 20
      }));
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[83]++;
      if (response.data) {
        /* istanbul ignore next */
        cov_1fid1wo0jl().b[41][0]++;
        cov_1fid1wo0jl().s[84]++;
        setPosts(response.data);
        /* istanbul ignore next */
        cov_1fid1wo0jl().s[85]++;
        setTotalPages(
        /* istanbul ignore next */
        (cov_1fid1wo0jl().b[42][0]++, response.totalPages) ||
        /* istanbul ignore next */
        (cov_1fid1wo0jl().b[42][1]++, 1));
        /* istanbul ignore next */
        cov_1fid1wo0jl().s[86]++;
        setTotalCount(
        /* istanbul ignore next */
        (cov_1fid1wo0jl().b[43][0]++, response.total) ||
        /* istanbul ignore next */
        (cov_1fid1wo0jl().b[43][1]++, 0));
        /* istanbul ignore next */
        cov_1fid1wo0jl().s[87]++;
        setCurrentPage(page);
        /* istanbul ignore next */
        cov_1fid1wo0jl().s[88]++;
        setHasSearched(true);
      } else {
        /* istanbul ignore next */
        cov_1fid1wo0jl().b[41][1]++;
        cov_1fid1wo0jl().s[89]++;
        throw new Error('Failed to search posts');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_1fid1wo0jl().s[90]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[44][0]++, err.message) :
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[44][1]++, 'Failed to search posts'));
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[91]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[92]++;
      addNotification({
        type: 'error',
        title: 'Search Error',
        message: errorMessage
      });
    } finally {
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[93]++;
      setIsLoading(false);
    }
  };
  // Handle search
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[94]++;
  const handleSearch = query => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[7]++;
    const newFilters =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[95]++, {
      ...filters,
      query
    });
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[96]++;
    setFilters(newFilters);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[97]++;
    updateURL(newFilters);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[98]++;
    searchPosts(1, newFilters);
  };
  // Handle filter changes
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[99]++;
  const handleFiltersChange = newFilters => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[8]++;
    const updatedFilters =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[100]++, {
      ...filters,
      ...newFilters
    });
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[101]++;
    setFilters(updatedFilters);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[102]++;
    updateURL(updatedFilters);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[103]++;
    setCurrentPage(1);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[104]++;
    searchPosts(1, updatedFilters);
  };
  // Handle page changes
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[105]++;
  const handlePageChange = page => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[9]++;
    cov_1fid1wo0jl().s[106]++;
    searchPosts(page);
  };
  // Clear all filters
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[107]++;
  const handleClearFilters = () => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[10]++;
    const clearedFilters =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[108]++, {
      query: '',
      category: undefined,
      topic: undefined,
      author: undefined,
      tags: [],
      dateRange: 'all',
      sortBy: 'relevance',
      status: 'all',
      minScore: undefined,
      hasReplies: undefined
    });
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[109]++;
    setFilters(clearedFilters);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[110]++;
    setPosts([]);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[111]++;
    setHasSearched(false);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[112]++;
    setCurrentPage(1);
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[113]++;
    router.replace('/posts/search');
  };
  // Initial search if URL has parameters
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[114]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[11]++;
    cov_1fid1wo0jl().s[115]++;
    if (
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[46][0]++, filters.query) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[46][1]++, filters.category) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[46][2]++, filters.topic) ||
    /* istanbul ignore next */
    (cov_1fid1wo0jl().b[46][3]++, filters.author)) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[45][0]++;
      cov_1fid1wo0jl().s[116]++;
      searchPosts(1);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[45][1]++;
    }
  }, []); // Only run on mount
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[117]++;
  const renderPagination = () => {
    /* istanbul ignore next */
    cov_1fid1wo0jl().f[12]++;
    cov_1fid1wo0jl().s[118]++;
    if (totalPages <= 1) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[47][0]++;
      cov_1fid1wo0jl().s[119]++;
      return null;
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[47][1]++;
    }
    const pages =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[120]++, []);
    const maxVisiblePages =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[121]++, 5);
    let startPage =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[122]++, Math.max(1, currentPage - Math.floor(maxVisiblePages / 2)));
    let endPage =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[123]++, Math.min(totalPages, startPage + maxVisiblePages - 1));
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[124]++;
    if (endPage - startPage + 1 < maxVisiblePages) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[48][0]++;
      cov_1fid1wo0jl().s[125]++;
      startPage = Math.max(1, endPage - maxVisiblePages + 1);
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[48][1]++;
    }
    // Previous button
    cov_1fid1wo0jl().s[126]++;
    if (currentPage > 1) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[49][0]++;
      cov_1fid1wo0jl().s[127]++;
      pages.push(/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "ghost",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_1fid1wo0jl().f[13]++;
          cov_1fid1wo0jl().s[128]++;
          return handlePageChange(currentPage - 1);
        },
        className: "mr-2",
        children: "← Previous"
      }, "prev"));
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[49][1]++;
    }
    // Page numbers
    cov_1fid1wo0jl().s[129]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1fid1wo0jl().s[130]++, startPage); i <= endPage; i++) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().s[131]++;
      pages.push(/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: currentPage === i ?
        /* istanbul ignore next */
        (cov_1fid1wo0jl().b[50][0]++, "primary") :
        /* istanbul ignore next */
        (cov_1fid1wo0jl().b[50][1]++, "ghost"),
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_1fid1wo0jl().f[14]++;
          cov_1fid1wo0jl().s[132]++;
          return handlePageChange(i);
        },
        className: "mr-1",
        children: i
      }, i));
    }
    // Next button
    /* istanbul ignore next */
    cov_1fid1wo0jl().s[133]++;
    if (currentPage < totalPages) {
      /* istanbul ignore next */
      cov_1fid1wo0jl().b[51][0]++;
      cov_1fid1wo0jl().s[134]++;
      pages.push(/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "ghost",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_1fid1wo0jl().f[15]++;
          cov_1fid1wo0jl().s[135]++;
          return handlePageChange(currentPage + 1);
        },
        className: "ml-2",
        children: "Next →"
      }, "next"));
    } else
    /* istanbul ignore next */
    {
      cov_1fid1wo0jl().b[51][1]++;
    }
    cov_1fid1wo0jl().s[136]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "flex items-center justify-center mt-8 space-x-1",
      children: pages
    });
  };
  /* istanbul ignore next */
  cov_1fid1wo0jl().s[137]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "space-y-6",
    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center justify-between",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h1", {
          className: "text-3xl font-bold text-light-text",
          children: "Search Posts"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light mt-1",
          children: "Find posts across all topics and categories"
        })]
      }),
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[52][0]++, hasSearched) &&
      /* istanbul ignore next */
      (cov_1fid1wo0jl().b[52][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "flex items-center space-x-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("span", {
          className: "text-sm text-muted-light",
          children: [totalCount, " result", totalCount !== 1 ?
          /* istanbul ignore next */
          (cov_1fid1wo0jl().b[53][0]++, 's') :
          /* istanbul ignore next */
          (cov_1fid1wo0jl().b[53][1]++, ''), " found"]
        }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
          variant: "ghost",
          onClick: handleClearFilters,
          children: "Clear All"
        })]
      }))]
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
      variant: "bordered",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
        className: "p-6",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_SearchBar.SearchBar, {
          onSearch: handleSearch,
          placeholder: "Search posts by title, content, author, or tags...",
          className: "w-full"
        })
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-4 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-1",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_PostSearchFilters.PostSearchFilters, {
          filters: filters,
          onFiltersChange: handleFiltersChange,
          totalCount: totalCount,
          onClearFilters: handleClearFilters
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-3",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_LoadingSpinner.LoadingState, {
          isLoading: isLoading,
          error: error,
          loadingComponent: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "space-y-4",
            children: [...Array(5)].map((_, i) => {
              /* istanbul ignore next */
              cov_1fid1wo0jl().f[16]++;
              cov_1fid1wo0jl().s[138]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
                variant: "bordered",
                className: "animate-pulse",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
                  className: "p-6",
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "space-y-3",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "h-6 bg-muted/20 rounded w-3/4"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "h-4 bg-muted/20 rounded w-full"
                    }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                      className: "h-4 bg-muted/20 rounded w-2/3"
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex justify-between items-center",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                        className: "flex space-x-4",
                        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          className: "h-4 bg-muted/20 rounded w-16"
                        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                          className: "h-4 bg-muted/20 rounded w-20"
                        })]
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-4 bg-muted/20 rounded w-24"
                      })]
                    })]
                  })
                })
              }, i);
            })
          }),
          children: hasSearched ?
          /* istanbul ignore next */
          (cov_1fid1wo0jl().b[54][0]++, posts.length > 0 ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1fid1wo0jl().b[55][0]++, (0, _jsxruntime.jsxs)("div", {
            className: "space-y-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_PostSearchResults.PostSearchResults, {
              posts: posts,
              searchQuery: filters.query,
              totalCount: totalCount
            }), renderPagination()]
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1fid1wo0jl().b[55][1]++, (0, _jsxruntime.jsxs)("div", {
            className: "text-center py-12",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-6xl mb-4",
              children: "\uD83D\uDD0D"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-xl font-bold text-light-text mb-2",
              children: "No Posts Found"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-muted-light mb-6",
              children: "Try adjusting your search terms or filters"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm text-muted-light",
                children: "Suggestions:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
                className: "text-sm text-muted-light space-y-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Check your spelling"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Try broader search terms"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Remove some filters"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Search for different keywords"
                })]
              })]
            })]
          }))) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_1fid1wo0jl().b[54][1]++, (0, _jsxruntime.jsxs)("div", {
            className: "text-center py-12",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-6xl mb-4",
              children: "\uD83D\uDCDD"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-xl font-bold text-light-text mb-2",
              children: "Search for Posts"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-muted-light mb-6",
              children: "Enter a search term above to find posts across all topics"
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm text-muted-light",
                children: "You can search by:"
              }), /*#__PURE__*/(0, _jsxruntime.jsxs)("ul", {
                className: "text-sm text-muted-light space-y-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Post title or content"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Author username"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Tags and categories"
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("li", {
                  children: "• Topic names"
                })]
              })]
            })]
          }))
        })
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,