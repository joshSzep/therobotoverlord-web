b36049c6ac3b1e2653bc97c4abe7d080
/**
 * Authentication Context for The Robot Overlord
 * Manages user authentication state and token handling
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_1bk2c8qr8c() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/contexts/AuthContext.tsx";
  var hash = "d082ecddfc99c6a8d877fc334ca6b799ac843429";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/contexts/AuthContext.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 25,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 28
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 23
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 30
        }
      },
      "7": {
        start: {
          line: 26,
          column: 20
        },
        end: {
          line: 26,
          column: 48
        }
      },
      "8": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 72
        }
      },
      "9": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 47
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "11": {
        start: {
          line: 30,
          column: 39
        },
        end: {
          line: 30,
          column: 51
        }
      },
      "12": {
        start: {
          line: 31,
          column: 28
        },
        end: {
          line: 31,
          column: 41
        }
      },
      "13": {
        start: {
          line: 32,
          column: 27
        },
        end: {
          line: 32,
          column: 40
        }
      },
      "14": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 35,
          column: 20
        }
      },
      "15": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 66
        }
      },
      "16": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "17": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 19
        }
      },
      "18": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "19": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 44,
          column: 10
        }
      },
      "20": {
        start: {
          line: 46,
          column: 16
        },
        end: {
          line: 46,
          column: 53
        }
      },
      "21": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 49,
          column: 5
        }
      },
      "22": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 30
        }
      },
      "23": {
        start: {
          line: 50,
          column: 17
        },
        end: {
          line: 52,
          column: 5
        }
      },
      "24": {
        start: {
          line: 53,
          column: 32
        },
        end: {
          line: 53,
          column: 88
        }
      },
      "25": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "26": {
        start: {
          line: 55,
          column: 8
        },
        end: {
          line: 62,
          column: 9
        }
      },
      "27": {
        start: {
          line: 56,
          column: 23
        },
        end: {
          line: 56,
          column: 95
        }
      },
      "28": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 61,
          column: 13
        }
      },
      "29": {
        start: {
          line: 58,
          column: 16
        },
        end: {
          line: 58,
          column: 57
        }
      },
      "30": {
        start: {
          line: 60,
          column: 16
        },
        end: {
          line: 60,
          column: 39
        }
      },
      "31": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 25
        }
      },
      "32": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 67,
          column: 5
        }
      },
      "33": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 31
        }
      },
      "34": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 18
        }
      },
      "35": {
        start: {
          line: 70,
          column: 34
        },
        end: {
          line: 70,
          column: 65
        }
      },
      "36": {
        start: {
          line: 72,
          column: 28
        },
        end: {
          line: 72,
          column: 54
        }
      },
      "37": {
        start: {
          line: 73,
          column: 38
        },
        end: {
          line: 73,
          column: 64
        }
      },
      "38": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 56
        }
      },
      "39": {
        start: {
          line: 75,
          column: 28
        },
        end: {
          line: 75,
          column: 34
        }
      },
      "40": {
        start: {
          line: 78,
          column: 25
        },
        end: {
          line: 80,
          column: 10
        }
      },
      "41": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 79,
          column: 23
        }
      },
      "42": {
        start: {
          line: 83,
          column: 25
        },
        end: {
          line: 88,
          column: 10
        }
      },
      "43": {
        start: {
          line: 84,
          column: 8
        },
        end: {
          line: 87,
          column: 22
        }
      },
      "44": {
        start: {
          line: 84,
          column: 24
        },
        end: {
          line: 87,
          column: 20
        }
      },
      "45": {
        start: {
          line: 91,
          column: 26
        },
        end: {
          line: 96,
          column: 10
        }
      },
      "46": {
        start: {
          line: 92,
          column: 8
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "47": {
        start: {
          line: 92,
          column: 43
        },
        end: {
          line: 92,
          column: 50
        }
      },
      "48": {
        start: {
          line: 93,
          column: 8
        },
        end: {
          line: 93,
          column: 56
        }
      },
      "49": {
        start: {
          line: 94,
          column: 8
        },
        end: {
          line: 94,
          column: 60
        }
      },
      "50": {
        start: {
          line: 95,
          column: 8
        },
        end: {
          line: 95,
          column: 55
        }
      },
      "51": {
        start: {
          line: 99,
          column: 26
        },
        end: {
          line: 104,
          column: 10
        }
      },
      "52": {
        start: {
          line: 100,
          column: 8
        },
        end: {
          line: 100,
          column: 50
        }
      },
      "53": {
        start: {
          line: 100,
          column: 43
        },
        end: {
          line: 100,
          column: 50
        }
      },
      "54": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 46
        }
      },
      "55": {
        start: {
          line: 102,
          column: 8
        },
        end: {
          line: 102,
          column: 49
        }
      },
      "56": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 46
        }
      },
      "57": {
        start: {
          line: 107,
          column: 31
        },
        end: {
          line: 115,
          column: 10
        }
      },
      "58": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "59": {
        start: {
          line: 109,
          column: 29
        },
        end: {
          line: 109,
          column: 71
        }
      },
      "60": {
        start: {
          line: 110,
          column: 12
        },
        end: {
          line: 110,
          column: 28
        }
      },
      "61": {
        start: {
          line: 112,
          column: 12
        },
        end: {
          line: 112,
          column: 66
        }
      },
      "62": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 24
        }
      },
      "63": {
        start: {
          line: 118,
          column: 20
        },
        end: {
          line: 143,
          column: 6
        }
      },
      "64": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 138,
          column: 9
        }
      },
      "65": {
        start: {
          line: 120,
          column: 12
        },
        end: {
          line: 120,
          column: 31
        }
      },
      "66": {
        start: {
          line: 121,
          column: 12
        },
        end: {
          line: 121,
          column: 27
        }
      },
      "67": {
        start: {
          line: 122,
          column: 29
        },
        end: {
          line: 122,
          column: 88
        }
      },
      "68": {
        start: {
          line: 124,
          column: 12
        },
        end: {
          line: 124,
          column: 85
        }
      },
      "69": {
        start: {
          line: 126,
          column: 32
        },
        end: {
          line: 126,
          column: 56
        }
      },
      "70": {
        start: {
          line: 127,
          column: 12
        },
        end: {
          line: 131,
          column: 13
        }
      },
      "71": {
        start: {
          line: 128,
          column: 16
        },
        end: {
          line: 128,
          column: 37
        }
      },
      "72": {
        start: {
          line: 130,
          column: 16
        },
        end: {
          line: 130,
          column: 73
        }
      },
      "73": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 54
        }
      },
      "74": {
        start: {
          line: 134,
          column: 12
        },
        end: {
          line: 134,
          column: 26
        }
      },
      "75": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 135,
          column: 24
        }
      },
      "76": {
        start: {
          line: 137,
          column: 12
        },
        end: {
          line: 137,
          column: 32
        }
      },
      "77": {
        start: {
          line: 146,
          column: 30
        },
        end: {
          line: 171,
          column: 6
        }
      },
      "78": {
        start: {
          line: 147,
          column: 8
        },
        end: {
          line: 166,
          column: 9
        }
      },
      "79": {
        start: {
          line: 148,
          column: 12
        },
        end: {
          line: 148,
          column: 31
        }
      },
      "80": {
        start: {
          line: 149,
          column: 12
        },
        end: {
          line: 149,
          column: 27
        }
      },
      "81": {
        start: {
          line: 150,
          column: 29
        },
        end: {
          line: 150,
          column: 92
        }
      },
      "82": {
        start: {
          line: 152,
          column: 12
        },
        end: {
          line: 152,
          column: 85
        }
      },
      "83": {
        start: {
          line: 154,
          column: 32
        },
        end: {
          line: 154,
          column: 56
        }
      },
      "84": {
        start: {
          line: 155,
          column: 12
        },
        end: {
          line: 159,
          column: 13
        }
      },
      "85": {
        start: {
          line: 156,
          column: 16
        },
        end: {
          line: 156,
          column: 37
        }
      },
      "86": {
        start: {
          line: 158,
          column: 16
        },
        end: {
          line: 158,
          column: 79
        }
      },
      "87": {
        start: {
          line: 161,
          column: 12
        },
        end: {
          line: 161,
          column: 61
        }
      },
      "88": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 162,
          column: 26
        }
      },
      "89": {
        start: {
          line: 163,
          column: 12
        },
        end: {
          line: 163,
          column: 24
        }
      },
      "90": {
        start: {
          line: 165,
          column: 12
        },
        end: {
          line: 165,
          column: 32
        }
      },
      "91": {
        start: {
          line: 174,
          column: 27
        },
        end: {
          line: 199,
          column: 6
        }
      },
      "92": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "93": {
        start: {
          line: 176,
          column: 33
        },
        end: {
          line: 176,
          column: 70
        }
      },
      "94": {
        start: {
          line: 177,
          column: 12
        },
        end: {
          line: 179,
          column: 13
        }
      },
      "95": {
        start: {
          line: 178,
          column: 16
        },
        end: {
          line: 178,
          column: 62
        }
      },
      "96": {
        start: {
          line: 180,
          column: 29
        },
        end: {
          line: 182,
          column: 14
        }
      },
      "97": {
        start: {
          line: 184,
          column: 12
        },
        end: {
          line: 184,
          column: 85
        }
      },
      "98": {
        start: {
          line: 186,
          column: 32
        },
        end: {
          line: 186,
          column: 56
        }
      },
      "99": {
        start: {
          line: 187,
          column: 12
        },
        end: {
          line: 189,
          column: 13
        }
      },
      "100": {
        start: {
          line: 188,
          column: 16
        },
        end: {
          line: 188,
          column: 37
        }
      },
      "101": {
        start: {
          line: 191,
          column: 12
        },
        end: {
          line: 191,
          column: 58
        }
      },
      "102": {
        start: {
          line: 193,
          column: 12
        },
        end: {
          line: 193,
          column: 27
        }
      },
      "103": {
        start: {
          line: 194,
          column: 12
        },
        end: {
          line: 194,
          column: 24
        }
      },
      "104": {
        start: {
          line: 202,
          column: 21
        },
        end: {
          line: 224,
          column: 6
        }
      },
      "105": {
        start: {
          line: 203,
          column: 8
        },
        end: {
          line: 221,
          column: 9
        }
      },
      "106": {
        start: {
          line: 204,
          column: 12
        },
        end: {
          line: 204,
          column: 31
        }
      },
      "107": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 211,
          column: 13
        }
      },
      "108": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 207,
          column: 64
        }
      },
      "109": {
        start: {
          line: 210,
          column: 16
        },
        end: {
          line: 210,
          column: 62
        }
      },
      "110": {
        start: {
          line: 213,
          column: 12
        },
        end: {
          line: 213,
          column: 26
        }
      },
      "111": {
        start: {
          line: 214,
          column: 12
        },
        end: {
          line: 214,
          column: 26
        }
      },
      "112": {
        start: {
          line: 215,
          column: 12
        },
        end: {
          line: 215,
          column: 27
        }
      },
      "113": {
        start: {
          line: 217,
          column: 12
        },
        end: {
          line: 217,
          column: 50
        }
      },
      "114": {
        start: {
          line: 218,
          column: 12
        },
        end: {
          line: 218,
          column: 55
        }
      },
      "115": {
        start: {
          line: 220,
          column: 12
        },
        end: {
          line: 220,
          column: 32
        }
      },
      "116": {
        start: {
          line: 227,
          column: 6
        },
        end: {
          line: 260,
          column: 7
        }
      },
      "117": {
        start: {
          line: 228,
          column: 31
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "118": {
        start: {
          line: 229,
          column: 12
        },
        end: {
          line: 251,
          column: 13
        }
      },
      "119": {
        start: {
          line: 230,
          column: 16
        },
        end: {
          line: 230,
          column: 35
        }
      },
      "120": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 231,
          column: 64
        }
      },
      "121": {
        start: {
          line: 232,
          column: 16
        },
        end: {
          line: 235,
          column: 17
        }
      },
      "122": {
        start: {
          line: 233,
          column: 20
        },
        end: {
          line: 233,
          column: 40
        }
      },
      "123": {
        start: {
          line: 234,
          column: 20
        },
        end: {
          line: 234,
          column: 27
        }
      },
      "124": {
        start: {
          line: 237,
          column: 16
        },
        end: {
          line: 237,
          column: 57
        }
      },
      "125": {
        start: {
          line: 239,
          column: 36
        },
        end: {
          line: 239,
          column: 60
        }
      },
      "126": {
        start: {
          line: 240,
          column: 16
        },
        end: {
          line: 245,
          column: 17
        }
      },
      "127": {
        start: {
          line: 241,
          column: 20
        },
        end: {
          line: 241,
          column: 41
        }
      },
      "128": {
        start: {
          line: 244,
          column: 20
        },
        end: {
          line: 244,
          column: 34
        }
      },
      "129": {
        start: {
          line: 247,
          column: 16
        },
        end: {
          line: 247,
          column: 68
        }
      },
      "130": {
        start: {
          line: 248,
          column: 16
        },
        end: {
          line: 248,
          column: 30
        }
      },
      "131": {
        start: {
          line: 250,
          column: 16
        },
        end: {
          line: 250,
          column: 36
        }
      },
      "132": {
        start: {
          line: 254,
          column: 8
        },
        end: {
          line: 256,
          column: 9
        }
      },
      "133": {
        start: {
          line: 255,
          column: 12
        },
        end: {
          line: 255,
          column: 29
        }
      },
      "134": {
        start: {
          line: 263,
          column: 6
        },
        end: {
          line: 275,
          column: 7
        }
      },
      "135": {
        start: {
          line: 264,
          column: 8
        },
        end: {
          line: 264,
          column: 37
        }
      },
      "136": {
        start: {
          line: 264,
          column: 30
        },
        end: {
          line: 264,
          column: 37
        }
      },
      "137": {
        start: {
          line: 266,
          column: 32
        },
        end: {
          line: 270,
          column: 26
        }
      },
      "138": {
        start: {
          line: 267,
          column: 12
        },
        end: {
          line: 269,
          column: 15
        }
      },
      "139": {
        start: {
          line: 268,
          column: 16
        },
        end: {
          line: 268,
          column: 72
        }
      },
      "140": {
        start: {
          line: 271,
          column: 8
        },
        end: {
          line: 271,
          column: 50
        }
      },
      "141": {
        start: {
          line: 271,
          column: 19
        },
        end: {
          line: 271,
          column: 49
        }
      },
      "142": {
        start: {
          line: 276,
          column: 25
        },
        end: {
          line: 287,
          column: 5
        }
      },
      "143": {
        start: {
          line: 288,
          column: 4
        },
        end: {
          line: 291,
          column: 7
        }
      },
      "144": {
        start: {
          line: 294,
          column: 20
        },
        end: {
          line: 294,
          column: 55
        }
      },
      "145": {
        start: {
          line: 295,
          column: 4
        },
        end: {
          line: 297,
          column: 5
        }
      },
      "146": {
        start: {
          line: 296,
          column: 8
        },
        end: {
          line: 296,
          column: 71
        }
      },
      "147": {
        start: {
          line: 298,
          column: 4
        },
        end: {
          line: 298,
          column: 19
        }
      },
      "148": {
        start: {
          line: 301,
          column: 17
        },
        end: {
          line: 301,
          column: 26
        }
      },
      "149": {
        start: {
          line: 302,
          column: 4
        },
        end: {
          line: 312,
          column: 7
        }
      },
      "150": {
        start: {
          line: 303,
          column: 8
        },
        end: {
          line: 308,
          column: 9
        }
      },
      "151": {
        start: {
          line: 305,
          column: 12
        },
        end: {
          line: 307,
          column: 13
        }
      },
      "152": {
        start: {
          line: 306,
          column: 16
        },
        end: {
          line: 306,
          column: 48
        }
      },
      "153": {
        start: {
          line: 313,
          column: 4
        },
        end: {
          line: 313,
          column: 16
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 24
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 19
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 26
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 29,
            column: 9
          },
          end: {
            line: 29,
            column: 33
          }
        },
        loc: {
          start: {
            line: 29,
            column: 47
          },
          end: {
            line: 36,
            column: 1
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 33,
            column: 39
          },
          end: {
            line: 33,
            column: 40
          }
        },
        loc: {
          start: {
            line: 33,
            column: 61
          },
          end: {
            line: 35,
            column: 5
          }
        },
        line: 33
      },
      "6": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 37,
            column: 9
          },
          end: {
            line: 37,
            column: 34
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 69,
            column: 1
          }
        },
        line: 37
      },
      "7": {
        name: "AuthProvider",
        decl: {
          start: {
            line: 71,
            column: 9
          },
          end: {
            line: 71,
            column: 21
          }
        },
        loc: {
          start: {
            line: 71,
            column: 36
          },
          end: {
            line: 292,
            column: 1
          }
        },
        line: 71
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 78,
            column: 49
          },
          end: {
            line: 78,
            column: 50
          }
        },
        loc: {
          start: {
            line: 78,
            column: 53
          },
          end: {
            line: 80,
            column: 5
          }
        },
        line: 78
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 83,
            column: 49
          },
          end: {
            line: 83,
            column: 50
          }
        },
        loc: {
          start: {
            line: 83,
            column: 60
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 83
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 17
          }
        },
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 87,
            column: 20
          }
        },
        line: 84
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 91,
            column: 50
          },
          end: {
            line: 91,
            column: 51
          }
        },
        loc: {
          start: {
            line: 91,
            column: 79
          },
          end: {
            line: 96,
            column: 5
          }
        },
        line: 91
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 99,
            column: 50
          },
          end: {
            line: 99,
            column: 51
          }
        },
        loc: {
          start: {
            line: 99,
            column: 54
          },
          end: {
            line: 104,
            column: 5
          }
        },
        line: 99
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 107,
            column: 55
          },
          end: {
            line: 107,
            column: 56
          }
        },
        loc: {
          start: {
            line: 107,
            column: 65
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 107
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 118,
            column: 44
          },
          end: {
            line: 118,
            column: 45
          }
        },
        loc: {
          start: {
            line: 118,
            column: 65
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 118
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 146,
            column: 54
          },
          end: {
            line: 146,
            column: 55
          }
        },
        loc: {
          start: {
            line: 146,
            column: 72
          },
          end: {
            line: 167,
            column: 5
          }
        },
        line: 146
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 174,
            column: 51
          },
          end: {
            line: 174,
            column: 52
          }
        },
        loc: {
          start: {
            line: 174,
            column: 61
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 174
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 202,
            column: 45
          },
          end: {
            line: 202,
            column: 46
          }
        },
        loc: {
          start: {
            line: 202,
            column: 55
          },
          end: {
            line: 222,
            column: 5
          }
        },
        line: 202
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 227,
            column: 28
          },
          end: {
            line: 227,
            column: 29
          }
        },
        loc: {
          start: {
            line: 227,
            column: 32
          },
          end: {
            line: 257,
            column: 5
          }
        },
        line: 227
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 228,
            column: 31
          },
          end: {
            line: 228,
            column: 32
          }
        },
        loc: {
          start: {
            line: 228,
            column: 41
          },
          end: {
            line: 252,
            column: 9
          }
        },
        line: 228
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 263,
            column: 28
          },
          end: {
            line: 263,
            column: 29
          }
        },
        loc: {
          start: {
            line: 263,
            column: 32
          },
          end: {
            line: 272,
            column: 5
          }
        },
        line: 263
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 266,
            column: 44
          },
          end: {
            line: 266,
            column: 45
          }
        },
        loc: {
          start: {
            line: 266,
            column: 48
          },
          end: {
            line: 270,
            column: 9
          }
        },
        line: 266
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 267,
            column: 33
          },
          end: {
            line: 267,
            column: 34
          }
        },
        loc: {
          start: {
            line: 267,
            column: 42
          },
          end: {
            line: 269,
            column: 13
          }
        },
        line: 267
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 271,
            column: 15
          },
          end: {
            line: 271,
            column: 16
          }
        },
        loc: {
          start: {
            line: 271,
            column: 19
          },
          end: {
            line: 271,
            column: 49
          }
        },
        line: 271
      },
      "24": {
        name: "useAuth",
        decl: {
          start: {
            line: 293,
            column: 9
          },
          end: {
            line: 293,
            column: 16
          }
        },
        loc: {
          start: {
            line: 293,
            column: 19
          },
          end: {
            line: 299,
            column: 1
          }
        },
        line: 293
      },
      "25": {
        name: "useRequireAuth",
        decl: {
          start: {
            line: 300,
            column: 9
          },
          end: {
            line: 300,
            column: 23
          }
        },
        loc: {
          start: {
            line: 300,
            column: 26
          },
          end: {
            line: 314,
            column: 1
          }
        },
        line: 300
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 302,
            column: 26
          },
          end: {
            line: 302,
            column: 27
          }
        },
        loc: {
          start: {
            line: 302,
            column: 30
          },
          end: {
            line: 309,
            column: 5
          }
        },
        line: 302
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 34,
            column: 15
          },
          end: {
            line: 34,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 34,
            column: 29
          },
          end: {
            line: 34,
            column: 45
          }
        }, {
          start: {
            line: 34,
            column: 48
          },
          end: {
            line: 34,
            column: 65
          }
        }],
        line: 34
      },
      "2": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "3": {
        loc: {
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 38,
            column: 8
          },
          end: {
            line: 38,
            column: 20
          }
        }, {
          start: {
            line: 38,
            column: 24
          },
          end: {
            line: 38,
            column: 27
          }
        }, {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 45
          }
        }],
        line: 38
      },
      "4": {
        loc: {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "5": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 41,
            column: 20
          }
        }, {
          start: {
            line: 41,
            column: 24
          },
          end: {
            line: 41,
            column: 47
          }
        }, {
          start: {
            line: 41,
            column: 51
          },
          end: {
            line: 41,
            column: 76
          }
        }],
        line: 41
      },
      "6": {
        loc: {
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 47,
            column: 4
          },
          end: {
            line: 49,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 47
      },
      "7": {
        loc: {
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 47,
            column: 8
          },
          end: {
            line: 47,
            column: 13
          }
        }, {
          start: {
            line: 47,
            column: 17
          },
          end: {
            line: 47,
            column: 31
          }
        }],
        line: 47
      },
      "8": {
        loc: {
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 32
          },
          end: {
            line: 53,
            column: 53
          }
        }, {
          start: {
            line: 53,
            column: 57
          },
          end: {
            line: 53,
            column: 88
          }
        }],
        line: 53
      },
      "9": {
        loc: {
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 55,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 55
      },
      "10": {
        loc: {
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 55,
            column: 12
          },
          end: {
            line: 55,
            column: 29
          }
        }, {
          start: {
            line: 55,
            column: 33
          },
          end: {
            line: 55,
            column: 79
          }
        }],
        line: 55
      },
      "11": {
        loc: {
          start: {
            line: 56,
            column: 23
          },
          end: {
            line: 56,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 56,
            column: 88
          }
        }, {
          start: {
            line: 56,
            column: 91
          },
          end: {
            line: 56,
            column: 95
          }
        }],
        line: 56
      },
      "12": {
        loc: {
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 57,
            column: 12
          },
          end: {
            line: 61,
            column: 13
          }
        }, {
          start: {
            line: 59,
            column: 19
          },
          end: {
            line: 61,
            column: 13
          }
        }],
        line: 57
      },
      "13": {
        loc: {
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 16
          },
          end: {
            line: 57,
            column: 20
          }
        }, {
          start: {
            line: 57,
            column: 25
          },
          end: {
            line: 57,
            column: 33
          }
        }, {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 57,
            column: 45
          }
        }],
        line: 57
      },
      "14": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 67,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "15": {
        loc: {
          start: {
            line: 84,
            column: 24
          },
          end: {
            line: 87,
            column: 20
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 84,
            column: 31
          },
          end: {
            line: 87,
            column: 13
          }
        }, {
          start: {
            line: 87,
            column: 16
          },
          end: {
            line: 87,
            column: 20
          }
        }],
        line: 84
      },
      "16": {
        loc: {
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 92,
            column: 8
          },
          end: {
            line: 92,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 92
      },
      "17": {
        loc: {
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 100,
            column: 8
          },
          end: {
            line: 100,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 100
      },
      "18": {
        loc: {
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 127,
            column: 12
          },
          end: {
            line: 131,
            column: 13
          }
        }, {
          start: {
            line: 129,
            column: 19
          },
          end: {
            line: 131,
            column: 13
          }
        }],
        line: 127
      },
      "19": {
        loc: {
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 133,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 133,
            column: 21
          },
          end: {
            line: 133,
            column: 34
          }
        }, {
          start: {
            line: 133,
            column: 38
          },
          end: {
            line: 133,
            column: 52
          }
        }],
        line: 133
      },
      "20": {
        loc: {
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 155,
            column: 12
          },
          end: {
            line: 159,
            column: 13
          }
        }, {
          start: {
            line: 157,
            column: 19
          },
          end: {
            line: 159,
            column: 13
          }
        }],
        line: 155
      },
      "21": {
        loc: {
          start: {
            line: 161,
            column: 21
          },
          end: {
            line: 161,
            column: 59
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 161,
            column: 21
          },
          end: {
            line: 161,
            column: 34
          }
        }, {
          start: {
            line: 161,
            column: 38
          },
          end: {
            line: 161,
            column: 59
          }
        }],
        line: 161
      },
      "22": {
        loc: {
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 177,
            column: 12
          },
          end: {
            line: 179,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 177
      },
      "23": {
        loc: {
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 187,
            column: 12
          },
          end: {
            line: 189,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 187
      },
      "24": {
        loc: {
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 218,
            column: 53
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 218,
            column: 21
          },
          end: {
            line: 218,
            column: 34
          }
        }, {
          start: {
            line: 218,
            column: 38
          },
          end: {
            line: 218,
            column: 53
          }
        }],
        line: 218
      },
      "25": {
        loc: {
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 232,
            column: 16
          },
          end: {
            line: 235,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 232
      },
      "26": {
        loc: {
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 245,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 240,
            column: 16
          },
          end: {
            line: 245,
            column: 17
          }
        }, {
          start: {
            line: 242,
            column: 23
          },
          end: {
            line: 245,
            column: 17
          }
        }],
        line: 240
      },
      "27": {
        loc: {
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 254,
            column: 8
          },
          end: {
            line: 256,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 254
      },
      "28": {
        loc: {
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 264,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 264,
            column: 8
          },
          end: {
            line: 264,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 264
      },
      "29": {
        loc: {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 295
      },
      "30": {
        loc: {
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 303,
            column: 8
          },
          end: {
            line: 308,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 303
      },
      "31": {
        loc: {
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 303,
            column: 12
          },
          end: {
            line: 303,
            column: 27
          }
        }, {
          start: {
            line: 303,
            column: 31
          },
          end: {
            line: 303,
            column: 52
          }
        }],
        line: 303
      },
      "32": {
        loc: {
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 305,
            column: 12
          },
          end: {
            line: 307,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 305
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/contexts/AuthContext.tsx"],
      sourcesContent: ["/**\n * Authentication Context for The Robot Overlord\n * Manages user authentication state and token handling\n */\n\n'use client';\n\nimport React, { createContext, useContext, useEffect, useState, useCallback } from 'react';\nimport { apiClient } from '@/lib/api-client';\nimport { User, AuthResponse, LoginCredentials, OAuthProvider, CurrentUser } from '@/types/user';\n\ninterface AuthContextType {\n  // State\n  user: CurrentUser | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n\n  // Actions\n  login: (credentials: LoginCredentials) => Promise<void>;\n  loginWithGoogle: (provider: OAuthProvider) => Promise<void>;\n  logout: () => Promise<void>;\n  refreshToken: () => Promise<void>;\n  clearError: () => void;\n  updateUser: (updates: Partial<User>) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<CurrentUser | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const isAuthenticated = !!user;\n\n  /**\n   * Clear error state\n   */\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  /**\n   * Update user data in state\n   */\n  const updateUser = useCallback((updates: Partial<User>) => {\n    setUser(prev => prev ? { ...prev, ...updates } : null);\n  }, []);\n\n  /**\n   * Store authentication tokens\n   */\n  const storeTokens = useCallback((accessToken: string, refreshToken: string) => {\n    if (typeof window === 'undefined') return;\n    \n    localStorage.setItem('auth_token', accessToken);\n    localStorage.setItem('refresh_token', refreshToken);\n    apiClient.setAuthToken(accessToken);\n  }, []);\n\n  /**\n   * Clear authentication tokens\n   */\n  const clearTokens = useCallback(() => {\n    if (typeof window === 'undefined') return;\n    \n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('refresh_token');\n    apiClient.clearAuthToken();\n  }, []);\n\n  /**\n   * Fetch current user data\n   */\n  const fetchCurrentUser = useCallback(async (): Promise<CurrentUser | null> => {\n    try {\n      const userData = await apiClient.get<CurrentUser>('/auth/me');\n      return userData;\n    } catch (error) {\n      console.error('Failed to fetch current user:', error);\n      return null;\n    }\n  }, []);\n\n  /**\n   * Login with email/password\n   */\n  const login = useCallback(async (credentials: LoginCredentials) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const response = await apiClient.post<AuthResponse>('/auth/login', credentials);\n      \n      // Store tokens\n      storeTokens(response.tokens.access_token, response.tokens.refresh_token);\n      \n      // Fetch full user data with permissions and preferences\n      const currentUser = await fetchCurrentUser();\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        throw new Error('Failed to fetch user data after login');\n      }\n    } catch (error: any) {\n      setError(error.message || 'Login failed');\n      clearTokens();\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [storeTokens, clearTokens, fetchCurrentUser]);\n\n  /**\n   * Login with Google OAuth\n   */\n  const loginWithGoogle = useCallback(async (provider: OAuthProvider) => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const response = await apiClient.post<AuthResponse>('/auth/oauth/google', provider);\n      \n      // Store tokens\n      storeTokens(response.tokens.access_token, response.tokens.refresh_token);\n      \n      // Fetch full user data\n      const currentUser = await fetchCurrentUser();\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        throw new Error('Failed to fetch user data after OAuth login');\n      }\n    } catch (error: any) {\n      setError(error.message || 'Google login failed');\n      clearTokens();\n      throw error;\n    } finally {\n      setIsLoading(false);\n    }\n  }, [storeTokens, clearTokens, fetchCurrentUser]);\n\n  /**\n   * Refresh authentication token\n   */\n  const refreshToken = useCallback(async () => {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n\n      const response = await apiClient.post<AuthResponse>('/auth/refresh', {\n        refresh_token: refreshToken\n      });\n\n      // Store new tokens\n      storeTokens(response.tokens.access_token, response.tokens.refresh_token);\n      \n      // Update user data\n      const currentUser = await fetchCurrentUser();\n      if (currentUser) {\n        setUser(currentUser);\n      }\n    } catch (error: any) {\n      console.error('Token refresh failed:', error);\n      // If refresh fails, logout user\n      await logout();\n      throw error;\n    }\n  }, [storeTokens, fetchCurrentUser]);\n\n  /**\n   * Logout user\n   */\n  const logout = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      \n      // Call logout endpoint to invalidate tokens on server\n      try {\n        await apiClient.post('/auth/logout');\n      } catch (error) {\n        // Continue with logout even if server call fails\n        console.error('Server logout failed:', error);\n      }\n      \n      // Clear local state and tokens\n      clearTokens();\n      setUser(null);\n      setError(null);\n    } catch (error: any) {\n      console.error('Logout error:', error);\n      setError(error.message || 'Logout failed');\n    } finally {\n      setIsLoading(false);\n    }\n  }, [clearTokens]);\n\n  /**\n   * Initialize authentication state on mount\n   */\n  useEffect(() => {\n    const initializeAuth = async () => {\n      try {\n        setIsLoading(true);\n        \n        const token = localStorage.getItem('auth_token');\n        if (!token) {\n          setIsLoading(false);\n          return;\n        }\n\n        // Set token in API client\n        apiClient.setAuthToken(token);\n        \n        // Try to fetch current user\n        const currentUser = await fetchCurrentUser();\n        if (currentUser) {\n          setUser(currentUser);\n        } else {\n          // Token might be invalid, clear it\n          clearTokens();\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error);\n        clearTokens();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    // Only run on client side\n    if (typeof window !== 'undefined') {\n      initializeAuth();\n    }\n  }, [fetchCurrentUser, clearTokens]);\n\n  /**\n   * Set up token refresh interval\n   */\n  useEffect(() => {\n    if (!isAuthenticated) return;\n\n    // Refresh token every 50 minutes (tokens typically expire in 1 hour)\n    const refreshInterval = setInterval(() => {\n      refreshToken().catch(error => {\n        console.error('Automatic token refresh failed:', error);\n      });\n    }, 50 * 60 * 1000); // 50 minutes\n\n    return () => clearInterval(refreshInterval);\n  }, [isAuthenticated, refreshToken]);\n\n  const contextValue: AuthContextType = {\n    user,\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    loginWithGoogle,\n    logout,\n    refreshToken,\n    clearError,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\n/**\n * Hook to use authentication context\n */\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\n/**\n * Hook to require authentication (redirects to login if not authenticated)\n */\nexport function useRequireAuth() {\n  const auth = useAuth();\n  \n  useEffect(() => {\n    if (!auth.isLoading && !auth.isAuthenticated) {\n      // Redirect to login page\n      if (typeof window !== 'undefined') {\n        window.location.href = '/login';\n      }\n    }\n  }, [auth.isLoading, auth.isAuthenticated]);\n\n  return auth;\n}\n"],
      names: ["AuthProvider", "useAuth", "useRequireAuth", "AuthContext", "createContext", "children", "user", "setUser", "useState", "isLoading", "setIsLoading", "error", "setError", "isAuthenticated", "clearError", "useCallback", "updateUser", "updates", "prev", "storeTokens", "accessToken", "refreshToken", "window", "localStorage", "setItem", "apiClient", "setAuthToken", "clearTokens", "removeItem", "clearAuthToken", "fetchCurrentUser", "userData", "get", "console", "login", "credentials", "response", "post", "tokens", "access_token", "refresh_token", "currentUser", "Error", "message", "loginWithGoogle", "provider", "getItem", "logout", "useEffect", "initializeAuth", "token", "refreshInterval", "setInterval", "catch", "clearInterval", "contextValue", "Provider", "value", "context", "useContext", "auth", "location", "href"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d082ecddfc99c6a8d877fc334ca6b799ac843429"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1bk2c8qr8c = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1bk2c8qr8c();
cov_1bk2c8qr8c().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1bk2c8qr8c().f[0]++;
  cov_1bk2c8qr8c().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1bk2c8qr8c().s[3]++;
_export(exports, {
  get AuthProvider() {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[1]++;
    cov_1bk2c8qr8c().s[4]++;
    return AuthProvider;
  },
  get useAuth() {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[2]++;
    cov_1bk2c8qr8c().s[5]++;
    return useAuth;
  },
  get useRequireAuth() {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[3]++;
    cov_1bk2c8qr8c().s[6]++;
    return useRequireAuth;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1bk2c8qr8c().s[7]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1bk2c8qr8c().s[8]++, _interop_require_wildcard(require("react")));
const _apiclient =
/* istanbul ignore next */
(cov_1bk2c8qr8c().s[9]++, require("../lib/api-client"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_1bk2c8qr8c().f[4]++;
  cov_1bk2c8qr8c().s[10]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().b[0][0]++;
    cov_1bk2c8qr8c().s[11]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_1bk2c8qr8c().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[12]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[13]++, new WeakMap());
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[14]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[5]++;
    cov_1bk2c8qr8c().s[15]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_1bk2c8qr8c().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_1bk2c8qr8c().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_1bk2c8qr8c().f[6]++;
  cov_1bk2c8qr8c().s[16]++;
  if (
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().b[2][0]++;
    cov_1bk2c8qr8c().s[17]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_1bk2c8qr8c().b[2][1]++;
  }
  cov_1bk2c8qr8c().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().b[4][0]++;
    cov_1bk2c8qr8c().s[19]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_1bk2c8qr8c().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[20]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().b[6][0]++;
    cov_1bk2c8qr8c().s[22]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_1bk2c8qr8c().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[23]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[24]++,
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[25]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[26]++;
    if (
    /* istanbul ignore next */
    (cov_1bk2c8qr8c().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_1bk2c8qr8c().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[27]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[11][1]++, null));
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[28]++;
      if (
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[12][0]++;
        cov_1bk2c8qr8c().s[29]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[12][1]++;
        cov_1bk2c8qr8c().s[30]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_1bk2c8qr8c().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[31]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[32]++;
  if (cache) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().b[14][0]++;
    cov_1bk2c8qr8c().s[33]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_1bk2c8qr8c().b[14][1]++;
  }
  cov_1bk2c8qr8c().s[34]++;
  return newObj;
}
const AuthContext =
/* istanbul ignore next */
(/*#__PURE__*/cov_1bk2c8qr8c().s[35]++, (0, _react.createContext)(null));
function AuthProvider({
  children
}) {
  /* istanbul ignore next */
  cov_1bk2c8qr8c().f[7]++;
  const [user, setUser] =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[36]++, (0, _react.useState)(null));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[37]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[38]++, (0, _react.useState)(null));
  const isAuthenticated =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[39]++, !!user);
  /**
  * Clear error state
  */
  const clearError =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[40]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[8]++;
    cov_1bk2c8qr8c().s[41]++;
    setError(null);
  }, []));
  /**
  * Update user data in state
  */
  const updateUser =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[42]++, (0, _react.useCallback)(updates => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[9]++;
    cov_1bk2c8qr8c().s[43]++;
    setUser(prev => {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().f[10]++;
      cov_1bk2c8qr8c().s[44]++;
      return prev ?
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[15][0]++, {
        ...prev,
        ...updates
      }) :
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[15][1]++, null);
    });
  }, []));
  /**
  * Store authentication tokens
  */
  const storeTokens =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[45]++, (0, _react.useCallback)((accessToken, refreshToken) => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[11]++;
    cov_1bk2c8qr8c().s[46]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().b[16][0]++;
      cov_1bk2c8qr8c().s[47]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1bk2c8qr8c().b[16][1]++;
    }
    cov_1bk2c8qr8c().s[48]++;
    localStorage.setItem('auth_token', accessToken);
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[49]++;
    localStorage.setItem('refresh_token', refreshToken);
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[50]++;
    _apiclient.apiClient.setAuthToken(accessToken);
  }, []));
  /**
  * Clear authentication tokens
  */
  const clearTokens =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[51]++, (0, _react.useCallback)(() => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[12]++;
    cov_1bk2c8qr8c().s[52]++;
    if (typeof window === 'undefined') {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().b[17][0]++;
      cov_1bk2c8qr8c().s[53]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1bk2c8qr8c().b[17][1]++;
    }
    cov_1bk2c8qr8c().s[54]++;
    localStorage.removeItem('auth_token');
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[55]++;
    localStorage.removeItem('refresh_token');
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[56]++;
    _apiclient.apiClient.clearAuthToken();
  }, []));
  /**
  * Fetch current user data
  */
  const fetchCurrentUser =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[57]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[13]++;
    cov_1bk2c8qr8c().s[58]++;
    try {
      const userData =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[59]++, await _apiclient.apiClient.get('/auth/me'));
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[60]++;
      return userData;
    } catch (error) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[61]++;
      console.error('Failed to fetch current user:', error);
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[62]++;
      return null;
    }
  }, []));
  /**
  * Login with email/password
  */
  const login =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[63]++, (0, _react.useCallback)(async credentials => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[14]++;
    cov_1bk2c8qr8c().s[64]++;
    try {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[65]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[66]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[67]++, await _apiclient.apiClient.post('/auth/login', credentials));
      // Store tokens
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[68]++;
      storeTokens(response.tokens.access_token, response.tokens.refresh_token);
      // Fetch full user data with permissions and preferences
      const currentUser =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[69]++, await fetchCurrentUser());
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[70]++;
      if (currentUser) {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[18][0]++;
        cov_1bk2c8qr8c().s[71]++;
        setUser(currentUser);
      } else {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[18][1]++;
        cov_1bk2c8qr8c().s[72]++;
        throw new Error('Failed to fetch user data after login');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[73]++;
      setError(
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[19][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[19][1]++, 'Login failed'));
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[74]++;
      clearTokens();
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[75]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[76]++;
      setIsLoading(false);
    }
  }, [storeTokens, clearTokens, fetchCurrentUser]));
  /**
  * Login with Google OAuth
  */
  const loginWithGoogle =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[77]++, (0, _react.useCallback)(async provider => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[15]++;
    cov_1bk2c8qr8c().s[78]++;
    try {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[79]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[80]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[81]++, await _apiclient.apiClient.post('/auth/oauth/google', provider));
      // Store tokens
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[82]++;
      storeTokens(response.tokens.access_token, response.tokens.refresh_token);
      // Fetch full user data
      const currentUser =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[83]++, await fetchCurrentUser());
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[84]++;
      if (currentUser) {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[20][0]++;
        cov_1bk2c8qr8c().s[85]++;
        setUser(currentUser);
      } else {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[20][1]++;
        cov_1bk2c8qr8c().s[86]++;
        throw new Error('Failed to fetch user data after OAuth login');
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[87]++;
      setError(
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[21][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[21][1]++, 'Google login failed'));
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[88]++;
      clearTokens();
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[89]++;
      throw error;
    } finally {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[90]++;
      setIsLoading(false);
    }
  }, [storeTokens, clearTokens, fetchCurrentUser]));
  /**
  * Refresh authentication token
  */
  const refreshToken =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[91]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[16]++;
    cov_1bk2c8qr8c().s[92]++;
    try {
      const refreshToken =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[93]++, localStorage.getItem('refresh_token'));
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[94]++;
      if (!refreshToken) {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[22][0]++;
        cov_1bk2c8qr8c().s[95]++;
        throw new Error('No refresh token available');
      } else
      /* istanbul ignore next */
      {
        cov_1bk2c8qr8c().b[22][1]++;
      }
      const response =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[96]++, await _apiclient.apiClient.post('/auth/refresh', {
        refresh_token: refreshToken
      }));
      // Store new tokens
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[97]++;
      storeTokens(response.tokens.access_token, response.tokens.refresh_token);
      // Update user data
      const currentUser =
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().s[98]++, await fetchCurrentUser());
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[99]++;
      if (currentUser) {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[23][0]++;
        cov_1bk2c8qr8c().s[100]++;
        setUser(currentUser);
      } else
      /* istanbul ignore next */
      {
        cov_1bk2c8qr8c().b[23][1]++;
      }
    } catch (error) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[101]++;
      console.error('Token refresh failed:', error);
      // If refresh fails, logout user
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[102]++;
      await logout();
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[103]++;
      throw error;
    }
  }, [storeTokens, fetchCurrentUser]));
  /**
  * Logout user
  */
  const logout =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[104]++, (0, _react.useCallback)(async () => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[17]++;
    cov_1bk2c8qr8c().s[105]++;
    try {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[106]++;
      setIsLoading(true);
      // Call logout endpoint to invalidate tokens on server
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[107]++;
      try {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[108]++;
        await _apiclient.apiClient.post('/auth/logout');
      } catch (error) {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[109]++;
        // Continue with logout even if server call fails
        console.error('Server logout failed:', error);
      }
      // Clear local state and tokens
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[110]++;
      clearTokens();
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[111]++;
      setUser(null);
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[112]++;
      setError(null);
    } catch (error) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[113]++;
      console.error('Logout error:', error);
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[114]++;
      setError(
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[24][0]++, error.message) ||
      /* istanbul ignore next */
      (cov_1bk2c8qr8c().b[24][1]++, 'Logout failed'));
    } finally {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().s[115]++;
      setIsLoading(false);
    }
  }, [clearTokens]));
  /**
  * Initialize authentication state on mount
  */
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[116]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[18]++;
    cov_1bk2c8qr8c().s[117]++;
    const initializeAuth = async () => {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().f[19]++;
      cov_1bk2c8qr8c().s[118]++;
      try {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[119]++;
        setIsLoading(true);
        const token =
        /* istanbul ignore next */
        (cov_1bk2c8qr8c().s[120]++, localStorage.getItem('auth_token'));
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[121]++;
        if (!token) {
          /* istanbul ignore next */
          cov_1bk2c8qr8c().b[25][0]++;
          cov_1bk2c8qr8c().s[122]++;
          setIsLoading(false);
          /* istanbul ignore next */
          cov_1bk2c8qr8c().s[123]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1bk2c8qr8c().b[25][1]++;
        }
        // Set token in API client
        cov_1bk2c8qr8c().s[124]++;
        _apiclient.apiClient.setAuthToken(token);
        // Try to fetch current user
        const currentUser =
        /* istanbul ignore next */
        (cov_1bk2c8qr8c().s[125]++, await fetchCurrentUser());
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[126]++;
        if (currentUser) {
          /* istanbul ignore next */
          cov_1bk2c8qr8c().b[26][0]++;
          cov_1bk2c8qr8c().s[127]++;
          setUser(currentUser);
        } else {
          /* istanbul ignore next */
          cov_1bk2c8qr8c().b[26][1]++;
          cov_1bk2c8qr8c().s[128]++;
          // Token might be invalid, clear it
          clearTokens();
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[129]++;
        console.error('Auth initialization failed:', error);
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[130]++;
        clearTokens();
      } finally {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().s[131]++;
        setIsLoading(false);
      }
    };
    // Only run on client side
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[132]++;
    if (typeof window !== 'undefined') {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().b[27][0]++;
      cov_1bk2c8qr8c().s[133]++;
      initializeAuth();
    } else
    /* istanbul ignore next */
    {
      cov_1bk2c8qr8c().b[27][1]++;
    }
  }, [fetchCurrentUser, clearTokens]);
  /**
  * Set up token refresh interval
  */
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[134]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[20]++;
    cov_1bk2c8qr8c().s[135]++;
    if (!isAuthenticated) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().b[28][0]++;
      cov_1bk2c8qr8c().s[136]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_1bk2c8qr8c().b[28][1]++;
    }
    // Refresh token every 50 minutes (tokens typically expire in 1 hour)
    const refreshInterval =
    /* istanbul ignore next */
    (cov_1bk2c8qr8c().s[137]++, setInterval(() => {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().f[21]++;
      cov_1bk2c8qr8c().s[138]++;
      refreshToken().catch(error => {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().f[22]++;
        cov_1bk2c8qr8c().s[139]++;
        console.error('Automatic token refresh failed:', error);
      });
    }, 50 * 60 * 1000)); // 50 minutes
    /* istanbul ignore next */
    cov_1bk2c8qr8c().s[140]++;
    return () => {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().f[23]++;
      cov_1bk2c8qr8c().s[141]++;
      return clearInterval(refreshInterval);
    };
  }, [isAuthenticated, refreshToken]);
  const contextValue =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[142]++, {
    user,
    isAuthenticated,
    isLoading,
    error,
    login,
    loginWithGoogle,
    logout,
    refreshToken,
    clearError,
    updateUser
  });
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[143]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(AuthContext.Provider, {
    value: contextValue,
    children: children
  });
}
function useAuth() {
  /* istanbul ignore next */
  cov_1bk2c8qr8c().f[24]++;
  const context =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[144]++, (0, _react.useContext)(AuthContext));
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[145]++;
  if (!context) {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().b[29][0]++;
    cov_1bk2c8qr8c().s[146]++;
    throw new Error('useAuth must be used within an AuthProvider');
  } else
  /* istanbul ignore next */
  {
    cov_1bk2c8qr8c().b[29][1]++;
  }
  cov_1bk2c8qr8c().s[147]++;
  return context;
}
function useRequireAuth() {
  /* istanbul ignore next */
  cov_1bk2c8qr8c().f[25]++;
  const auth =
  /* istanbul ignore next */
  (cov_1bk2c8qr8c().s[148]++, useAuth());
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[149]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_1bk2c8qr8c().f[26]++;
    cov_1bk2c8qr8c().s[150]++;
    if (
    /* istanbul ignore next */
    (cov_1bk2c8qr8c().b[31][0]++, !auth.isLoading) &&
    /* istanbul ignore next */
    (cov_1bk2c8qr8c().b[31][1]++, !auth.isAuthenticated)) {
      /* istanbul ignore next */
      cov_1bk2c8qr8c().b[30][0]++;
      cov_1bk2c8qr8c().s[151]++;
      // Redirect to login page
      if (typeof window !== 'undefined') {
        /* istanbul ignore next */
        cov_1bk2c8qr8c().b[32][0]++;
        cov_1bk2c8qr8c().s[152]++;
        window.location.href = '/login';
      } else
      /* istanbul ignore next */
      {
        cov_1bk2c8qr8c().b[32][1]++;
      }
    } else
    /* istanbul ignore next */
    {
      cov_1bk2c8qr8c().b[30][1]++;
    }
  }, [auth.isLoading, auth.isAuthenticated]);
  /* istanbul ignore next */
  cov_1bk2c8qr8c().s[153]++;
  return auth;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,