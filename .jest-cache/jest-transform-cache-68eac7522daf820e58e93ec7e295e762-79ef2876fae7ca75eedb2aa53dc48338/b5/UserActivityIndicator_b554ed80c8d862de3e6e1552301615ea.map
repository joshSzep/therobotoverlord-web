{"version":3,"names":["OnlineUsersList","cov_260u0bjid8","f","s","UserActivityIndicator","userId","showStatus","b","showLastSeen","className","connected","subscribe","unsubscribe","subscribeToChannel","_WebSocketProvider","useWebSocketContext","userActivities","setUserActivities","_react","useState","Map","useEffect","handleUserOnline","data","prev","updated","set","user_id","status","handleUserOffline","getStatusColor","getStatusText","formatLastSeen","lastSeen","date","Date","now","diffMs","getTime","diffMins","Math","floor","diffHours","diffDays","toLocaleDateString","activity","get","_jsxruntime","jsxs","jsx","last_seen","onlineCount","Array","from","values","filter","u","length","totalCount","size","maxUsers","onlineUsers","setOnlineUsers","filtered","slice","map","user","username","charAt","toUpperCase"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/UserActivityIndicator.tsx"],"sourcesContent":["/**\n * Real-time user activity indicator component.\n */\n\n'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { useWebSocketContext } from './WebSocketProvider';\n\ninterface UserActivity {\n  user_id: string;\n  username: string;\n  status: 'online' | 'offline' | 'away';\n  last_seen: string | null;\n}\n\ninterface UserActivityIndicatorProps {\n  userId?: string;\n  showStatus?: boolean;\n  showLastSeen?: boolean;\n  className?: string;\n}\n\nexport function UserActivityIndicator({ \n  userId, \n  showStatus = true, \n  showLastSeen = false,\n  className = ''\n}: UserActivityIndicatorProps) {\n  const { connected, subscribe, unsubscribe, subscribeToChannel } = useWebSocketContext();\n  const [userActivities, setUserActivities] = useState<Map<string, UserActivity>>(new Map());\n\n  useEffect(() => {\n    const handleUserOnline = (data: UserActivity) => {\n      setUserActivities(prev => {\n        const updated = new Map(prev);\n        updated.set(data.user_id, { ...data, status: 'online' });\n        return updated;\n      });\n    };\n\n    const handleUserOffline = (data: UserActivity) => {\n      setUserActivities(prev => {\n        const updated = new Map(prev);\n        updated.set(data.user_id, { ...data, status: 'offline' });\n        return updated;\n      });\n    };\n\n    if (connected) {\n      subscribe('user_online', handleUserOnline);\n      subscribe('user_offline', handleUserOffline);\n      subscribeToChannel('user_activity');\n    }\n\n    return () => {\n      unsubscribe('user_online', handleUserOnline);\n      unsubscribe('user_offline', handleUserOffline);\n    };\n  }, [connected, subscribe, unsubscribe, subscribeToChannel]);\n\n  const getStatusColor = (status: string): string => {\n    switch (status) {\n      case 'online': return 'bg-green-400';\n      case 'away': return 'bg-yellow-400';\n      case 'offline': return 'bg-gray-400';\n      default: return 'bg-gray-400';\n    }\n  };\n\n  const getStatusText = (status: string): string => {\n    switch (status) {\n      case 'online': return 'Online';\n      case 'away': return 'Away';\n      case 'offline': return 'Offline';\n      default: return 'Unknown';\n    }\n  };\n\n  const formatLastSeen = (lastSeen: string | null): string => {\n    if (!lastSeen) return 'Never';\n    \n    const date = new Date(lastSeen);\n    const now = new Date();\n    const diffMs = now.getTime() - date.getTime();\n    const diffMins = Math.floor(diffMs / (1000 * 60));\n    const diffHours = Math.floor(diffMins / 60);\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins}m ago`;\n    if (diffHours < 24) return `${diffHours}h ago`;\n    if (diffDays < 7) return `${diffDays}d ago`;\n    \n    return date.toLocaleDateString();\n  };\n\n  if (userId) {\n    // Show specific user's activity\n    const activity = userActivities.get(userId);\n    if (!activity && !connected) {\n      return (\n        <div className={`flex items-center ${className}`}>\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full\"></div>\n          {showStatus && <span className=\"ml-1 text-sm text-gray-500\">Connecting...</span>}\n        </div>\n      );\n    }\n\n    if (!activity) {\n      return (\n        <div className={`flex items-center ${className}`}>\n          <div className=\"w-2 h-2 bg-gray-400 rounded-full\"></div>\n          {showStatus && <span className=\"ml-1 text-sm text-gray-500\">Offline</span>}\n        </div>\n      );\n    }\n\n    return (\n      <div className={`flex items-center ${className}`}>\n        <div className={`w-2 h-2 rounded-full ${getStatusColor(activity.status)}`}></div>\n        {showStatus && (\n          <span className=\"ml-1 text-sm text-gray-600\">\n            {getStatusText(activity.status)}\n          </span>\n        )}\n        {showLastSeen && activity.status === 'offline' && (\n          <span className=\"ml-1 text-xs text-gray-500\">\n            {formatLastSeen(activity.last_seen)}\n          </span>\n        )}\n      </div>\n    );\n  }\n\n  // Show activity summary\n  const onlineCount = Array.from(userActivities.values()).filter(u => u.status === 'online').length;\n  const totalCount = userActivities.size;\n\n  return (\n    <div className={`flex items-center ${className}`}>\n      <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n      <span className=\"ml-1 text-sm text-gray-600\">\n        {onlineCount} of {totalCount} users online\n      </span>\n    </div>\n  );\n}\n\ninterface OnlineUsersListProps {\n  maxUsers?: number;\n  className?: string;\n}\n\nexport function OnlineUsersList({ maxUsers = 10, className = '' }: OnlineUsersListProps) {\n  const { connected, subscribe, unsubscribe, subscribeToChannel } = useWebSocketContext();\n  const [onlineUsers, setOnlineUsers] = useState<UserActivity[]>([]);\n\n  useEffect(() => {\n    const handleUserOnline = (data: UserActivity) => {\n      setOnlineUsers(prev => {\n        const filtered = prev.filter(u => u.user_id !== data.user_id);\n        return [...filtered, { ...data, status: 'online' }].slice(0, maxUsers);\n      });\n    };\n\n    const handleUserOffline = (data: UserActivity) => {\n      setOnlineUsers(prev => prev.filter(u => u.user_id !== data.user_id));\n    };\n\n    if (connected) {\n      subscribe('user_online', handleUserOnline);\n      subscribe('user_offline', handleUserOffline);\n      subscribeToChannel('user_activity');\n    }\n\n    return () => {\n      unsubscribe('user_online', handleUserOnline);\n      unsubscribe('user_offline', handleUserOffline);\n    };\n  }, [connected, subscribe, unsubscribe, subscribeToChannel, maxUsers]);\n\n  if (!connected) {\n    return (\n      <div className={`p-4 bg-gray-50 rounded-lg ${className}`}>\n        <div className=\"text-sm text-gray-500\">Connecting to activity feed...</div>\n      </div>\n    );\n  }\n\n  if (onlineUsers.length === 0) {\n    return (\n      <div className={`p-4 bg-gray-50 rounded-lg ${className}`}>\n        <div className=\"text-sm text-gray-500\">No users currently online</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-4 bg-white border border-gray-200 rounded-lg ${className}`}>\n      <h4 className=\"font-medium mb-3 flex items-center\">\n        <div className=\"w-2 h-2 bg-green-400 rounded-full mr-2\"></div>\n        Online Users ({onlineUsers.length})\n      </h4>\n      <div className=\"space-y-2\">\n        {onlineUsers.map((user) => (\n          <div key={user.user_id} className=\"flex items-center\">\n            <div className=\"w-6 h-6 bg-blue-100 rounded-full flex items-center justify-center mr-2\">\n              <span className=\"text-xs font-medium text-blue-600\">\n                {user.username.charAt(0).toUpperCase()}\n              </span>\n            </div>\n            <span className=\"text-sm text-gray-700\">{user.username}</span>\n            <div className=\"w-2 h-2 bg-green-400 rounded-full ml-auto\"></div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"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","ignoreList":[]}