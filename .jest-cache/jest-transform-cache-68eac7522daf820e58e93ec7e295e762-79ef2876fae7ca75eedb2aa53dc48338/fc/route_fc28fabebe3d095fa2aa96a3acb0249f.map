{"version":3,"names":["cov_p4ow3yj1s","actualCoverage","s","GET","f","baseUrl","b","process","env","NEXT_PUBLIC_SITE_URL","users","id","username","updatedAt","Date","toISOString","priority","now","sitemap","map","user","join","_server","NextResponse","headers","error","console","status"],"sources":["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/sitemap-users.xml/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\n// Users sitemap - dynamic content\nexport async function GET() {\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://robotoverlord.com';\n  \n  try {\n    // In a real implementation, fetch public user profiles from your database\n    // For now, we'll create a placeholder structure\n    const users = [\n      {\n        id: '1',\n        username: 'ai-researcher',\n        updatedAt: new Date().toISOString(),\n        priority: '0.6'\n      },\n      {\n        id: '2',\n        username: 'ml-engineer',\n        updatedAt: new Date(Date.now() - 86400000).toISOString(), // 1 day ago\n        priority: '0.5'\n      },\n      {\n        id: '3',\n        username: 'robotics-expert',\n        updatedAt: new Date(Date.now() - 172800000).toISOString(), // 2 days ago\n        priority: '0.5'\n      },\n      {\n        id: '4',\n        username: 'data-scientist',\n        updatedAt: new Date(Date.now() - 259200000).toISOString(), // 3 days ago\n        priority: '0.4'\n      }\n    ];\n\n    const sitemap = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<urlset xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">\n${users.map(user => `  <url>\n    <loc>${baseUrl}/users/${user.username}</loc>\n    <lastmod>${user.updatedAt}</lastmod>\n    <changefreq>weekly</changefreq>\n    <priority>${user.priority}</priority>\n  </url>`).join('\\n')}\n</urlset>`;\n\n    return new NextResponse(sitemap, {\n      headers: {\n        'Content-Type': 'application/xml',\n        'Cache-Control': 'public, max-age=3600, s-maxage=3600' // 1 hour cache\n      }\n    });\n  } catch (error) {\n    console.error('Error generating users sitemap:', error);\n    return new NextResponse('Error generating sitemap', { status: 500 });\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQI;IAAAA,aAAA,YAAAA,CAAA;MAAA,OAAAC,cAAA;IAAA;EAAA;EAAA,OAAAA,cAAA;AAAA;AAAAD,aAAA;AAAAA,aAAA,GAAAE,CAAA;;;;;;+BALkB;;;;;;WAAAC,GAAA;;;;;iCAHO;AAGtB,eAAeA,IAAA;EAAA;EAAAH,aAAA,GAAAI,CAAA;EACpB,MAAMC,OAAA;EAAA;EAAA,CAAAL,aAAA,GAAAE,CAAA;EAAU;EAAA,CAAAF,aAAA,GAAAM,CAAA,UAAAC,OAAA,CAAQC,GAAG,CAACC,oBAAoB;EAAA;EAAA,CAAAT,aAAA,GAAAM,CAAA,UAAI;EAAA;EAAAN,aAAA,GAAAE,CAAA;EAEpD,IAAI;IACF;IACA;IACA,MAAMQ,KAAA;IAAA;IAAA,CAAAV,aAAA,GAAAE,CAAA,OAAQ,CACZ;MACES,EAAA,EAAI;MACJC,QAAA,EAAU;MACVC,SAAA,EAAW,IAAIC,IAAA,GAAOC,WAAW;MACjCC,QAAA,EAAU;IACZ,GACA;MACEL,EAAA,EAAI;MACJC,QAAA,EAAU;MACVC,SAAA,EAAW,IAAIC,IAAA,CAAKA,IAAA,CAAKG,GAAG,KAAK,UAAUF,WAAW;MACtDC,QAAA,EAAU;IACZ,GACA;MACEL,EAAA,EAAI;MACJC,QAAA,EAAU;MACVC,SAAA,EAAW,IAAIC,IAAA,CAAKA,IAAA,CAAKG,GAAG,KAAK,WAAWF,WAAW;MACvDC,QAAA,EAAU;IACZ,GACA;MACEL,EAAA,EAAI;MACJC,QAAA,EAAU;MACVC,SAAA,EAAW,IAAIC,IAAA,CAAKA,IAAA,CAAKG,GAAG,KAAK,WAAWF,WAAW;MACvDC,QAAA,EAAU;IACZ,EACD;IAED,MAAME,OAAA;IAAA;IAAA,CAAAlB,aAAA,GAAAE,CAAA,OAAU;;AAEpB,EAAEQ,KAAA,CAAMS,GAAG,CAACC,IAAA,IAAQ;MAAA;MAAApB,aAAA,GAAAI,CAAA;MAAAJ,aAAA,GAAAE,CAAA;MAAA;WACTG,OAAA,UAAiBe,IAAA,CAAKR,QAAQ;eAC1BQ,IAAA,CAAKP,SAAS;;gBAEbO,IAAA,CAAKJ,QAAQ;SACpB;IAAD,CAAC,EAAEK,IAAI,CAAC;UACN;IAAA;IAAArB,aAAA,GAAAE,CAAA;IAEN,OAAO,IAAIoB,OAAA,CAAAC,YAAY,CAACL,OAAA,EAAS;MAC/BM,OAAA,EAAS;QACP,gBAAgB;QAChB,iBAAiB,sCAAsC;MACzD;IACF;EACF,EAAE,OAAOC,KAAA,EAAO;IAAA;IAAAzB,aAAA,GAAAE,CAAA;IACdwB,OAAA,CAAQD,KAAK,CAAC,mCAAmCA,KAAA;IAAA;IAAAzB,aAAA,GAAAE,CAAA;IACjD,OAAO,IAAIoB,OAAA,CAAAC,YAAY,CAAC,4BAA4B;MAAEI,MAAA,EAAQ;IAAI;EACpE;AACF","ignoreList":[]}