6485551f2d686d804da2ac5f023a3ff7
/**
 * Badges service for The Robot Overlord
 * Handles badge management, awarding, and badge-related operations
 */"use strict";

/* istanbul ignore next */
function cov_1p4u5j0qce() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/BadgesService.ts";
  var hash = "31f88adc0603d651539b3df112668e5aabad0795";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/BadgesService.ts",
    statementMap: {
      "0": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 7,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 4
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "2": {
        start: {
          line: 9,
          column: 24
        },
        end: {
          line: 12,
          column: 7
        }
      },
      "3": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 21,
          column: 3
        }
      },
      "4": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 16,
          column: 29
        }
      },
      "5": {
        start: {
          line: 19,
          column: 8
        },
        end: {
          line: 19,
          column: 29
        }
      },
      "6": {
        start: {
          line: 22,
          column: 21
        },
        end: {
          line: 22,
          column: 45
        }
      },
      "7": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 25,
          column: 25
        }
      },
      "8": {
        start: {
          line: 30,
          column: 23
        },
        end: {
          line: 30,
          column: 70
        }
      },
      "9": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 45
        }
      },
      "10": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 34
        }
      },
      "11": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 49
        }
      },
      "12": {
        start: {
          line: 46,
          column: 8
        },
        end: {
          line: 46,
          column: 45
        }
      },
      "13": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 43
        }
      },
      "14": {
        start: {
          line: 56,
          column: 8
        },
        end: {
          line: 56,
          column: 38
        }
      },
      "15": {
        start: {
          line: 61,
          column: 8
        },
        end: {
          line: 61,
          column: 37
        }
      },
      "16": {
        start: {
          line: 66,
          column: 8
        },
        end: {
          line: 66,
          column: 48
        }
      },
      "17": {
        start: {
          line: 71,
          column: 8
        },
        end: {
          line: 73,
          column: 11
        }
      },
      "18": {
        start: {
          line: 78,
          column: 8
        },
        end: {
          line: 80,
          column: 11
        }
      },
      "19": {
        start: {
          line: 85,
          column: 8
        },
        end: {
          line: 87,
          column: 11
        }
      },
      "20": {
        start: {
          line: 92,
          column: 23
        },
        end: {
          line: 95,
          column: 10
        }
      },
      "21": {
        start: {
          line: 96,
          column: 8
        },
        end: {
          line: 96,
          column: 52
        }
      },
      "22": {
        start: {
          line: 101,
          column: 8
        },
        end: {
          line: 101,
          column: 34
        }
      },
      "23": {
        start: {
          line: 106,
          column: 23
        },
        end: {
          line: 111,
          column: 9
        }
      },
      "24": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 112,
          column: 48
        }
      },
      "25": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 40
        }
      },
      "26": {
        start: {
          line: 122,
          column: 8
        },
        end: {
          line: 122,
          column: 46
        }
      },
      "27": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 35
        }
      },
      "28": {
        start: {
          line: 133,
          column: 8
        },
        end: {
          line: 133,
          column: 42
        }
      },
      "29": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 37
        }
      },
      "30": {
        start: {
          line: 143,
          column: 8
        },
        end: {
          line: 146,
          column: 11
        }
      },
      "31": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "32": {
        start: {
          line: 159,
          column: 8
        },
        end: {
          line: 162,
          column: 11
        }
      },
      "33": {
        start: {
          line: 167,
          column: 23
        },
        end: {
          line: 174,
          column: 9
        }
      },
      "34": {
        start: {
          line: 175,
          column: 8
        },
        end: {
          line: 175,
          column: 55
        }
      },
      "35": {
        start: {
          line: 180,
          column: 23
        },
        end: {
          line: 182,
          column: 21
        }
      },
      "36": {
        start: {
          line: 183,
          column: 8
        },
        end: {
          line: 183,
          column: 49
        }
      },
      "37": {
        start: {
          line: 188,
          column: 23
        },
        end: {
          line: 190,
          column: 21
        }
      },
      "38": {
        start: {
          line: 191,
          column: 8
        },
        end: {
          line: 191,
          column: 46
        }
      },
      "39": {
        start: {
          line: 196,
          column: 8
        },
        end: {
          line: 196,
          column: 53
        }
      },
      "40": {
        start: {
          line: 201,
          column: 8
        },
        end: {
          line: 201,
          column: 48
        }
      },
      "41": {
        start: {
          line: 206,
          column: 8
        },
        end: {
          line: 208,
          column: 11
        }
      },
      "42": {
        start: {
          line: 211,
          column: 22
        },
        end: {
          line: 211,
          column: 41
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 16
          }
        },
        loc: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 15,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        loc: {
          start: {
            line: 15,
            column: 25
          },
          end: {
            line: 17,
            column: 5
          }
        },
        line: 15
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 18,
            column: 5
          }
        },
        loc: {
          start: {
            line: 18,
            column: 25
          },
          end: {
            line: 20,
            column: 5
          }
        },
        line: 18
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 24,
            column: 5
          }
        },
        loc: {
          start: {
            line: 24,
            column: 17
          },
          end: {
            line: 26,
            column: 5
          }
        },
        line: 24
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 29,
            column: 7
          }
        },
        loc: {
          start: {
            line: 29,
            column: 31
          },
          end: {
            line: 32,
            column: 5
          }
        },
        line: 29
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 35,
            column: 6
          },
          end: {
            line: 35,
            column: 7
          }
        },
        loc: {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 37,
            column: 5
          }
        },
        line: 35
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 40,
            column: 6
          },
          end: {
            line: 40,
            column: 7
          }
        },
        loc: {
          start: {
            line: 40,
            column: 42
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 45,
            column: 6
          },
          end: {
            line: 45,
            column: 7
          }
        },
        loc: {
          start: {
            line: 45,
            column: 38
          },
          end: {
            line: 47,
            column: 5
          }
        },
        line: 45
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 50,
            column: 7
          }
        },
        loc: {
          start: {
            line: 50,
            column: 34
          },
          end: {
            line: 52,
            column: 5
          }
        },
        line: 50
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 55,
            column: 7
          }
        },
        loc: {
          start: {
            line: 55,
            column: 26
          },
          end: {
            line: 57,
            column: 5
          }
        },
        line: 55
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 60,
            column: 6
          },
          end: {
            line: 60,
            column: 7
          }
        },
        loc: {
          start: {
            line: 60,
            column: 31
          },
          end: {
            line: 62,
            column: 5
          }
        },
        line: 60
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 65,
            column: 6
          },
          end: {
            line: 65,
            column: 7
          }
        },
        loc: {
          start: {
            line: 65,
            column: 42
          },
          end: {
            line: 67,
            column: 5
          }
        },
        line: 65
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 70,
            column: 6
          },
          end: {
            line: 70,
            column: 7
          }
        },
        loc: {
          start: {
            line: 70,
            column: 43
          },
          end: {
            line: 74,
            column: 5
          }
        },
        line: 70
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 77,
            column: 7
          }
        },
        loc: {
          start: {
            line: 77,
            column: 41
          },
          end: {
            line: 81,
            column: 5
          }
        },
        line: 77
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 84,
            column: 6
          },
          end: {
            line: 84,
            column: 7
          }
        },
        loc: {
          start: {
            line: 84,
            column: 38
          },
          end: {
            line: 88,
            column: 5
          }
        },
        line: 84
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 91,
            column: 6
          },
          end: {
            line: 91,
            column: 7
          }
        },
        loc: {
          start: {
            line: 91,
            column: 41
          },
          end: {
            line: 97,
            column: 5
          }
        },
        line: 91
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 100,
            column: 6
          },
          end: {
            line: 100,
            column: 7
          }
        },
        loc: {
          start: {
            line: 100,
            column: 28
          },
          end: {
            line: 102,
            column: 5
          }
        },
        line: 100
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 105,
            column: 7
          }
        },
        loc: {
          start: {
            line: 105,
            column: 54
          },
          end: {
            line: 113,
            column: 5
          }
        },
        line: 105
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 116,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        loc: {
          start: {
            line: 116,
            column: 31
          },
          end: {
            line: 118,
            column: 5
          }
        },
        line: 116
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 121,
            column: 6
          },
          end: {
            line: 121,
            column: 7
          }
        },
        loc: {
          start: {
            line: 121,
            column: 32
          },
          end: {
            line: 123,
            column: 5
          }
        },
        line: 121
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 127,
            column: 7
          }
        },
        loc: {
          start: {
            line: 127,
            column: 30
          },
          end: {
            line: 129,
            column: 5
          }
        },
        line: 127
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 7
          }
        },
        loc: {
          start: {
            line: 132,
            column: 34
          },
          end: {
            line: 134,
            column: 5
          }
        },
        line: 132
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 137,
            column: 7
          }
        },
        loc: {
          start: {
            line: 137,
            column: 28
          },
          end: {
            line: 139,
            column: 5
          }
        },
        line: 137
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 142,
            column: 6
          },
          end: {
            line: 142,
            column: 7
          }
        },
        loc: {
          start: {
            line: 142,
            column: 48
          },
          end: {
            line: 147,
            column: 5
          }
        },
        line: 142
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 150,
            column: 7
          }
        },
        loc: {
          start: {
            line: 150,
            column: 49
          },
          end: {
            line: 155,
            column: 5
          }
        },
        line: 150
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 158,
            column: 6
          },
          end: {
            line: 158,
            column: 7
          }
        },
        loc: {
          start: {
            line: 158,
            column: 53
          },
          end: {
            line: 163,
            column: 5
          }
        },
        line: 158
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 166,
            column: 6
          },
          end: {
            line: 166,
            column: 7
          }
        },
        loc: {
          start: {
            line: 166,
            column: 60
          },
          end: {
            line: 176,
            column: 5
          }
        },
        line: 166
      },
      "27": {
        name: "(anonymous_27)",
        decl: {
          start: {
            line: 179,
            column: 6
          },
          end: {
            line: 179,
            column: 7
          }
        },
        loc: {
          start: {
            line: 179,
            column: 38
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 179
      },
      "28": {
        name: "(anonymous_28)",
        decl: {
          start: {
            line: 187,
            column: 6
          },
          end: {
            line: 187,
            column: 7
          }
        },
        loc: {
          start: {
            line: 187,
            column: 39
          },
          end: {
            line: 192,
            column: 5
          }
        },
        line: 187
      },
      "29": {
        name: "(anonymous_29)",
        decl: {
          start: {
            line: 195,
            column: 6
          },
          end: {
            line: 195,
            column: 7
          }
        },
        loc: {
          start: {
            line: 195,
            column: 34
          },
          end: {
            line: 197,
            column: 5
          }
        },
        line: 195
      },
      "30": {
        name: "(anonymous_30)",
        decl: {
          start: {
            line: 200,
            column: 6
          },
          end: {
            line: 200,
            column: 7
          }
        },
        loc: {
          start: {
            line: 200,
            column: 31
          },
          end: {
            line: 202,
            column: 5
          }
        },
        line: 200
      },
      "31": {
        name: "(anonymous_31)",
        decl: {
          start: {
            line: 205,
            column: 6
          },
          end: {
            line: 205,
            column: 7
          }
        },
        loc: {
          start: {
            line: 205,
            column: 42
          },
          end: {
            line: 209,
            column: 5
          }
        },
        line: 205
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 23
          },
          end: {
            line: 30,
            column: 70
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 33
          },
          end: {
            line: 30,
            column: 58
          }
        }, {
          start: {
            line: 30,
            column: 61
          },
          end: {
            line: 30,
            column: 70
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 70,
            column: 31
          },
          end: {
            line: 70,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 70,
            column: 39
          },
          end: {
            line: 70,
            column: 41
          }
        }],
        line: 70
      },
      "2": {
        loc: {
          start: {
            line: 77,
            column: 29
          },
          end: {
            line: 77,
            column: 39
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 77,
            column: 37
          },
          end: {
            line: 77,
            column: 39
          }
        }],
        line: 77
      },
      "3": {
        loc: {
          start: {
            line: 84,
            column: 26
          },
          end: {
            line: 84,
            column: 36
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 84,
            column: 34
          },
          end: {
            line: 84,
            column: 36
          }
        }],
        line: 84
      },
      "4": {
        loc: {
          start: {
            line: 105,
            column: 42
          },
          end: {
            line: 105,
            column: 52
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 105,
            column: 50
          },
          end: {
            line: 105,
            column: 52
          }
        }],
        line: 105
      },
      "5": {
        loc: {
          start: {
            line: 106,
            column: 23
          },
          end: {
            line: 111,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 106,
            column: 34
          },
          end: {
            line: 109,
            column: 9
          }
        }, {
          start: {
            line: 109,
            column: 12
          },
          end: {
            line: 111,
            column: 9
          }
        }],
        line: 106
      },
      "6": {
        loc: {
          start: {
            line: 166,
            column: 38
          },
          end: {
            line: 166,
            column: 46
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 166,
            column: 45
          },
          end: {
            line: 166,
            column: 46
          }
        }],
        line: 166
      },
      "7": {
        loc: {
          start: {
            line: 166,
            column: 48
          },
          end: {
            line: 166,
            column: 58
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 166,
            column: 56
          },
          end: {
            line: 166,
            column: 58
          }
        }],
        line: 166
      },
      "8": {
        loc: {
          start: {
            line: 167,
            column: 23
          },
          end: {
            line: 174,
            column: 9
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 167,
            column: 33
          },
          end: {
            line: 171,
            column: 9
          }
        }, {
          start: {
            line: 171,
            column: 12
          },
          end: {
            line: 174,
            column: 9
          }
        }],
        line: 167
      },
      "9": {
        loc: {
          start: {
            line: 180,
            column: 23
          },
          end: {
            line: 182,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 180,
            column: 32
          },
          end: {
            line: 182,
            column: 9
          }
        }, {
          start: {
            line: 182,
            column: 12
          },
          end: {
            line: 182,
            column: 21
          }
        }],
        line: 180
      },
      "10": {
        loc: {
          start: {
            line: 188,
            column: 23
          },
          end: {
            line: 190,
            column: 21
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 188,
            column: 33
          },
          end: {
            line: 190,
            column: 9
          }
        }, {
          start: {
            line: 190,
            column: 12
          },
          end: {
            line: 190,
            column: 21
          }
        }],
        line: 188
      },
      "11": {
        loc: {
          start: {
            line: 205,
            column: 25
          },
          end: {
            line: 205,
            column: 40
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 205,
            column: 34
          },
          end: {
            line: 205,
            column: 40
          }
        }],
        line: 205
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0
    },
    b: {
      "0": [0, 0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0, 0],
      "6": [0],
      "7": [0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/services/BadgesService.ts"],
      sourcesContent: ["/**\n * Badges service for The Robot Overlord\n * Handles badge management, awarding, and badge-related operations\n */\n\nimport { BaseService } from './BaseService';\nimport { ApiResponse, PaginatedResponse } from '@/types/api';\nimport { UserBadge } from '@/types/user';\n\nexport interface Badge {\n  id: string;\n  name: string;\n  description: string;\n  icon: string;\n  category: 'achievement' | 'participation' | 'moderation' | 'loyalty' | 'special' | 'seasonal';\n  rarity: 'common' | 'uncommon' | 'rare' | 'epic' | 'legendary';\n  requirements: Array<{\n    type: 'posts_created' | 'upvotes_received' | 'topics_created' | 'days_active' | 'loyalty_score' | 'moderation_actions' | 'special_event';\n    target: number;\n    timeframe?: 'day' | 'week' | 'month' | 'year' | 'all';\n    description: string;\n  }>;\n  rewards: {\n    loyaltyPoints: number;\n    title?: string;\n    privileges?: string[];\n  };\n  isActive: boolean;\n  isSecret: boolean;\n  sortOrder: number;\n  totalAwarded: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface BadgeFilters {\n  category?: Badge['category'];\n  rarity?: Badge['rarity'];\n  isActive?: boolean;\n  isSecret?: boolean;\n  search?: string;\n  sortBy?: 'name' | 'rarity' | 'awarded' | 'created' | 'category';\n  page?: number;\n  limit?: number;\n}\n\nexport interface CreateBadgeData {\n  name: string;\n  description: string;\n  icon: string;\n  category: Badge['category'];\n  rarity: Badge['rarity'];\n  requirements: Badge['requirements'];\n  rewards: Badge['rewards'];\n  isSecret?: boolean;\n  sortOrder?: number;\n}\n\nexport class BadgesService extends BaseService {\n  constructor() {\n    super('/badges');\n  }\n\n  /**\n   * Get all badges with filtering\n   */\n  async getBadges(filters?: BadgeFilters): Promise<PaginatedResponse<Badge>> {\n    const params = filters ? this.buildParams(filters) : undefined;\n    return this.getPaginated<Badge>('', params);\n  }\n\n  /**\n   * Get badge by ID\n   */\n  async getBadge(id: string): Promise<ApiResponse<Badge & {\n    holders: Array<{\n      user: {\n        id: string;\n        username: string;\n        avatar?: string;\n      };\n      awardedAt: string;\n      awardedBy?: string;\n      reason?: string;\n    }>;\n    userProgress?: {\n      current: number;\n      target: number;\n      percentage: number;\n    };\n  }>> {\n    return this.get(`/${id}`);\n  }\n\n  /**\n   * Get badges by category\n   */\n  async getBadgesByCategory(category: Badge['category']): Promise<ApiResponse<Badge[]>> {\n    return this.get(`/category/${category}`);\n  }\n\n  /**\n   * Get badges by rarity\n   */\n  async getBadgesByRarity(rarity: Badge['rarity']): Promise<ApiResponse<Badge[]>> {\n    return this.get(`/rarity/${rarity}`);\n  }\n\n  /**\n   * Get user's badges\n   */\n  async getUserBadges(userId: string): Promise<ApiResponse<Array<UserBadge & {\n    badge: Badge;\n  }>>> {\n    return this.get(`/user/${userId}`);\n  }\n\n  /**\n   * Get current user's badges\n   */\n  async getMyBadges(): Promise<ApiResponse<Array<UserBadge & {\n    badge: Badge;\n  }>>> {\n    return this.get('/my-badges');\n  }\n\n  /**\n   * Get badge progress for current user\n   */\n  async getBadgeProgress(): Promise<ApiResponse<Array<{\n    badge: Badge;\n    progress: Array<{\n      requirement: Badge['requirements'][0];\n      current: number;\n      target: number;\n      percentage: number;\n      completed: boolean;\n    }>;\n    isEligible: boolean;\n    isAwarded: boolean;\n    awardedAt?: string;\n  }>>> {\n    return this.get('/progress');\n  }\n\n  /**\n   * Get badge progress for specific badge\n   */\n  async getBadgeProgressById(badgeId: string): Promise<ApiResponse<{\n    badge: Badge;\n    progress: Array<{\n      requirement: Badge['requirements'][0];\n      current: number;\n      target: number;\n      percentage: number;\n      completed: boolean;\n    }>;\n    isEligible: boolean;\n    isAwarded: boolean;\n    awardedAt?: string;\n  }>> {\n    return this.get(`/${badgeId}/progress`);\n  }\n\n  /**\n   * Get recently awarded badges\n   */\n  async getRecentlyAwarded(limit = 20): Promise<ApiResponse<Array<{\n    user: {\n      id: string;\n      username: string;\n      avatar?: string;\n    };\n    badge: Badge;\n    awardedAt: string;\n    awardedBy?: string;\n    reason?: string;\n  }>>> {\n    return this.get('/recent', { limit });\n  }\n\n  /**\n   * Get popular badges (most awarded)\n   */\n  async getPopularBadges(limit = 10): Promise<ApiResponse<Array<Badge & {\n    awardedCount: number;\n    recentAwards: number;\n  }>>> {\n    return this.get('/popular', { limit });\n  }\n\n  /**\n   * Get rare badges (least awarded)\n   */\n  async getRareBadges(limit = 10): Promise<ApiResponse<Array<Badge & {\n    awardedCount: number;\n  }>>> {\n    return this.get('/rare', { limit });\n  }\n\n  /**\n   * Search badges\n   */\n  async searchBadges(query: string, filters?: Omit<BadgeFilters, 'search'>): Promise<PaginatedResponse<Badge>> {\n    const params = this.buildParams({ search: query, ...filters });\n    return this.getPaginated<Badge>('/search', params);\n  }\n\n  /**\n   * Get badge statistics\n   */\n  async getBadgeStats(): Promise<ApiResponse<{\n    totalBadges: number;\n    totalAwarded: number;\n    categoryBreakdown: Record<string, number>;\n    rarityBreakdown: Record<string, number>;\n    averageAwardsPerBadge: number;\n    mostAwardedBadge: {\n      badge: Badge;\n      count: number;\n    };\n    rarest: {\n      badge: Badge;\n      count: number;\n    };\n    recentActivity: Array<{\n      date: string;\n      awarded: number;\n    }>;\n  }>> {\n    return this.get('/stats');\n  }\n\n  /**\n   * Get badge leaderboard (users with most badges)\n   */\n  async getBadgeLeaderboard(category?: Badge['category'], limit = 50): Promise<ApiResponse<Array<{\n    user: {\n      id: string;\n      username: string;\n      avatar?: string;\n      loyaltyScore: number;\n    };\n    badgeCount: number;\n    rarityScore: number;\n    categories: Record<string, number>;\n    latestBadge?: {\n      badge: Badge;\n      awardedAt: string;\n    };\n  }>>> {\n    const params = category ? { category, limit } : { limit };\n    return this.get('/leaderboard', params);\n  }\n\n  /**\n   * Check badge eligibility for current user\n   */\n  async checkEligibility(): Promise<ApiResponse<Array<{\n    badge: Badge;\n    isEligible: boolean;\n    missingRequirements: Array<{\n      requirement: Badge['requirements'][0];\n      current: number;\n      needed: number;\n    }>;\n  }>>> {\n    return this.get('/eligibility');\n  }\n\n  /**\n   * Claim eligible badge\n   */\n  async claimBadge(badgeId: string): Promise<ApiResponse<{\n    success: boolean;\n    badge?: Badge;\n    userBadge?: UserBadge;\n    message: string;\n  }>> {\n    return this.post(`/${badgeId}/claim`);\n  }\n\n  // Admin/Moderator endpoints\n\n  /**\n   * Create new badge (admin only)\n   */\n  async createBadge(data: CreateBadgeData): Promise<ApiResponse<Badge>> {\n    return this.post('', data);\n  }\n\n  /**\n   * Update badge (admin only)\n   */\n  async updateBadge(id: string, data: Partial<CreateBadgeData>): Promise<ApiResponse<Badge>> {\n    return this.patch(`/${id}`, data);\n  }\n\n  /**\n   * Delete badge (admin only)\n   */\n  async deleteBadge(id: string): Promise<ApiResponse<{ message: string }>> {\n    return this.delete(`/${id}`);\n  }\n\n  /**\n   * Award badge manually (admin/moderator only)\n   */\n  async awardBadge(badgeId: string, userId: string, reason?: string): Promise<ApiResponse<UserBadge>> {\n    return this.post(`/${badgeId}/award`, { userId, reason });\n  }\n\n  /**\n   * Revoke badge (admin only)\n   */\n  async revokeBadge(badgeId: string, userId: string, reason?: string): Promise<ApiResponse<{ message: string }>> {\n    return this.post(`/${badgeId}/revoke`, { userId, reason });\n  }\n\n  /**\n   * Bulk award badges (admin only)\n   */\n  async bulkAwardBadge(badgeId: string, userIds: string[], reason?: string): Promise<ApiResponse<{\n    success: string[];\n    failed: Array<{ userId: string; error: string }>;\n  }>> {\n    return this.post(`/${badgeId}/bulk-award`, { userIds, reason });\n  }\n\n  /**\n   * Get badge audit log (admin only)\n   */\n  async getBadgeAuditLog(badgeId?: string, page = 1, limit = 50): Promise<PaginatedResponse<{\n    id: string;\n    action: 'awarded' | 'revoked' | 'created' | 'updated' | 'deleted';\n    badgeId: string;\n    badge: Badge;\n    userId?: string;\n    user?: {\n      id: string;\n      username: string;\n    };\n    performedBy: string;\n    performer: {\n      id: string;\n      username: string;\n    };\n    reason?: string;\n    metadata?: Record<string, any>;\n    createdAt: string;\n  }>> {\n    const params = badgeId ? { badgeId, page, limit } : { page, limit };\n    return this.getPaginated('/audit-log', params);\n  }\n\n  /**\n   * Recalculate badge eligibility (admin only)\n   */\n  async recalculateBadges(userId?: string): Promise<ApiResponse<{\n    message: string;\n    processed: number;\n    awarded: number;\n  }>> {\n    const params = userId ? { userId } : undefined;\n    return this.post('/recalculate', params);\n  }\n\n  /**\n   * Get badge analytics (admin only)\n   */\n  async getBadgeAnalytics(badgeId?: string): Promise<ApiResponse<{\n    totalBadges: number;\n    totalAwarded: number;\n    awardingTrends: Array<{ date: string; awarded: number }>;\n    categoryDistribution: Record<string, number>;\n    rarityDistribution: Record<string, number>;\n    topPerformers: Array<{\n      user: { id: string; username: string };\n      badgeCount: number;\n    }>;\n    engagementMetrics: {\n      averageTimeToEarn: number;\n      completionRates: Record<string, number>;\n    };\n    badgeSpecific?: {\n      badge: Badge;\n      awardedCount: number;\n      averageTimeToEarn: number;\n      completionRate: number;\n      requirementProgress: Array<{\n        requirement: string;\n        averageProgress: number;\n      }>;\n    };\n  }>> {\n    const params = badgeId ? { badgeId } : undefined;\n    return this.get('/analytics', params);\n  }\n\n  /**\n   * Upload badge icon (admin only)\n   */\n  async uploadBadgeIcon(file: File): Promise<ApiResponse<{ iconUrl: string; iconId: string }>> {\n    return this.uploadFile('/upload/icon', file);\n  }\n\n  /**\n   * Import badges from file (admin only)\n   */\n  async importBadges(file: File): Promise<ApiResponse<{\n    imported: number;\n    failed: Array<{ row: number; error: string }>;\n    badges: Badge[];\n  }>> {\n    return this.uploadFile('/import', file);\n  }\n\n  /**\n   * Export badges data (admin only)\n   */\n  async exportBadges(format: 'json' | 'csv' = 'json'): Promise<ApiResponse<{ downloadUrl: string; expiresAt: string }>> {\n    return this.get('/export', { format });\n  }\n}\n\n// Export singleton instance\nexport const badgesService = new BadgesService();\n"],
      names: ["BadgesService", "badgesService", "BaseService", "getBadges", "filters", "params", "buildParams", "undefined", "getPaginated", "getBadge", "id", "get", "getBadgesByCategory", "category", "getBadgesByRarity", "rarity", "getUserBadges", "userId", "getMyBadges", "getBadgeProgress", "getBadgeProgressById", "badgeId", "getRecentlyAwarded", "limit", "getPopularBadges", "getRareBadges", "searchBadges", "query", "search", "getBadgeStats", "getBadgeLeaderboard", "checkEligibility", "claimBadge", "post", "createBadge", "data", "updateBadge", "patch", "deleteBadge", "delete", "awardBadge", "reason", "revokeBadge", "bulkAwardBadge", "userIds", "getBadgeAuditLog", "page", "recalculateBadges", "getBadgeAnalytics", "uploadBadgeIcon", "file", "uploadFile", "importBadges", "exportBadges", "format"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "31f88adc0603d651539b3df112668e5aabad0795"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1p4u5j0qce = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p4u5j0qce();
cov_1p4u5j0qce().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_1p4u5j0qce().f[0]++;
  cov_1p4u5j0qce().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_1p4u5j0qce().s[3]++;
_export(exports, {
  get BadgesService() {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[1]++;
    cov_1p4u5j0qce().s[4]++;
    return BadgesService;
  },
  get badgesService() {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[2]++;
    cov_1p4u5j0qce().s[5]++;
    return badgesService;
  }
});
const _BaseService =
/* istanbul ignore next */
(cov_1p4u5j0qce().s[6]++, require("./BaseService"));
class BadgesService extends
/* istanbul ignore next */
(_BaseService.BaseService) {
  constructor() {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[3]++;
    cov_1p4u5j0qce().s[7]++;
    super('/badges');
  }
  /**
  * Get all badges with filtering
  */
  async getBadges(filters) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[4]++;
    const params =
    /* istanbul ignore next */
    (cov_1p4u5j0qce().s[8]++, filters ?
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[0][0]++, this.buildParams(filters)) :
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[0][1]++, undefined));
    /* istanbul ignore next */
    cov_1p4u5j0qce().s[9]++;
    return this.getPaginated('', params);
  }
  /**
  * Get badge by ID
  */
  async getBadge(id) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[5]++;
    cov_1p4u5j0qce().s[10]++;
    return this.get(`/${id}`);
  }
  /**
  * Get badges by category
  */
  async getBadgesByCategory(category) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[6]++;
    cov_1p4u5j0qce().s[11]++;
    return this.get(`/category/${category}`);
  }
  /**
  * Get badges by rarity
  */
  async getBadgesByRarity(rarity) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[7]++;
    cov_1p4u5j0qce().s[12]++;
    return this.get(`/rarity/${rarity}`);
  }
  /**
  * Get user's badges
  */
  async getUserBadges(userId) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[8]++;
    cov_1p4u5j0qce().s[13]++;
    return this.get(`/user/${userId}`);
  }
  /**
  * Get current user's badges
  */
  async getMyBadges() {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[9]++;
    cov_1p4u5j0qce().s[14]++;
    return this.get('/my-badges');
  }
  /**
  * Get badge progress for current user
  */
  async getBadgeProgress() {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[10]++;
    cov_1p4u5j0qce().s[15]++;
    return this.get('/progress');
  }
  /**
  * Get badge progress for specific badge
  */
  async getBadgeProgressById(badgeId) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[11]++;
    cov_1p4u5j0qce().s[16]++;
    return this.get(`/${badgeId}/progress`);
  }
  /**
  * Get recently awarded badges
  */
  async getRecentlyAwarded(limit =
  /* istanbul ignore next */
  (cov_1p4u5j0qce().b[1][0]++, 20)) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[12]++;
    cov_1p4u5j0qce().s[17]++;
    return this.get('/recent', {
      limit
    });
  }
  /**
  * Get popular badges (most awarded)
  */
  async getPopularBadges(limit =
  /* istanbul ignore next */
  (cov_1p4u5j0qce().b[2][0]++, 10)) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[13]++;
    cov_1p4u5j0qce().s[18]++;
    return this.get('/popular', {
      limit
    });
  }
  /**
  * Get rare badges (least awarded)
  */
  async getRareBadges(limit =
  /* istanbul ignore next */
  (cov_1p4u5j0qce().b[3][0]++, 10)) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[14]++;
    cov_1p4u5j0qce().s[19]++;
    return this.get('/rare', {
      limit
    });
  }
  /**
  * Search badges
  */
  async searchBadges(query, filters) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[15]++;
    const params =
    /* istanbul ignore next */
    (cov_1p4u5j0qce().s[20]++, this.buildParams({
      search: query,
      ...filters
    }));
    /* istanbul ignore next */
    cov_1p4u5j0qce().s[21]++;
    return this.getPaginated('/search', params);
  }
  /**
  * Get badge statistics
  */
  async getBadgeStats() {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[16]++;
    cov_1p4u5j0qce().s[22]++;
    return this.get('/stats');
  }
  /**
  * Get badge leaderboard (users with most badges)
  */
  async getBadgeLeaderboard(category, limit =
  /* istanbul ignore next */
  (cov_1p4u5j0qce().b[4][0]++, 50)) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[17]++;
    const params =
    /* istanbul ignore next */
    (cov_1p4u5j0qce().s[23]++, category ?
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[5][0]++, {
      category,
      limit
    }) :
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[5][1]++, {
      limit
    }));
    /* istanbul ignore next */
    cov_1p4u5j0qce().s[24]++;
    return this.get('/leaderboard', params);
  }
  /**
  * Check badge eligibility for current user
  */
  async checkEligibility() {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[18]++;
    cov_1p4u5j0qce().s[25]++;
    return this.get('/eligibility');
  }
  /**
  * Claim eligible badge
  */
  async claimBadge(badgeId) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[19]++;
    cov_1p4u5j0qce().s[26]++;
    return this.post(`/${badgeId}/claim`);
  }
  // Admin/Moderator endpoints
  /**
  * Create new badge (admin only)
  */
  async createBadge(data) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[20]++;
    cov_1p4u5j0qce().s[27]++;
    return this.post('', data);
  }
  /**
  * Update badge (admin only)
  */
  async updateBadge(id, data) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[21]++;
    cov_1p4u5j0qce().s[28]++;
    return this.patch(`/${id}`, data);
  }
  /**
  * Delete badge (admin only)
  */
  async deleteBadge(id) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[22]++;
    cov_1p4u5j0qce().s[29]++;
    return this.delete(`/${id}`);
  }
  /**
  * Award badge manually (admin/moderator only)
  */
  async awardBadge(badgeId, userId, reason) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[23]++;
    cov_1p4u5j0qce().s[30]++;
    return this.post(`/${badgeId}/award`, {
      userId,
      reason
    });
  }
  /**
  * Revoke badge (admin only)
  */
  async revokeBadge(badgeId, userId, reason) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[24]++;
    cov_1p4u5j0qce().s[31]++;
    return this.post(`/${badgeId}/revoke`, {
      userId,
      reason
    });
  }
  /**
  * Bulk award badges (admin only)
  */
  async bulkAwardBadge(badgeId, userIds, reason) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[25]++;
    cov_1p4u5j0qce().s[32]++;
    return this.post(`/${badgeId}/bulk-award`, {
      userIds,
      reason
    });
  }
  /**
  * Get badge audit log (admin only)
  */
  async getBadgeAuditLog(badgeId, page =
  /* istanbul ignore next */
  (cov_1p4u5j0qce().b[6][0]++, 1), limit =
  /* istanbul ignore next */
  (cov_1p4u5j0qce().b[7][0]++, 50)) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[26]++;
    const params =
    /* istanbul ignore next */
    (cov_1p4u5j0qce().s[33]++, badgeId ?
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[8][0]++, {
      badgeId,
      page,
      limit
    }) :
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[8][1]++, {
      page,
      limit
    }));
    /* istanbul ignore next */
    cov_1p4u5j0qce().s[34]++;
    return this.getPaginated('/audit-log', params);
  }
  /**
  * Recalculate badge eligibility (admin only)
  */
  async recalculateBadges(userId) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[27]++;
    const params =
    /* istanbul ignore next */
    (cov_1p4u5j0qce().s[35]++, userId ?
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[9][0]++, {
      userId
    }) :
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[9][1]++, undefined));
    /* istanbul ignore next */
    cov_1p4u5j0qce().s[36]++;
    return this.post('/recalculate', params);
  }
  /**
  * Get badge analytics (admin only)
  */
  async getBadgeAnalytics(badgeId) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[28]++;
    const params =
    /* istanbul ignore next */
    (cov_1p4u5j0qce().s[37]++, badgeId ?
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[10][0]++, {
      badgeId
    }) :
    /* istanbul ignore next */
    (cov_1p4u5j0qce().b[10][1]++, undefined));
    /* istanbul ignore next */
    cov_1p4u5j0qce().s[38]++;
    return this.get('/analytics', params);
  }
  /**
  * Upload badge icon (admin only)
  */
  async uploadBadgeIcon(file) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[29]++;
    cov_1p4u5j0qce().s[39]++;
    return this.uploadFile('/upload/icon', file);
  }
  /**
  * Import badges from file (admin only)
  */
  async importBadges(file) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[30]++;
    cov_1p4u5j0qce().s[40]++;
    return this.uploadFile('/import', file);
  }
  /**
  * Export badges data (admin only)
  */
  async exportBadges(format =
  /* istanbul ignore next */
  (cov_1p4u5j0qce().b[11][0]++, 'json')) {
    /* istanbul ignore next */
    cov_1p4u5j0qce().f[31]++;
    cov_1p4u5j0qce().s[41]++;
    return this.get('/export', {
      format
    });
  }
}
const badgesService =
/* istanbul ignore next */
(cov_1p4u5j0qce().s[42]++, new BadgesService());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,