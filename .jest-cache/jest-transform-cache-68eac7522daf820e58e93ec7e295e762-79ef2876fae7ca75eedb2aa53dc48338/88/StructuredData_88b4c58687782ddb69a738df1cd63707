e3913ce0f2eab91743318d8415e95af7
'use client';
"use strict";

/* istanbul ignore next */
function cov_24h33d571o() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/seo/StructuredData.tsx";
  var hash = "9af8b0a04d0ac4817fe178ed6195b880c16f1769";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/seo/StructuredData.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 30
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 37
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 24
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 33
        }
      },
      "9": {
        start: {
          line: 29,
          column: 20
        },
        end: {
          line: 29,
          column: 48
        }
      },
      "10": {
        start: {
          line: 30,
          column: 28
        },
        end: {
          line: 30,
          column: 74
        }
      },
      "11": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 34,
          column: 6
        }
      },
      "12": {
        start: {
          line: 36,
          column: 23
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "13": {
        start: {
          line: 37,
          column: 27
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "14": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 48,
          column: 7
        }
      },
      "15": {
        start: {
          line: 50,
          column: 35
        },
        end: {
          line: 72,
          column: 1
        }
      },
      "16": {
        start: {
          line: 51,
          column: 29
        },
        end: {
          line: 68,
          column: 5
        }
      },
      "17": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 71,
          column: 7
        }
      },
      "18": {
        start: {
          line: 73,
          column: 30
        },
        end: {
          line: 88,
          column: 1
        }
      },
      "19": {
        start: {
          line: 74,
          column: 24
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "20": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 87,
          column: 7
        }
      },
      "21": {
        start: {
          line: 89,
          column: 26
        },
        end: {
          line: 176,
          column: 1
        }
      },
      "22": {
        start: {
          line: 90,
          column: 32
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "23": {
        start: {
          line: 90,
          column: 44
        },
        end: {
          line: 117,
          column: 9
        }
      },
      "24": {
        start: {
          line: 118,
          column: 35
        },
        end: {
          line: 126,
          column: 10
        }
      },
      "25": {
        start: {
          line: 118,
          column: 51
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "26": {
        start: {
          line: 120,
          column: 62
        },
        end: {
          line: 125,
          column: 17
        }
      },
      "27": {
        start: {
          line: 127,
          column: 28
        },
        end: {
          line: 137,
          column: 10
        }
      },
      "28": {
        start: {
          line: 127,
          column: 37
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "29": {
        start: {
          line: 129,
          column: 41
        },
        end: {
          line: 136,
          column: 17
        }
      },
      "30": {
        start: {
          line: 138,
          column: 30
        },
        end: {
          line: 155,
          column: 10
        }
      },
      "31": {
        start: {
          line: 138,
          column: 40
        },
        end: {
          line: 155,
          column: 9
        }
      },
      "32": {
        start: {
          line: 156,
          column: 31
        },
        end: {
          line: 168,
          column: 10
        }
      },
      "33": {
        start: {
          line: 156,
          column: 42
        },
        end: {
          line: 168,
          column: 9
        }
      },
      "34": {
        start: {
          line: 169,
          column: 4
        },
        end: {
          line: 175,
          column: 6
        }
      },
      "35": {
        start: {
          line: 177,
          column: 17
        },
        end: {
          line: 177,
          column: 31
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 38
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 26
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 33
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 19
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 29
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 31,
            column: 9
          },
          end: {
            line: 31,
            column: 33
          }
        },
        loc: {
          start: {
            line: 31,
            column: 39
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 31
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 36,
            column: 23
          },
          end: {
            line: 36,
            column: 24
          }
        },
        loc: {
          start: {
            line: 36,
            column: 35
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 36
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 50,
            column: 35
          },
          end: {
            line: 50,
            column: 36
          }
        },
        loc: {
          start: {
            line: 50,
            column: 39
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 50
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 73,
            column: 30
          },
          end: {
            line: 73,
            column: 31
          }
        },
        loc: {
          start: {
            line: 73,
            column: 34
          },
          end: {
            line: 88,
            column: 1
          }
        },
        line: 73
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 89,
            column: 26
          },
          end: {
            line: 89,
            column: 27
          }
        },
        loc: {
          start: {
            line: 89,
            column: 30
          },
          end: {
            line: 176,
            column: 1
          }
        },
        line: 89
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 90,
            column: 32
          },
          end: {
            line: 90,
            column: 33
          }
        },
        loc: {
          start: {
            line: 90,
            column: 44
          },
          end: {
            line: 117,
            column: 9
          }
        },
        line: 90
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 118,
            column: 35
          },
          end: {
            line: 118,
            column: 36
          }
        },
        loc: {
          start: {
            line: 118,
            column: 51
          },
          end: {
            line: 126,
            column: 9
          }
        },
        line: 118
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 120,
            column: 45
          },
          end: {
            line: 120,
            column: 46
          }
        },
        loc: {
          start: {
            line: 120,
            column: 62
          },
          end: {
            line: 125,
            column: 17
          }
        },
        line: 120
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 127,
            column: 28
          },
          end: {
            line: 127,
            column: 29
          }
        },
        loc: {
          start: {
            line: 127,
            column: 37
          },
          end: {
            line: 137,
            column: 9
          }
        },
        line: 127
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 129,
            column: 33
          },
          end: {
            line: 129,
            column: 34
          }
        },
        loc: {
          start: {
            line: 129,
            column: 41
          },
          end: {
            line: 136,
            column: 17
          }
        },
        line: 129
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 138,
            column: 30
          },
          end: {
            line: 138,
            column: 31
          }
        },
        loc: {
          start: {
            line: 138,
            column: 40
          },
          end: {
            line: 155,
            column: 9
          }
        },
        line: 138
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 156,
            column: 31
          },
          end: {
            line: 156,
            column: 32
          }
        },
        loc: {
          start: {
            line: 156,
            column: 42
          },
          end: {
            line: 168,
            column: 9
          }
        },
        line: 156
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 34,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 32,
            column: 35
          },
          end: {
            line: 32,
            column: 38
          }
        }, {
          start: {
            line: 32,
            column: 41
          },
          end: {
            line: 34,
            column: 5
          }
        }],
        line: 32
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 11
          },
          end: {
            line: 32,
            column: 14
          }
        }, {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 32
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 54,
            column: 13
          },
          end: {
            line: 54,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 54,
            column: 13
          },
          end: {
            line: 54,
            column: 45
          }
        }, {
          start: {
            line: 54,
            column: 49
          },
          end: {
            line: 54,
            column: 76
          }
        }],
        line: 54
      },
      "3": {
        loc: {
          start: {
            line: 77,
            column: 13
          },
          end: {
            line: 77,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 77,
            column: 13
          },
          end: {
            line: 77,
            column: 45
          }
        }, {
          start: {
            line: 77,
            column: 49
          },
          end: {
            line: 77,
            column: 76
          }
        }],
        line: 77
      },
      "4": {
        loc: {
          start: {
            line: 102,
            column: 21
          },
          end: {
            line: 102,
            column: 84
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 21
          },
          end: {
            line: 102,
            column: 53
          }
        }, {
          start: {
            line: 102,
            column: 57
          },
          end: {
            line: 102,
            column: 84
          }
        }],
        line: 102
      },
      "5": {
        loc: {
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 66
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 26
          },
          end: {
            line: 108,
            column: 43
          }
        }, {
          start: {
            line: 108,
            column: 47
          },
          end: {
            line: 108,
            column: 66
          }
        }],
        line: 108
      },
      "6": {
        loc: {
          start: {
            line: 109,
            column: 19
          },
          end: {
            line: 111,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 109,
            column: 35
          },
          end: {
            line: 111,
            column: 13
          }
        }, {
          start: {
            line: 111,
            column: 16
          },
          end: {
            line: 111,
            column: 25
          }
        }],
        line: 109
      },
      "7": {
        loc: {
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 162,
            column: 39
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 162,
            column: 20
          },
          end: {
            line: 162,
            column: 33
          }
        }, {
          start: {
            line: 162,
            column: 37
          },
          end: {
            line: 162,
            column: 39
          }
        }],
        line: 162
      },
      "8": {
        loc: {
          start: {
            line: 164,
            column: 22
          },
          end: {
            line: 167,
            column: 25
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 164,
            column: 40
          },
          end: {
            line: 167,
            column: 13
          }
        }, {
          start: {
            line: 167,
            column: 16
          },
          end: {
            line: 167,
            column: 25
          }
        }],
        line: 164
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/seo/StructuredData.tsx"],
      sourcesContent: ["'use client';\n\nimport Head from 'next/head';\n\n// Schema.org structured data types\ninterface Organization {\n  '@type': 'Organization';\n  name: string;\n  url: string;\n  logo: string;\n  description: string;\n  sameAs: string[];\n  contactPoint?: {\n    '@type': 'ContactPoint';\n    contactType: string;\n    email?: string;\n    url?: string;\n  };\n}\n\ninterface WebSite {\n  '@type': 'WebSite';\n  name: string;\n  url: string;\n  description: string;\n  potentialAction?: {\n    '@type': 'SearchAction';\n    target: string;\n    'query-input': string;\n  };\n}\n\ninterface Article {\n  '@type': 'Article';\n  headline: string;\n  description: string;\n  author: {\n    '@type': 'Person';\n    name: string;\n    url?: string;\n  };\n  publisher: Organization;\n  datePublished: string;\n  dateModified?: string;\n  image?: string[];\n  url: string;\n  mainEntityOfPage: string;\n  keywords?: string[];\n  articleSection?: string;\n  wordCount?: number;\n}\n\ninterface BreadcrumbList {\n  '@type': 'BreadcrumbList';\n  itemListElement: Array<{\n    '@type': 'ListItem';\n    position: number;\n    name: string;\n    item: string;\n  }>;\n}\n\ninterface FAQPage {\n  '@type': 'FAQPage';\n  mainEntity: Array<{\n    '@type': 'Question';\n    name: string;\n    acceptedAnswer: {\n      '@type': 'Answer';\n      text: string;\n    };\n  }>;\n}\n\ninterface StructuredDataProps {\n  data: Organization | WebSite | Article | BreadcrumbList | FAQPage | any;\n}\n\nexport const StructuredData: React.FC<StructuredDataProps> = ({ data }) => {\n  const structuredData = {\n    '@context': 'https://schema.org',\n    ...data\n  };\n\n  return (\n    <Head>\n      <script\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify(structuredData, null, 2)\n        }}\n      />\n    </Head>\n  );\n};\n\n// Predefined structured data for common use cases\nexport const OrganizationStructuredData: React.FC = () => {\n  const organizationData: Organization = {\n    '@type': 'Organization',\n    name: 'The Robot Overlord',\n    url: process.env.NEXT_PUBLIC_SITE_URL || 'https://robotoverlord.com',\n    logo: `${process.env.NEXT_PUBLIC_SITE_URL}/images/logo.png`,\n    description: 'AI-powered community platform for technology discussions and insights',\n    sameAs: [\n      'https://twitter.com/robotoverlord',\n      'https://github.com/robotoverlord',\n      'https://linkedin.com/company/robotoverlord'\n    ],\n    contactPoint: {\n      '@type': 'ContactPoint',\n      contactType: 'customer support',\n      email: 'support@robotoverlord.com',\n      url: `${process.env.NEXT_PUBLIC_SITE_URL}/contact`\n    }\n  };\n\n  return <StructuredData data={organizationData} />;\n};\n\nexport const WebSiteStructuredData: React.FC = () => {\n  const websiteData: WebSite = {\n    '@type': 'WebSite',\n    name: 'The Robot Overlord',\n    url: process.env.NEXT_PUBLIC_SITE_URL || 'https://robotoverlord.com',\n    description: 'AI-powered community platform for technology discussions and insights',\n    potentialAction: {\n      '@type': 'SearchAction',\n      target: `${process.env.NEXT_PUBLIC_SITE_URL}/search?q={search_term_string}`,\n      'query-input': 'required name=search_term_string'\n    }\n  };\n\n  return <StructuredData data={websiteData} />;\n};\n\n// Hook for generating structured data\nexport const useStructuredData = () => {\n  const generateArticleData = (article: {\n    title: string;\n    description: string;\n    content: string;\n    author: string;\n    authorUrl?: string;\n    publishedAt: string;\n    updatedAt?: string;\n    image?: string;\n    url: string;\n    keywords?: string[];\n    section?: string;\n  }): Article => ({\n    '@type': 'Article',\n    headline: article.title,\n    description: article.description,\n    author: {\n      '@type': 'Person',\n      name: article.author,\n      url: article.authorUrl\n    },\n    publisher: {\n      '@type': 'Organization',\n      name: 'The Robot Overlord',\n      url: process.env.NEXT_PUBLIC_SITE_URL || 'https://robotoverlord.com',\n      logo: `${process.env.NEXT_PUBLIC_SITE_URL}/images/logo.png`,\n      description: 'AI-powered community platform',\n      sameAs: []\n    },\n    datePublished: article.publishedAt,\n    dateModified: article.updatedAt || article.publishedAt,\n    image: article.image ? [article.image] : undefined,\n    url: article.url,\n    mainEntityOfPage: article.url,\n    keywords: article.keywords,\n    articleSection: article.section,\n    wordCount: article.content.split(' ').length\n  });\n\n  const generateBreadcrumbData = (breadcrumbs: Array<{\n    name: string;\n    url: string;\n  }>): BreadcrumbList => ({\n    '@type': 'BreadcrumbList',\n    itemListElement: breadcrumbs.map((crumb, index) => ({\n      '@type': 'ListItem',\n      position: index + 1,\n      name: crumb.name,\n      item: crumb.url\n    }))\n  });\n\n  const generateFAQData = (faqs: Array<{\n    question: string;\n    answer: string;\n  }>): FAQPage => ({\n    '@type': 'FAQPage',\n    mainEntity: faqs.map(faq => ({\n      '@type': 'Question',\n      name: faq.question,\n      acceptedAnswer: {\n        '@type': 'Answer',\n        text: faq.answer\n      }\n    }))\n  });\n\n  const generateForumData = (forum: {\n    name: string;\n    description: string;\n    url: string;\n    postCount: number;\n    memberCount: number;\n  }) => ({\n    '@type': 'DiscussionForumPosting',\n    name: forum.name,\n    description: forum.description,\n    url: forum.url,\n    interactionStatistic: [\n      {\n        '@type': 'InteractionCounter',\n        interactionType: 'https://schema.org/CommentAction',\n        userInteractionCount: forum.postCount\n      },\n      {\n        '@type': 'InteractionCounter',\n        interactionType: 'https://schema.org/JoinAction',\n        userInteractionCount: forum.memberCount\n      }\n    ]\n  });\n\n  const generatePersonData = (person: {\n    name: string;\n    bio?: string;\n    url: string;\n    image?: string;\n    sameAs?: string[];\n    jobTitle?: string;\n    worksFor?: string;\n  }) => ({\n    '@type': 'Person',\n    name: person.name,\n    description: person.bio,\n    url: person.url,\n    image: person.image,\n    sameAs: person.sameAs || [],\n    jobTitle: person.jobTitle,\n    worksFor: person.worksFor ? {\n      '@type': 'Organization',\n      name: person.worksFor\n    } : undefined\n  });\n\n  return {\n    generateArticleData,\n    generateBreadcrumbData,\n    generateFAQData,\n    generateForumData,\n    generatePersonData\n  };\n};\n\nexport default StructuredData;\n"],
      names: ["OrganizationStructuredData", "StructuredData", "WebSiteStructuredData", "useStructuredData", "data", "structuredData", "Head", "script", "type", "dangerouslySetInnerHTML", "__html", "JSON", "stringify", "organizationData", "name", "url", "process", "env", "NEXT_PUBLIC_SITE_URL", "logo", "description", "sameAs", "contactPoint", "contactType", "email", "websiteData", "potentialAction", "target", "generateArticleData", "article", "headline", "title", "author", "authorUrl", "publisher", "datePublished", "publishedAt", "dateModified", "updatedAt", "image", "undefined", "mainEntityOfPage", "keywords", "articleSection", "section", "wordCount", "content", "split", "length", "generateBreadcrumbData", "breadcrumbs", "itemListElement", "map", "crumb", "index", "position", "item", "generateFAQData", "faqs", "mainEntity", "faq", "question", "acceptedAnswer", "text", "answer", "generateForumData", "forum", "interactionStatistic", "interactionType", "userInteractionCount", "postCount", "memberCount", "generatePersonData", "person", "bio", "jobTitle", "worksFor"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9af8b0a04d0ac4817fe178ed6195b880c16f1769"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_24h33d571o = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_24h33d571o();
cov_24h33d571o().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_24h33d571o().f[0]++;
  cov_24h33d571o().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_24h33d571o().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_24h33d571o().s[3]++;
_export(exports, {
  get OrganizationStructuredData() {
    /* istanbul ignore next */
    cov_24h33d571o().f[1]++;
    cov_24h33d571o().s[4]++;
    return OrganizationStructuredData;
  },
  get StructuredData() {
    /* istanbul ignore next */
    cov_24h33d571o().f[2]++;
    cov_24h33d571o().s[5]++;
    return StructuredData;
  },
  get WebSiteStructuredData() {
    /* istanbul ignore next */
    cov_24h33d571o().f[3]++;
    cov_24h33d571o().s[6]++;
    return WebSiteStructuredData;
  },
  get default() {
    /* istanbul ignore next */
    cov_24h33d571o().f[4]++;
    cov_24h33d571o().s[7]++;
    return _default;
  },
  get useStructuredData() {
    /* istanbul ignore next */
    cov_24h33d571o().f[5]++;
    cov_24h33d571o().s[8]++;
    return useStructuredData;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_24h33d571o().s[9]++, require("react/jsx-runtime"));
const _head =
/* istanbul ignore next */
(/*#__PURE__*/cov_24h33d571o().s[10]++, _interop_require_default(require("next/head")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_24h33d571o().f[6]++;
  cov_24h33d571o().s[11]++;
  return /* istanbul ignore next */(cov_24h33d571o().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_24h33d571o().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_24h33d571o().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_24h33d571o().b[0][1]++, {
    default: obj
  });
}
/* istanbul ignore next */
cov_24h33d571o().s[12]++;
const StructuredData = ({
  data
}) => {
  /* istanbul ignore next */
  cov_24h33d571o().f[7]++;
  const structuredData =
  /* istanbul ignore next */
  (cov_24h33d571o().s[13]++, {
    '@context': 'https://schema.org',
    ...data
  });
  /* istanbul ignore next */
  cov_24h33d571o().s[14]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(_head.default, {
    children: /*#__PURE__*/(0, _jsxruntime.jsx)("script", {
      type: "application/ld+json",
      dangerouslySetInnerHTML: {
        __html: JSON.stringify(structuredData, null, 2)
      }
    })
  });
};
/* istanbul ignore next */
cov_24h33d571o().s[15]++;
const OrganizationStructuredData = () => {
  /* istanbul ignore next */
  cov_24h33d571o().f[8]++;
  const organizationData =
  /* istanbul ignore next */
  (cov_24h33d571o().s[16]++, {
    '@type': 'Organization',
    name: 'The Robot Overlord',
    url:
    /* istanbul ignore next */
    (cov_24h33d571o().b[2][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
    /* istanbul ignore next */
    (cov_24h33d571o().b[2][1]++, 'https://robotoverlord.com'),
    logo: `${process.env.NEXT_PUBLIC_SITE_URL}/images/logo.png`,
    description: 'AI-powered community platform for technology discussions and insights',
    sameAs: ['https://twitter.com/robotoverlord', 'https://github.com/robotoverlord', 'https://linkedin.com/company/robotoverlord'],
    contactPoint: {
      '@type': 'ContactPoint',
      contactType: 'customer support',
      email: 'support@robotoverlord.com',
      url: `${process.env.NEXT_PUBLIC_SITE_URL}/contact`
    }
  });
  /* istanbul ignore next */
  cov_24h33d571o().s[17]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(StructuredData, {
    data: organizationData
  });
};
/* istanbul ignore next */
cov_24h33d571o().s[18]++;
const WebSiteStructuredData = () => {
  /* istanbul ignore next */
  cov_24h33d571o().f[9]++;
  const websiteData =
  /* istanbul ignore next */
  (cov_24h33d571o().s[19]++, {
    '@type': 'WebSite',
    name: 'The Robot Overlord',
    url:
    /* istanbul ignore next */
    (cov_24h33d571o().b[3][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
    /* istanbul ignore next */
    (cov_24h33d571o().b[3][1]++, 'https://robotoverlord.com'),
    description: 'AI-powered community platform for technology discussions and insights',
    potentialAction: {
      '@type': 'SearchAction',
      target: `${process.env.NEXT_PUBLIC_SITE_URL}/search?q={search_term_string}`,
      'query-input': 'required name=search_term_string'
    }
  });
  /* istanbul ignore next */
  cov_24h33d571o().s[20]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)(StructuredData, {
    data: websiteData
  });
};
/* istanbul ignore next */
cov_24h33d571o().s[21]++;
const useStructuredData = () => {
  /* istanbul ignore next */
  cov_24h33d571o().f[10]++;
  cov_24h33d571o().s[22]++;
  const generateArticleData = article => {
    /* istanbul ignore next */
    cov_24h33d571o().f[11]++;
    cov_24h33d571o().s[23]++;
    return {
      '@type': 'Article',
      headline: article.title,
      description: article.description,
      author: {
        '@type': 'Person',
        name: article.author,
        url: article.authorUrl
      },
      publisher: {
        '@type': 'Organization',
        name: 'The Robot Overlord',
        url:
        /* istanbul ignore next */
        (cov_24h33d571o().b[4][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
        /* istanbul ignore next */
        (cov_24h33d571o().b[4][1]++, 'https://robotoverlord.com'),
        logo: `${process.env.NEXT_PUBLIC_SITE_URL}/images/logo.png`,
        description: 'AI-powered community platform',
        sameAs: []
      },
      datePublished: article.publishedAt,
      dateModified:
      /* istanbul ignore next */
      (cov_24h33d571o().b[5][0]++, article.updatedAt) ||
      /* istanbul ignore next */
      (cov_24h33d571o().b[5][1]++, article.publishedAt),
      image: article.image ?
      /* istanbul ignore next */
      (cov_24h33d571o().b[6][0]++, [article.image]) :
      /* istanbul ignore next */
      (cov_24h33d571o().b[6][1]++, undefined),
      url: article.url,
      mainEntityOfPage: article.url,
      keywords: article.keywords,
      articleSection: article.section,
      wordCount: article.content.split(' ').length
    };
  };
  /* istanbul ignore next */
  cov_24h33d571o().s[24]++;
  const generateBreadcrumbData = breadcrumbs => {
    /* istanbul ignore next */
    cov_24h33d571o().f[12]++;
    cov_24h33d571o().s[25]++;
    return {
      '@type': 'BreadcrumbList',
      itemListElement: breadcrumbs.map((crumb, index) => {
        /* istanbul ignore next */
        cov_24h33d571o().f[13]++;
        cov_24h33d571o().s[26]++;
        return {
          '@type': 'ListItem',
          position: index + 1,
          name: crumb.name,
          item: crumb.url
        };
      })
    };
  };
  /* istanbul ignore next */
  cov_24h33d571o().s[27]++;
  const generateFAQData = faqs => {
    /* istanbul ignore next */
    cov_24h33d571o().f[14]++;
    cov_24h33d571o().s[28]++;
    return {
      '@type': 'FAQPage',
      mainEntity: faqs.map(faq => {
        /* istanbul ignore next */
        cov_24h33d571o().f[15]++;
        cov_24h33d571o().s[29]++;
        return {
          '@type': 'Question',
          name: faq.question,
          acceptedAnswer: {
            '@type': 'Answer',
            text: faq.answer
          }
        };
      })
    };
  };
  /* istanbul ignore next */
  cov_24h33d571o().s[30]++;
  const generateForumData = forum => {
    /* istanbul ignore next */
    cov_24h33d571o().f[16]++;
    cov_24h33d571o().s[31]++;
    return {
      '@type': 'DiscussionForumPosting',
      name: forum.name,
      description: forum.description,
      url: forum.url,
      interactionStatistic: [{
        '@type': 'InteractionCounter',
        interactionType: 'https://schema.org/CommentAction',
        userInteractionCount: forum.postCount
      }, {
        '@type': 'InteractionCounter',
        interactionType: 'https://schema.org/JoinAction',
        userInteractionCount: forum.memberCount
      }]
    };
  };
  /* istanbul ignore next */
  cov_24h33d571o().s[32]++;
  const generatePersonData = person => {
    /* istanbul ignore next */
    cov_24h33d571o().f[17]++;
    cov_24h33d571o().s[33]++;
    return {
      '@type': 'Person',
      name: person.name,
      description: person.bio,
      url: person.url,
      image: person.image,
      sameAs:
      /* istanbul ignore next */
      (cov_24h33d571o().b[7][0]++, person.sameAs) ||
      /* istanbul ignore next */
      (cov_24h33d571o().b[7][1]++, []),
      jobTitle: person.jobTitle,
      worksFor: person.worksFor ?
      /* istanbul ignore next */
      (cov_24h33d571o().b[8][0]++, {
        '@type': 'Organization',
        name: person.worksFor
      }) :
      /* istanbul ignore next */
      (cov_24h33d571o().b[8][1]++, undefined)
    };
  };
  /* istanbul ignore next */
  cov_24h33d571o().s[34]++;
  return {
    generateArticleData,
    generateBreadcrumbData,
    generateFAQData,
    generateForumData,
    generatePersonData
  };
};
const _default =
/* istanbul ignore next */
(cov_24h33d571o().s[35]++, StructuredData);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,