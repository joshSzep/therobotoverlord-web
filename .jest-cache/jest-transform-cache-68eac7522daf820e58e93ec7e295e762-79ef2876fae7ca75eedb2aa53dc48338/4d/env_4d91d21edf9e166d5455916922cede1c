131d9396b97fb96654317204b1ff20c0
/**
 * Environment variable validation and configuration
 * Ensures required environment variables are present and valid
 */ // Environment variable schema
"use strict";

/* istanbul ignore next */
function cov_10lgz5r5f3() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/lib/env.ts";
  var hash = "96549166a202c9befffcaf6ebaffc83c7710e02f";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/lib/env.ts",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 10,
          column: 4
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "2": {
        start: {
          line: 10,
          column: 24
        },
        end: {
          line: 13,
          column: 7
        }
      },
      "3": {
        start: {
          line: 15,
          column: 0
        },
        end: {
          line: 28,
          column: 3
        }
      },
      "4": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 19
        }
      },
      "5": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 27
        }
      },
      "6": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 29
        }
      },
      "7": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 28
        }
      },
      "8": {
        start: {
          line: 32,
          column: 25
        },
        end: {
          line: 35,
          column: 5
        }
      },
      "9": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 37,
          column: 95
        }
      },
      "10": {
        start: {
          line: 37,
          column: 70
        },
        end: {
          line: 37,
          column: 76
        }
      },
      "11": {
        start: {
          line: 37,
          column: 91
        },
        end: {
          line: 37,
          column: 94
        }
      },
      "12": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "13": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 172
        }
      },
      "14": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 46,
          column: 5
        }
      },
      "15": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 43
        }
      },
      "16": {
        start: {
          line: 45,
          column: 8
        },
        end: {
          line: 45,
          column: 85
        }
      },
      "17": {
        start: {
          line: 48,
          column: 18
        },
        end: {
          line: 48,
          column: 37
        }
      },
      "18": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 51,
          column: 5
        }
      },
      "19": {
        start: {
          line: 50,
          column: 8
        },
        end: {
          line: 50,
          column: 92
        }
      },
      "20": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 58,
          column: 6
        }
      },
      "21": {
        start: {
          line: 60,
          column: 12
        },
        end: {
          line: 60,
          column: 33
        }
      },
      "22": {
        start: {
          line: 61,
          column: 22
        },
        end: {
          line: 61,
          column: 52
        }
      },
      "23": {
        start: {
          line: 62,
          column: 21
        },
        end: {
          line: 62,
          column: 50
        }
      },
      "24": {
        start: {
          line: 63,
          column: 20
        },
        end: {
          line: 63,
          column: 46
        }
      },
      "25": {
        start: {
          line: 65,
          column: 0
        },
        end: {
          line: 71,
          column: 1
        }
      },
      "26": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 64
        }
      },
      "27": {
        start: {
          line: 67,
          column: 4
        },
        end: {
          line: 67,
          column: 55
        }
      },
      "28": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 50
        }
      },
      "29": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 69,
          column: 46
        }
      },
      "30": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 70,
          column: 93
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 9,
            column: 9
          },
          end: {
            line: 9,
            column: 16
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 14,
            column: 1
          }
        },
        line: 9
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 15
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 23
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 25
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "5": {
        name: "validateEnvironment",
        decl: {
          start: {
            line: 31,
            column: 13
          },
          end: {
            line: 31,
            column: 32
          }
        },
        loc: {
          start: {
            line: 31,
            column: 35
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 31
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 37,
            column: 56
          },
          end: {
            line: 37,
            column: 57
          }
        },
        loc: {
          start: {
            line: 37,
            column: 70
          },
          end: {
            line: 37,
            column: 76
          }
        },
        line: 37
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 37,
            column: 82
          },
          end: {
            line: 37,
            column: 83
          }
        },
        loc: {
          start: {
            line: 37,
            column: 91
          },
          end: {
            line: 37,
            column: 94
          }
        },
        line: 37
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 38
      },
      "1": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "2": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 34
          }
        }, {
          start: {
            line: 49,
            column: 38
          },
          end: {
            line: 49,
            column: 65
          }
        }],
        line: 49
      },
      "3": {
        loc: {
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 57,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 57,
            column: 18
          },
          end: {
            line: 57,
            column: 38
          }
        }, {
          start: {
            line: 57,
            column: 42
          },
          end: {
            line: 57,
            column: 55
          }
        }],
        line: 57
      },
      "4": {
        loc: {
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 63,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 63,
            column: 20
          },
          end: {
            line: 63,
            column: 29
          }
        }, {
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 63,
            column: 46
          }
        }],
        line: 63
      },
      "5": {
        loc: {
          start: {
            line: 65,
            column: 0
          },
          end: {
            line: 71,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 65,
            column: 0
          },
          end: {
            line: 71,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 65
      },
      "6": {
        loc: {
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 65,
            column: 4
          },
          end: {
            line: 65,
            column: 17
          }
        }, {
          start: {
            line: 65,
            column: 21
          },
          end: {
            line: 65,
            column: 50
          }
        }],
        line: 65
      },
      "7": {
        loc: {
          start: {
            line: 70,
            column: 35
          },
          end: {
            line: 70,
            column: 89
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 70,
            column: 58
          },
          end: {
            line: 70,
            column: 70
          }
        }, {
          start: {
            line: 70,
            column: 73
          },
          end: {
            line: 70,
            column: 89
          }
        }],
        line: 70
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/lib/env.ts"],
      sourcesContent: ["/**\n * Environment variable validation and configuration\n * Ensures required environment variables are present and valid\n */\n\n// Environment variable schema\ninterface EnvironmentConfig {\n  API_BASE_URL: string;\n  WS_URL: string;\n  DEBUG: boolean;\n  GOOGLE_CLIENT_ID?: string;\n  NODE_ENV: 'development' | 'production' | 'test';\n}\n\n/**\n * Validate and parse environment variables\n */\nfunction validateEnvironment(): EnvironmentConfig {\n  const requiredVars = {\n    API_BASE_URL: process.env.NEXT_PUBLIC_API_BASE_URL,\n    WS_URL: process.env.NEXT_PUBLIC_WS_URL,\n  };\n\n  // Check for missing required variables\n  const missing = Object.entries(requiredVars)\n    .filter(([_, value]) => !value)\n    .map(([key]) => key);\n\n  if (missing.length > 0) {\n    throw new Error(\n      `Missing required environment variables: ${missing.join(', ')}\\n` +\n      'Please check your .env.local file and ensure all required variables are set.'\n    );\n  }\n\n  // Validate URL formats\n  try {\n    new URL(requiredVars.API_BASE_URL!);\n  } catch {\n    throw new Error(`Invalid API_BASE_URL format: ${requiredVars.API_BASE_URL}`);\n  }\n\n  // Validate WebSocket URL format\n  const wsUrl = requiredVars.WS_URL!;\n  if (!wsUrl.startsWith('ws://') && !wsUrl.startsWith('wss://')) {\n    throw new Error(`Invalid WS_URL format: ${wsUrl}. Must start with ws:// or wss://`);\n  }\n\n  return {\n    API_BASE_URL: requiredVars.API_BASE_URL!,\n    WS_URL: requiredVars.WS_URL!,\n    DEBUG: process.env.NEXT_PUBLIC_DEBUG === 'true',\n    GOOGLE_CLIENT_ID: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,\n    NODE_ENV: (process.env.NODE_ENV as any) || 'development',\n  };\n}\n\n// Export validated environment configuration\nexport const env = validateEnvironment();\n\n// Helper functions\nexport const isDevelopment = env.NODE_ENV === 'development';\nexport const isProduction = env.NODE_ENV === 'production';\nexport const isDebugMode = env.DEBUG && isDevelopment;\n\n// Log environment info in development\nif (isDevelopment && typeof window === 'undefined') {\n  console.log('\uD83E\uDD16 Robot Overlord Environment Configuration:');\n  console.log(`  API Base URL: ${env.API_BASE_URL}`);\n  console.log(`  WebSocket URL: ${env.WS_URL}`);\n  console.log(`  Debug Mode: ${env.DEBUG}`);\n  console.log(`  Google OAuth: ${env.GOOGLE_CLIENT_ID ? 'Configured' : 'Not configured'}`);\n}\n"],
      names: ["env", "isDebugMode", "isDevelopment", "isProduction", "validateEnvironment", "requiredVars", "API_BASE_URL", "process", "NEXT_PUBLIC_API_BASE_URL", "WS_URL", "NEXT_PUBLIC_WS_URL", "missing", "Object", "entries", "filter", "_", "value", "map", "key", "length", "Error", "join", "URL", "wsUrl", "startsWith", "DEBUG", "NEXT_PUBLIC_DEBUG", "GOOGLE_CLIENT_ID", "NEXT_PUBLIC_GOOGLE_CLIENT_ID", "NODE_ENV", "window", "console", "log"],
      mappings: "AAAA;;;CAGC,GAED,8BAA8B;;;;;;;;;;;;QAqDjBA;eAAAA;;QAKAC;eAAAA;;QAFAC;eAAAA;;QACAC;eAAAA;;;AAhDb;;CAEC,GACD,SAASC;IACP,MAAMC,eAAe;QACnBC,cAAcC,QAAQP,GAAG,CAACQ,wBAAwB;QAClDC,QAAQF,QAAQP,GAAG,CAACU,kBAAkB;IACxC;IAEA,uCAAuC;IACvC,MAAMC,UAAUC,OAAOC,OAAO,CAACR,cAC5BS,MAAM,CAAC,CAAC,CAACC,GAAGC,MAAM,GAAK,CAACA,OACxBC,GAAG,CAAC,CAAC,CAACC,IAAI,GAAKA;IAElB,IAAIP,QAAQQ,MAAM,GAAG,GAAG;QACtB,MAAM,IAAIC,MACR,CAAC,wCAAwC,EAAET,QAAQU,IAAI,CAAC,MAAM,EAAE,CAAC,GACjE;IAEJ;IAEA,uBAAuB;IACvB,IAAI;QACF,IAAIC,IAAIjB,aAAaC,YAAY;IACnC,EAAE,OAAM;QACN,MAAM,IAAIc,MAAM,CAAC,6BAA6B,EAAEf,aAAaC,YAAY,EAAE;IAC7E;IAEA,gCAAgC;IAChC,MAAMiB,QAAQlB,aAAaI,MAAM;IACjC,IAAI,CAACc,MAAMC,UAAU,CAAC,YAAY,CAACD,MAAMC,UAAU,CAAC,WAAW;QAC7D,MAAM,IAAIJ,MAAM,CAAC,uBAAuB,EAAEG,MAAM,iCAAiC,CAAC;IACpF;IAEA,OAAO;QACLjB,cAAcD,aAAaC,YAAY;QACvCG,QAAQJ,aAAaI,MAAM;QAC3BgB,OAAOlB,QAAQP,GAAG,CAAC0B,iBAAiB,KAAK;QACzCC,kBAAkBpB,QAAQP,GAAG,CAAC4B,4BAA4B;QAC1DC,UAAU,AAACtB,QAAQP,GAAG,CAAC6B,QAAQ,IAAY;IAC7C;AACF;AAGO,MAAM7B,MAAMI;AAGZ,MAAMF,gBAAgBF,IAAI6B,QAAQ,KAAK;AACvC,MAAM1B,eAAeH,IAAI6B,QAAQ,KAAK;AACtC,MAAM5B,cAAcD,IAAIyB,KAAK,IAAIvB;AAExC,sCAAsC;AACtC,IAAIA,iBAAiB,OAAO4B,WAAW,aAAa;IAClDC,QAAQC,GAAG,CAAC;IACZD,QAAQC,GAAG,CAAC,CAAC,gBAAgB,EAAEhC,IAAIM,YAAY,EAAE;IACjDyB,QAAQC,GAAG,CAAC,CAAC,iBAAiB,EAAEhC,IAAIS,MAAM,EAAE;IAC5CsB,QAAQC,GAAG,CAAC,CAAC,cAAc,EAAEhC,IAAIyB,KAAK,EAAE;IACxCM,QAAQC,GAAG,CAAC,CAAC,gBAAgB,EAAEhC,IAAI2B,gBAAgB,GAAG,eAAe,kBAAkB;AACzF"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "96549166a202c9befffcaf6ebaffc83c7710e02f"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_10lgz5r5f3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_10lgz5r5f3();
cov_10lgz5r5f3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_10lgz5r5f3().f[0]++;
  cov_10lgz5r5f3().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_10lgz5r5f3().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_10lgz5r5f3().s[3]++;
_export(exports, {
  get env() {
    /* istanbul ignore next */
    cov_10lgz5r5f3().f[1]++;
    cov_10lgz5r5f3().s[4]++;
    return env;
  },
  get isDebugMode() {
    /* istanbul ignore next */
    cov_10lgz5r5f3().f[2]++;
    cov_10lgz5r5f3().s[5]++;
    return isDebugMode;
  },
  get isDevelopment() {
    /* istanbul ignore next */
    cov_10lgz5r5f3().f[3]++;
    cov_10lgz5r5f3().s[6]++;
    return isDevelopment;
  },
  get isProduction() {
    /* istanbul ignore next */
    cov_10lgz5r5f3().f[4]++;
    cov_10lgz5r5f3().s[7]++;
    return isProduction;
  }
});
/**
 * Validate and parse environment variables
 */
function validateEnvironment() {
  /* istanbul ignore next */
  cov_10lgz5r5f3().f[5]++;
  const requiredVars =
  /* istanbul ignore next */
  (cov_10lgz5r5f3().s[8]++, {
    API_BASE_URL: process.env.NEXT_PUBLIC_API_BASE_URL,
    WS_URL: process.env.NEXT_PUBLIC_WS_URL
  });
  // Check for missing required variables
  const missing =
  /* istanbul ignore next */
  (cov_10lgz5r5f3().s[9]++, Object.entries(requiredVars).filter(([_, value]) => {
    /* istanbul ignore next */
    cov_10lgz5r5f3().f[6]++;
    cov_10lgz5r5f3().s[10]++;
    return !value;
  }).map(([key]) => {
    /* istanbul ignore next */
    cov_10lgz5r5f3().f[7]++;
    cov_10lgz5r5f3().s[11]++;
    return key;
  }));
  /* istanbul ignore next */
  cov_10lgz5r5f3().s[12]++;
  if (missing.length > 0) {
    /* istanbul ignore next */
    cov_10lgz5r5f3().b[0][0]++;
    cov_10lgz5r5f3().s[13]++;
    throw new Error(`Missing required environment variables: ${missing.join(', ')}\n` + 'Please check your .env.local file and ensure all required variables are set.');
  } else
  /* istanbul ignore next */
  {
    cov_10lgz5r5f3().b[0][1]++;
  }
  // Validate URL formats
  cov_10lgz5r5f3().s[14]++;
  try {
    /* istanbul ignore next */
    cov_10lgz5r5f3().s[15]++;
    new URL(requiredVars.API_BASE_URL);
  } catch {
    /* istanbul ignore next */
    cov_10lgz5r5f3().s[16]++;
    throw new Error(`Invalid API_BASE_URL format: ${requiredVars.API_BASE_URL}`);
  }
  // Validate WebSocket URL format
  const wsUrl =
  /* istanbul ignore next */
  (cov_10lgz5r5f3().s[17]++, requiredVars.WS_URL);
  /* istanbul ignore next */
  cov_10lgz5r5f3().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_10lgz5r5f3().b[2][0]++, !wsUrl.startsWith('ws://')) &&
  /* istanbul ignore next */
  (cov_10lgz5r5f3().b[2][1]++, !wsUrl.startsWith('wss://'))) {
    /* istanbul ignore next */
    cov_10lgz5r5f3().b[1][0]++;
    cov_10lgz5r5f3().s[19]++;
    throw new Error(`Invalid WS_URL format: ${wsUrl}. Must start with ws:// or wss://`);
  } else
  /* istanbul ignore next */
  {
    cov_10lgz5r5f3().b[1][1]++;
  }
  cov_10lgz5r5f3().s[20]++;
  return {
    API_BASE_URL: requiredVars.API_BASE_URL,
    WS_URL: requiredVars.WS_URL,
    DEBUG: process.env.NEXT_PUBLIC_DEBUG === 'true',
    GOOGLE_CLIENT_ID: process.env.NEXT_PUBLIC_GOOGLE_CLIENT_ID,
    NODE_ENV:
    /* istanbul ignore next */
    (cov_10lgz5r5f3().b[3][0]++, process.env.NODE_ENV) ||
    /* istanbul ignore next */
    (cov_10lgz5r5f3().b[3][1]++, 'development')
  };
}
const env =
/* istanbul ignore next */
(cov_10lgz5r5f3().s[21]++, validateEnvironment());
const isDevelopment =
/* istanbul ignore next */
(cov_10lgz5r5f3().s[22]++, env.NODE_ENV === 'development');
const isProduction =
/* istanbul ignore next */
(cov_10lgz5r5f3().s[23]++, env.NODE_ENV === 'production');
const isDebugMode =
/* istanbul ignore next */
(cov_10lgz5r5f3().s[24]++,
/* istanbul ignore next */
(cov_10lgz5r5f3().b[4][0]++, env.DEBUG) &&
/* istanbul ignore next */
(cov_10lgz5r5f3().b[4][1]++, isDevelopment));
// Log environment info in development
/* istanbul ignore next */
cov_10lgz5r5f3().s[25]++;
if (
/* istanbul ignore next */
(cov_10lgz5r5f3().b[6][0]++, isDevelopment) &&
/* istanbul ignore next */
(cov_10lgz5r5f3().b[6][1]++, typeof window === 'undefined')) {
  /* istanbul ignore next */
  cov_10lgz5r5f3().b[5][0]++;
  cov_10lgz5r5f3().s[26]++;
  console.log('🤖 Robot Overlord Environment Configuration:');
  /* istanbul ignore next */
  cov_10lgz5r5f3().s[27]++;
  console.log(`  API Base URL: ${env.API_BASE_URL}`);
  /* istanbul ignore next */
  cov_10lgz5r5f3().s[28]++;
  console.log(`  WebSocket URL: ${env.WS_URL}`);
  /* istanbul ignore next */
  cov_10lgz5r5f3().s[29]++;
  console.log(`  Debug Mode: ${env.DEBUG}`);
  /* istanbul ignore next */
  cov_10lgz5r5f3().s[30]++;
  console.log(`  Google OAuth: ${env.GOOGLE_CLIENT_ID ?
  /* istanbul ignore next */
  (cov_10lgz5r5f3().b[7][0]++, 'Configured') :
  /* istanbul ignore next */
  (cov_10lgz5r5f3().b[7][1]++, 'Not configured')}`);
} else
/* istanbul ignore next */
{
  cov_10lgz5r5f3().b[5][1]++;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,