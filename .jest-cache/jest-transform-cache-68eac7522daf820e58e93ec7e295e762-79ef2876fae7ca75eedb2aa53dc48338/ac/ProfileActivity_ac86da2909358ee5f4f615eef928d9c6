db3bd387142db2c3963f7d394d1eaaea
'use client';
"use strict";

/* istanbul ignore next */
function cov_xngbi8exr() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileActivity.tsx";
  var hash = "5917c0f4533fb70dfdadc2c2c80b4f33c4cd1660";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileActivity.tsx",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 11,
          column: 3
        }
      },
      "2": {
        start: {
          line: 9,
          column: 8
        },
        end: {
          line: 9,
          column: 31
        }
      },
      "3": {
        start: {
          line: 12,
          column: 20
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "4": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 13,
          column: 72
        }
      },
      "5": {
        start: {
          line: 14,
          column: 14
        },
        end: {
          line: 14,
          column: 35
        }
      },
      "6": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 50
        }
      },
      "7": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 17,
          column: 39
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "9": {
        start: {
          line: 18,
          column: 28
        },
        end: {
          line: 18,
          column: 41
        }
      },
      "10": {
        start: {
          line: 19,
          column: 27
        },
        end: {
          line: 19,
          column: 40
        }
      },
      "11": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 22,
          column: 20
        }
      },
      "12": {
        start: {
          line: 21,
          column: 8
        },
        end: {
          line: 21,
          column: 66
        }
      },
      "13": {
        start: {
          line: 25,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "14": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 19
        }
      },
      "15": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 32,
          column: 5
        }
      },
      "16": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 31,
          column: 10
        }
      },
      "17": {
        start: {
          line: 33,
          column: 16
        },
        end: {
          line: 33,
          column: 53
        }
      },
      "18": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "19": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "20": {
        start: {
          line: 37,
          column: 17
        },
        end: {
          line: 39,
          column: 5
        }
      },
      "21": {
        start: {
          line: 40,
          column: 32
        },
        end: {
          line: 40,
          column: 88
        }
      },
      "22": {
        start: {
          line: 41,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "23": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 49,
          column: 9
        }
      },
      "24": {
        start: {
          line: 43,
          column: 23
        },
        end: {
          line: 43,
          column: 95
        }
      },
      "25": {
        start: {
          line: 44,
          column: 12
        },
        end: {
          line: 48,
          column: 13
        }
      },
      "26": {
        start: {
          line: 45,
          column: 16
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "27": {
        start: {
          line: 47,
          column: 16
        },
        end: {
          line: 47,
          column: 39
        }
      },
      "28": {
        start: {
          line: 51,
          column: 4
        },
        end: {
          line: 51,
          column: 25
        }
      },
      "29": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "30": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 31
        }
      },
      "31": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 18
        }
      },
      "32": {
        start: {
          line: 58,
          column: 40
        },
        end: {
          line: 58,
          column: 64
        }
      },
      "33": {
        start: {
          line: 59,
          column: 38
        },
        end: {
          line: 59,
          column: 64
        }
      },
      "34": {
        start: {
          line: 60,
          column: 30
        },
        end: {
          line: 60,
          column: 56
        }
      },
      "35": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 101,
          column: 7
        }
      },
      "36": {
        start: {
          line: 62,
          column: 30
        },
        end: {
          line: 97,
          column: 9
        }
      },
      "37": {
        start: {
          line: 63,
          column: 12
        },
        end: {
          line: 96,
          column: 13
        }
      },
      "38": {
        start: {
          line: 64,
          column: 16
        },
        end: {
          line: 64,
          column: 35
        }
      },
      "39": {
        start: {
          line: 65,
          column: 37
        },
        end: {
          line: 65,
          column: 96
        }
      },
      "40": {
        start: {
          line: 66,
          column: 16
        },
        end: {
          line: 66,
          column: 50
        }
      },
      "41": {
        start: {
          line: 68,
          column: 16
        },
        end: {
          line: 68,
          column: 66
        }
      },
      "42": {
        start: {
          line: 69,
          column: 16
        },
        end: {
          line: 69,
          column: 52
        }
      },
      "43": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 93,
          column: 19
        }
      },
      "44": {
        start: {
          line: 95,
          column: 16
        },
        end: {
          line: 95,
          column: 36
        }
      },
      "45": {
        start: {
          line: 98,
          column: 8
        },
        end: {
          line: 98,
          column: 24
        }
      },
      "46": {
        start: {
          line: 102,
          column: 28
        },
        end: {
          line: 117,
          column: 5
        }
      },
      "47": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 116,
          column: 9
        }
      },
      "48": {
        start: {
          line: 105,
          column: 16
        },
        end: {
          line: 105,
          column: 28
        }
      },
      "49": {
        start: {
          line: 107,
          column: 16
        },
        end: {
          line: 107,
          column: 27
        }
      },
      "50": {
        start: {
          line: 109,
          column: 16
        },
        end: {
          line: 109,
          column: 27
        }
      },
      "51": {
        start: {
          line: 111,
          column: 16
        },
        end: {
          line: 111,
          column: 28
        }
      },
      "52": {
        start: {
          line: 113,
          column: 16
        },
        end: {
          line: 113,
          column: 28
        }
      },
      "53": {
        start: {
          line: 115,
          column: 16
        },
        end: {
          line: 115,
          column: 28
        }
      },
      "54": {
        start: {
          line: 118,
          column: 29
        },
        end: {
          line: 133,
          column: 5
        }
      },
      "55": {
        start: {
          line: 119,
          column: 8
        },
        end: {
          line: 132,
          column: 9
        }
      },
      "56": {
        start: {
          line: 121,
          column: 16
        },
        end: {
          line: 121,
          column: 41
        }
      },
      "57": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 45
        }
      },
      "58": {
        start: {
          line: 125,
          column: 16
        },
        end: {
          line: 125,
          column: 43
        }
      },
      "59": {
        start: {
          line: 127,
          column: 16
        },
        end: {
          line: 127,
          column: 45
        }
      },
      "60": {
        start: {
          line: 129,
          column: 16
        },
        end: {
          line: 129,
          column: 43
        }
      },
      "61": {
        start: {
          line: 131,
          column: 16
        },
        end: {
          line: 131,
          column: 42
        }
      },
      "62": {
        start: {
          line: 134,
          column: 26
        },
        end: {
          line: 143,
          column: 5
        }
      },
      "63": {
        start: {
          line: 135,
          column: 20
        },
        end: {
          line: 135,
          column: 30
        }
      },
      "64": {
        start: {
          line: 136,
          column: 21
        },
        end: {
          line: 136,
          column: 40
        }
      },
      "65": {
        start: {
          line: 137,
          column: 30
        },
        end: {
          line: 137,
          column: 81
        }
      },
      "66": {
        start: {
          line: 138,
          column: 8
        },
        end: {
          line: 138,
          column: 50
        }
      },
      "67": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 138,
          column: 50
        }
      },
      "68": {
        start: {
          line: 139,
          column: 8
        },
        end: {
          line: 139,
          column: 82
        }
      },
      "69": {
        start: {
          line: 139,
          column: 34
        },
        end: {
          line: 139,
          column: 82
        }
      },
      "70": {
        start: {
          line: 140,
          column: 8
        },
        end: {
          line: 140,
          column: 85
        }
      },
      "71": {
        start: {
          line: 140,
          column: 35
        },
        end: {
          line: 140,
          column: 85
        }
      },
      "72": {
        start: {
          line: 141,
          column: 8
        },
        end: {
          line: 141,
          column: 87
        }
      },
      "73": {
        start: {
          line: 141,
          column: 36
        },
        end: {
          line: 141,
          column: 87
        }
      },
      "74": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 41
        }
      },
      "75": {
        start: {
          line: 144,
          column: 4
        },
        end: {
          line: 162,
          column: 5
        }
      },
      "76": {
        start: {
          line: 145,
          column: 8
        },
        end: {
          line: 161,
          column: 11
        }
      },
      "77": {
        start: {
          line: 163,
          column: 4
        },
        end: {
          line: 232,
          column: 7
        }
      },
      "78": {
        start: {
          line: 190,
          column: 65
        },
        end: {
          line: 220,
          column: 43
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 9
          },
          end: {
            line: 8,
            column: 10
          }
        },
        loc: {
          start: {
            line: 8,
            column: 20
          },
          end: {
            line: 10,
            column: 5
          }
        },
        line: 8
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 16,
            column: 9
          },
          end: {
            line: 16,
            column: 33
          }
        },
        loc: {
          start: {
            line: 16,
            column: 47
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 16
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 20,
            column: 39
          },
          end: {
            line: 20,
            column: 40
          }
        },
        loc: {
          start: {
            line: 20,
            column: 61
          },
          end: {
            line: 22,
            column: 5
          }
        },
        line: 20
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 24,
            column: 9
          },
          end: {
            line: 24,
            column: 34
          }
        },
        loc: {
          start: {
            line: 24,
            column: 53
          },
          end: {
            line: 56,
            column: 1
          }
        },
        line: 24
      },
      "4": {
        name: "ProfileActivity",
        decl: {
          start: {
            line: 57,
            column: 9
          },
          end: {
            line: 57,
            column: 24
          }
        },
        loc: {
          start: {
            line: 57,
            column: 37
          },
          end: {
            line: 233,
            column: 1
          }
        },
        line: 57
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 61,
            column: 26
          },
          end: {
            line: 61,
            column: 27
          }
        },
        loc: {
          start: {
            line: 61,
            column: 30
          },
          end: {
            line: 99,
            column: 5
          }
        },
        line: 61
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 62,
            column: 30
          },
          end: {
            line: 62,
            column: 31
          }
        },
        loc: {
          start: {
            line: 62,
            column: 40
          },
          end: {
            line: 97,
            column: 9
          }
        },
        line: 62
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 102,
            column: 28
          },
          end: {
            line: 102,
            column: 29
          }
        },
        loc: {
          start: {
            line: 102,
            column: 36
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 102
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 118,
            column: 29
          },
          end: {
            line: 118,
            column: 30
          }
        },
        loc: {
          start: {
            line: 118,
            column: 37
          },
          end: {
            line: 133,
            column: 5
          }
        },
        line: 118
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 26
          },
          end: {
            line: 134,
            column: 27
          }
        },
        loc: {
          start: {
            line: 134,
            column: 39
          },
          end: {
            line: 143,
            column: 5
          }
        },
        line: 134
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 190,
            column: 39
          },
          end: {
            line: 190,
            column: 40
          }
        },
        loc: {
          start: {
            line: 190,
            column: 65
          },
          end: {
            line: 220,
            column: 43
          }
        },
        line: 190
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 17
      },
      "1": {
        loc: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 21,
            column: 29
          },
          end: {
            line: 21,
            column: 45
          }
        }, {
          start: {
            line: 21,
            column: 48
          },
          end: {
            line: 21,
            column: 65
          }
        }],
        line: 21
      },
      "2": {
        loc: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 25
      },
      "3": {
        loc: {
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 25,
            column: 8
          },
          end: {
            line: 25,
            column: 20
          }
        }, {
          start: {
            line: 25,
            column: 24
          },
          end: {
            line: 25,
            column: 27
          }
        }, {
          start: {
            line: 25,
            column: 31
          },
          end: {
            line: 25,
            column: 45
          }
        }],
        line: 25
      },
      "4": {
        loc: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 32,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 28
      },
      "5": {
        loc: {
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 28,
            column: 8
          },
          end: {
            line: 28,
            column: 20
          }
        }, {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 47
          }
        }, {
          start: {
            line: 28,
            column: 51
          },
          end: {
            line: 28,
            column: 76
          }
        }],
        line: 28
      },
      "6": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "7": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 13
          }
        }, {
          start: {
            line: 34,
            column: 17
          },
          end: {
            line: 34,
            column: 31
          }
        }],
        line: 34
      },
      "8": {
        loc: {
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 40,
            column: 32
          },
          end: {
            line: 40,
            column: 53
          }
        }, {
          start: {
            line: 40,
            column: 57
          },
          end: {
            line: 40,
            column: 88
          }
        }],
        line: 40
      },
      "9": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 49,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "10": {
        loc: {
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 42,
            column: 12
          },
          end: {
            line: 42,
            column: 29
          }
        }, {
          start: {
            line: 42,
            column: 33
          },
          end: {
            line: 42,
            column: 79
          }
        }],
        line: 42
      },
      "11": {
        loc: {
          start: {
            line: 43,
            column: 23
          },
          end: {
            line: 43,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 43,
            column: 47
          },
          end: {
            line: 43,
            column: 88
          }
        }, {
          start: {
            line: 43,
            column: 91
          },
          end: {
            line: 43,
            column: 95
          }
        }],
        line: 43
      },
      "12": {
        loc: {
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 44,
            column: 12
          },
          end: {
            line: 48,
            column: 13
          }
        }, {
          start: {
            line: 46,
            column: 19
          },
          end: {
            line: 48,
            column: 13
          }
        }],
        line: 44
      },
      "13": {
        loc: {
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 44,
            column: 16
          },
          end: {
            line: 44,
            column: 20
          }
        }, {
          start: {
            line: 44,
            column: 25
          },
          end: {
            line: 44,
            column: 33
          }
        }, {
          start: {
            line: 44,
            column: 37
          },
          end: {
            line: 44,
            column: 45
          }
        }],
        line: 44
      },
      "14": {
        loc: {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "15": {
        loc: {
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 66,
            column: 30
          },
          end: {
            line: 66,
            column: 42
          }
        }, {
          start: {
            line: 66,
            column: 46
          },
          end: {
            line: 66,
            column: 48
          }
        }],
        line: 66
      },
      "16": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 116,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 104,
            column: 12
          },
          end: {
            line: 105,
            column: 28
          }
        }, {
          start: {
            line: 106,
            column: 12
          },
          end: {
            line: 107,
            column: 27
          }
        }, {
          start: {
            line: 108,
            column: 12
          },
          end: {
            line: 109,
            column: 27
          }
        }, {
          start: {
            line: 110,
            column: 12
          },
          end: {
            line: 111,
            column: 28
          }
        }, {
          start: {
            line: 112,
            column: 12
          },
          end: {
            line: 113,
            column: 28
          }
        }, {
          start: {
            line: 114,
            column: 12
          },
          end: {
            line: 115,
            column: 28
          }
        }],
        line: 103
      },
      "17": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 132,
            column: 9
          }
        },
        type: "switch",
        locations: [{
          start: {
            line: 120,
            column: 12
          },
          end: {
            line: 121,
            column: 41
          }
        }, {
          start: {
            line: 122,
            column: 12
          },
          end: {
            line: 123,
            column: 45
          }
        }, {
          start: {
            line: 124,
            column: 12
          },
          end: {
            line: 125,
            column: 43
          }
        }, {
          start: {
            line: 126,
            column: 12
          },
          end: {
            line: 127,
            column: 45
          }
        }, {
          start: {
            line: 128,
            column: 12
          },
          end: {
            line: 129,
            column: 43
          }
        }, {
          start: {
            line: 130,
            column: 12
          },
          end: {
            line: 131,
            column: 42
          }
        }],
        line: 119
      },
      "18": {
        loc: {
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 50
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 138,
            column: 8
          },
          end: {
            line: 138,
            column: 50
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 138
      },
      "19": {
        loc: {
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 82
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 139,
            column: 8
          },
          end: {
            line: 139,
            column: 82
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 139
      },
      "20": {
        loc: {
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 85
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 140,
            column: 8
          },
          end: {
            line: 140,
            column: 85
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 140
      },
      "21": {
        loc: {
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 141,
            column: 87
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 8
          },
          end: {
            line: 141,
            column: 87
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 141
      },
      "22": {
        loc: {
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 4
          },
          end: {
            line: 162,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 144
      },
      "23": {
        loc: {
          start: {
            line: 171,
            column: 26
          },
          end: {
            line: 229,
            column: 18
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 171,
            column: 66
          },
          end: {
            line: 187,
            column: 18
          }
        }, {
          start: {
            line: 187,
            column: 35
          },
          end: {
            line: 229,
            column: 18
          }
        }],
        line: 171
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0, 0, 0, 0, 0],
      "17": [0, 0, 0, 0, 0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/profile/ProfileActivity.tsx"],
      sourcesContent: ["'use client';\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';\nimport { Badge } from '@/components/ui/Badge';\nimport { apiClient } from '@/lib/api-client';\n\ninterface ActivityItem {\n  id: string;\n  type: 'post_created' | 'post_approved' | 'post_rejected' | 'badge_earned' | 'rank_changed';\n  title: string;\n  description: string;\n  timestamp: string;\n  metadata?: Record<string, any>;\n}\n\ninterface ProfileActivityProps {\n  userId: string;\n}\n\nexport function ProfileActivity({ userId }: ProfileActivityProps) {\n  const [activities, setActivities] = useState<ActivityItem[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchActivity = async () => {\n      try {\n        setIsLoading(true);\n        const userActivity = await apiClient.get<ActivityItem[]>(`/users/${userId}/activity`);\n        setActivities(userActivity || []);\n      } catch (error: any) {\n        console.error('Failed to fetch activity:', error);\n        setError('Failed to load activity');\n        // Mock data for development\n        setActivities([\n          {\n            id: '1',\n            type: 'post_created',\n            title: 'New Post Submitted',\n            description: 'Submitted a post about robot efficiency improvements',\n            timestamp: new Date(Date.now() - 86400000).toISOString(),\n          },\n          {\n            id: '2',\n            type: 'post_approved',\n            title: 'Post Approved',\n            description: 'Your post \"AI Ethics in the Modern Age\" was approved by the Overlord',\n            timestamp: new Date(Date.now() - 172800000).toISOString(),\n          },\n          {\n            id: '3',\n            type: 'badge_earned',\n            title: 'Badge Earned',\n            description: 'Earned the \"Loyal Citizen\" badge for consistent participation',\n            timestamp: new Date(Date.now() - 259200000).toISOString(),\n          },\n        ]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchActivity();\n  }, [userId]);\n\n  const getActivityIcon = (type: ActivityItem['type']) => {\n    switch (type) {\n      case 'post_created': return '\uD83D\uDCDD';\n      case 'post_approved': return '\u2705';\n      case 'post_rejected': return '\u274C';\n      case 'badge_earned': return '\uD83C\uDFC5';\n      case 'rank_changed': return '\uD83D\uDCC8';\n      default: return '\uD83D\uDCCB';\n    }\n  };\n\n  const getActivityColor = (type: ActivityItem['type']) => {\n    switch (type) {\n      case 'post_created': return 'text-light-text';\n      case 'post_approved': return 'text-approved-green';\n      case 'post_rejected': return 'text-rejected-red';\n      case 'badge_earned': return 'text-pending-yellow';\n      case 'rank_changed': return 'text-overlord-red';\n      default: return 'text-muted-light';\n    }\n  };\n\n  const formatTimeAgo = (timestamp: string) => {\n    const now = new Date();\n    const time = new Date(timestamp);\n    const diffInSeconds = Math.floor((now.getTime() - time.getTime()) / 1000);\n\n    if (diffInSeconds < 60) return 'Just now';\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\n    if (diffInSeconds < 604800) return `${Math.floor(diffInSeconds / 86400)}d ago`;\n    return time.toLocaleDateString();\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Activity</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center py-8\">\n            <div className=\"w-6 h-6 border-2 border-overlord-red border-t-transparent rounded-full animate-spin\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Recent Activity</CardTitle>\n      </CardHeader>\n      <CardContent>\n        {activities.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <div className=\"text-4xl mb-4\">\uD83D\uDCCB</div>\n            <p className=\"text-muted-light text-sm mb-2\">No recent activity</p>\n            <p className=\"text-xs text-muted-light\">\n              Start participating to see your activity history here.\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {activities.map((activity) => (\n              <div\n                key={activity.id}\n                className=\"flex items-start gap-3 p-3 bg-muted/20 rounded-lg hover:bg-muted/30 transition-colors\"\n              >\n                <div className=\"text-2xl flex-shrink-0\">\n                  {getActivityIcon(activity.type)}\n                </div>\n                <div className=\"flex-1 min-w-0\">\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <h4 className={`font-medium text-sm ${getActivityColor(activity.type)}`}>\n                      {activity.title}\n                    </h4>\n                    <span className=\"text-xs text-muted-light\">\n                      {formatTimeAgo(activity.timestamp)}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-muted-light\">\n                    {activity.description}\n                  </p>\n                </div>\n              </div>\n            ))}\n\n            {/* Load More Button */}\n            <div className=\"text-center pt-4 border-t border-muted/30\">\n              <button className=\"text-sm text-overlord-red hover:underline\">\n                Load more activity\n              </button>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n"],
      names: ["ProfileActivity", "userId", "activities", "setActivities", "useState", "isLoading", "setIsLoading", "error", "setError", "useEffect", "fetchActivity", "userActivity", "apiClient", "get", "console", "id", "type", "title", "description", "timestamp", "Date", "now", "toISOString", "getActivityIcon", "getActivityColor", "formatTimeAgo", "time", "diffInSeconds", "Math", "floor", "getTime", "toLocaleDateString", "Card", "CardHeader", "CardTitle", "CardContent", "div", "className", "length", "p", "map", "activity", "h4", "span", "button"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "5917c0f4533fb70dfdadc2c2c80b4f33c4cd1660"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_xngbi8exr = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_xngbi8exr();
cov_xngbi8exr().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_xngbi8exr().s[1]++;
Object.defineProperty(exports, "ProfileActivity", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_xngbi8exr().f[0]++;
    cov_xngbi8exr().s[2]++;
    return ProfileActivity;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_xngbi8exr().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_xngbi8exr().s[4]++, _interop_require_wildcard(require("react")));
const _Card =
/* istanbul ignore next */
(cov_xngbi8exr().s[5]++, require("../ui/Card"));
const _apiclient =
/* istanbul ignore next */
(cov_xngbi8exr().s[6]++, require("../../lib/api-client"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_xngbi8exr().f[1]++;
  cov_xngbi8exr().s[7]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_xngbi8exr().b[0][0]++;
    cov_xngbi8exr().s[8]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_xngbi8exr().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[9]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[10]++, new WeakMap());
  /* istanbul ignore next */
  cov_xngbi8exr().s[11]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_xngbi8exr().f[2]++;
    cov_xngbi8exr().s[12]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_xngbi8exr().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_xngbi8exr().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_xngbi8exr().f[3]++;
  cov_xngbi8exr().s[13]++;
  if (
  /* istanbul ignore next */
  (cov_xngbi8exr().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_xngbi8exr().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_xngbi8exr().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_xngbi8exr().b[2][0]++;
    cov_xngbi8exr().s[14]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_xngbi8exr().b[2][1]++;
  }
  cov_xngbi8exr().s[15]++;
  if (
  /* istanbul ignore next */
  (cov_xngbi8exr().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_xngbi8exr().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_xngbi8exr().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_xngbi8exr().b[4][0]++;
    cov_xngbi8exr().s[16]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_xngbi8exr().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[17]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_xngbi8exr().s[18]++;
  if (
  /* istanbul ignore next */
  (cov_xngbi8exr().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_xngbi8exr().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_xngbi8exr().b[6][0]++;
    cov_xngbi8exr().s[19]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_xngbi8exr().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[20]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[21]++,
  /* istanbul ignore next */
  (cov_xngbi8exr().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_xngbi8exr().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_xngbi8exr().s[22]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_xngbi8exr().s[23]++;
    if (
    /* istanbul ignore next */
    (cov_xngbi8exr().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_xngbi8exr().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_xngbi8exr().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_xngbi8exr().s[24]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_xngbi8exr().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_xngbi8exr().b[11][1]++, null));
      /* istanbul ignore next */
      cov_xngbi8exr().s[25]++;
      if (
      /* istanbul ignore next */
      (cov_xngbi8exr().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_xngbi8exr().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_xngbi8exr().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_xngbi8exr().b[12][0]++;
        cov_xngbi8exr().s[26]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_xngbi8exr().b[12][1]++;
        cov_xngbi8exr().s[27]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_xngbi8exr().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_xngbi8exr().s[28]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_xngbi8exr().s[29]++;
  if (cache) {
    /* istanbul ignore next */
    cov_xngbi8exr().b[14][0]++;
    cov_xngbi8exr().s[30]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_xngbi8exr().b[14][1]++;
  }
  cov_xngbi8exr().s[31]++;
  return newObj;
}
function ProfileActivity({
  userId
}) {
  /* istanbul ignore next */
  cov_xngbi8exr().f[4]++;
  const [activities, setActivities] =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[32]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[33]++, (0, _react.useState)(true));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_xngbi8exr().s[34]++, (0, _react.useState)(null));
  /* istanbul ignore next */
  cov_xngbi8exr().s[35]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_xngbi8exr().f[5]++;
    cov_xngbi8exr().s[36]++;
    const fetchActivity = async () => {
      /* istanbul ignore next */
      cov_xngbi8exr().f[6]++;
      cov_xngbi8exr().s[37]++;
      try {
        /* istanbul ignore next */
        cov_xngbi8exr().s[38]++;
        setIsLoading(true);
        const userActivity =
        /* istanbul ignore next */
        (cov_xngbi8exr().s[39]++, await _apiclient.apiClient.get(`/users/${userId}/activity`));
        /* istanbul ignore next */
        cov_xngbi8exr().s[40]++;
        setActivities(
        /* istanbul ignore next */
        (cov_xngbi8exr().b[15][0]++, userActivity) ||
        /* istanbul ignore next */
        (cov_xngbi8exr().b[15][1]++, []));
      } catch (error) {
        /* istanbul ignore next */
        cov_xngbi8exr().s[41]++;
        console.error('Failed to fetch activity:', error);
        /* istanbul ignore next */
        cov_xngbi8exr().s[42]++;
        setError('Failed to load activity');
        // Mock data for development
        /* istanbul ignore next */
        cov_xngbi8exr().s[43]++;
        setActivities([{
          id: '1',
          type: 'post_created',
          title: 'New Post Submitted',
          description: 'Submitted a post about robot efficiency improvements',
          timestamp: new Date(Date.now() - 86400000).toISOString()
        }, {
          id: '2',
          type: 'post_approved',
          title: 'Post Approved',
          description: 'Your post "AI Ethics in the Modern Age" was approved by the Overlord',
          timestamp: new Date(Date.now() - 172800000).toISOString()
        }, {
          id: '3',
          type: 'badge_earned',
          title: 'Badge Earned',
          description: 'Earned the "Loyal Citizen" badge for consistent participation',
          timestamp: new Date(Date.now() - 259200000).toISOString()
        }]);
      } finally {
        /* istanbul ignore next */
        cov_xngbi8exr().s[44]++;
        setIsLoading(false);
      }
    };
    /* istanbul ignore next */
    cov_xngbi8exr().s[45]++;
    fetchActivity();
  }, [userId]);
  /* istanbul ignore next */
  cov_xngbi8exr().s[46]++;
  const getActivityIcon = type => {
    /* istanbul ignore next */
    cov_xngbi8exr().f[7]++;
    cov_xngbi8exr().s[47]++;
    switch (type) {
      case 'post_created':
        /* istanbul ignore next */
        cov_xngbi8exr().b[16][0]++;
        cov_xngbi8exr().s[48]++;
        return '📝';
      case 'post_approved':
        /* istanbul ignore next */
        cov_xngbi8exr().b[16][1]++;
        cov_xngbi8exr().s[49]++;
        return '✅';
      case 'post_rejected':
        /* istanbul ignore next */
        cov_xngbi8exr().b[16][2]++;
        cov_xngbi8exr().s[50]++;
        return '❌';
      case 'badge_earned':
        /* istanbul ignore next */
        cov_xngbi8exr().b[16][3]++;
        cov_xngbi8exr().s[51]++;
        return '🏅';
      case 'rank_changed':
        /* istanbul ignore next */
        cov_xngbi8exr().b[16][4]++;
        cov_xngbi8exr().s[52]++;
        return '📈';
      default:
        /* istanbul ignore next */
        cov_xngbi8exr().b[16][5]++;
        cov_xngbi8exr().s[53]++;
        return '📋';
    }
  };
  /* istanbul ignore next */
  cov_xngbi8exr().s[54]++;
  const getActivityColor = type => {
    /* istanbul ignore next */
    cov_xngbi8exr().f[8]++;
    cov_xngbi8exr().s[55]++;
    switch (type) {
      case 'post_created':
        /* istanbul ignore next */
        cov_xngbi8exr().b[17][0]++;
        cov_xngbi8exr().s[56]++;
        return 'text-light-text';
      case 'post_approved':
        /* istanbul ignore next */
        cov_xngbi8exr().b[17][1]++;
        cov_xngbi8exr().s[57]++;
        return 'text-approved-green';
      case 'post_rejected':
        /* istanbul ignore next */
        cov_xngbi8exr().b[17][2]++;
        cov_xngbi8exr().s[58]++;
        return 'text-rejected-red';
      case 'badge_earned':
        /* istanbul ignore next */
        cov_xngbi8exr().b[17][3]++;
        cov_xngbi8exr().s[59]++;
        return 'text-pending-yellow';
      case 'rank_changed':
        /* istanbul ignore next */
        cov_xngbi8exr().b[17][4]++;
        cov_xngbi8exr().s[60]++;
        return 'text-overlord-red';
      default:
        /* istanbul ignore next */
        cov_xngbi8exr().b[17][5]++;
        cov_xngbi8exr().s[61]++;
        return 'text-muted-light';
    }
  };
  /* istanbul ignore next */
  cov_xngbi8exr().s[62]++;
  const formatTimeAgo = timestamp => {
    /* istanbul ignore next */
    cov_xngbi8exr().f[9]++;
    const now =
    /* istanbul ignore next */
    (cov_xngbi8exr().s[63]++, new Date());
    const time =
    /* istanbul ignore next */
    (cov_xngbi8exr().s[64]++, new Date(timestamp));
    const diffInSeconds =
    /* istanbul ignore next */
    (cov_xngbi8exr().s[65]++, Math.floor((now.getTime() - time.getTime()) / 1000));
    /* istanbul ignore next */
    cov_xngbi8exr().s[66]++;
    if (diffInSeconds < 60) {
      /* istanbul ignore next */
      cov_xngbi8exr().b[18][0]++;
      cov_xngbi8exr().s[67]++;
      return 'Just now';
    } else
    /* istanbul ignore next */
    {
      cov_xngbi8exr().b[18][1]++;
    }
    cov_xngbi8exr().s[68]++;
    if (diffInSeconds < 3600) {
      /* istanbul ignore next */
      cov_xngbi8exr().b[19][0]++;
      cov_xngbi8exr().s[69]++;
      return `${Math.floor(diffInSeconds / 60)}m ago`;
    } else
    /* istanbul ignore next */
    {
      cov_xngbi8exr().b[19][1]++;
    }
    cov_xngbi8exr().s[70]++;
    if (diffInSeconds < 86400) {
      /* istanbul ignore next */
      cov_xngbi8exr().b[20][0]++;
      cov_xngbi8exr().s[71]++;
      return `${Math.floor(diffInSeconds / 3600)}h ago`;
    } else
    /* istanbul ignore next */
    {
      cov_xngbi8exr().b[20][1]++;
    }
    cov_xngbi8exr().s[72]++;
    if (diffInSeconds < 604800) {
      /* istanbul ignore next */
      cov_xngbi8exr().b[21][0]++;
      cov_xngbi8exr().s[73]++;
      return `${Math.floor(diffInSeconds / 86400)}d ago`;
    } else
    /* istanbul ignore next */
    {
      cov_xngbi8exr().b[21][1]++;
    }
    cov_xngbi8exr().s[74]++;
    return time.toLocaleDateString();
  };
  /* istanbul ignore next */
  cov_xngbi8exr().s[75]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_xngbi8exr().b[22][0]++;
    cov_xngbi8exr().s[76]++;
    return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardHeader, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardTitle, {
          children: "Recent Activity"
        })
      }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "flex items-center justify-center py-8",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
            className: "w-6 h-6 border-2 border-overlord-red border-t-transparent rounded-full animate-spin"
          })
        })
      })]
    });
  } else
  /* istanbul ignore next */
  {
    cov_xngbi8exr().b[22][1]++;
  }
  cov_xngbi8exr().s[77]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)(_Card.Card, {
    children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardHeader, {
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardTitle, {
        children: "Recent Activity"
      })
    }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
      children: activities.length === 0 ?
      /* istanbul ignore next */
      (/*#__PURE__*/cov_xngbi8exr().b[23][0]++, (0, _jsxruntime.jsxs)("div", {
        className: "text-center py-8",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-4xl mb-4",
          children: "\uD83D\uDCCB"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light text-sm mb-2",
          children: "No recent activity"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-xs text-muted-light",
          children: "Start participating to see your activity history here."
        })]
      })) :
      /* istanbul ignore next */
      (/*#__PURE__*/cov_xngbi8exr().b[23][1]++, (0, _jsxruntime.jsxs)("div", {
        className: "space-y-4",
        children: [activities.map(activity => {
          /* istanbul ignore next */
          cov_xngbi8exr().f[10]++;
          cov_xngbi8exr().s[78]++;
          return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-start gap-3 p-3 bg-muted/20 rounded-lg hover:bg-muted/30 transition-colors",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-2xl flex-shrink-0",
              children: getActivityIcon(activity.type)
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex-1 min-w-0",
              children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                className: "flex items-center gap-2 mb-1",
                children: [/*#__PURE__*/(0, _jsxruntime.jsx)("h4", {
                  className: `font-medium text-sm ${getActivityColor(activity.type)}`,
                  children: activity.title
                }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
                  className: "text-xs text-muted-light",
                  children: formatTimeAgo(activity.timestamp)
                })]
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
                className: "text-sm text-muted-light",
                children: activity.description
              })]
            })]
          }, activity.id);
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-center pt-4 border-t border-muted/30",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)("button", {
            className: "text-sm text-overlord-red hover:underline",
            children: "Load more activity"
          })
        })]
      }))
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,