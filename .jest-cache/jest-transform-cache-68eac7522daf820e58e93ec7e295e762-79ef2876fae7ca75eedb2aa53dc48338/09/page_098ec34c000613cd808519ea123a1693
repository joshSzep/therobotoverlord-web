2a7ac75180031ee4e8fa331b966acfad
/**
 * Post detail/thread view page for The Robot Overlord
 * Displays individual post with replies and actions
 */'use client';
"use strict";

/* istanbul ignore next */
function cov_100mwspisk() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/[id]/page.tsx";
  var hash = "dafcdcbe87604dc3263c28cf079b1599250bfbbc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/[id]/page.tsx",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 0
        },
        end: {
          line: 8,
          column: 3
        }
      },
      "1": {
        start: {
          line: 9,
          column: 0
        },
        end: {
          line: 14,
          column: 3
        }
      },
      "2": {
        start: {
          line: 12,
          column: 8
        },
        end: {
          line: 12,
          column: 30
        }
      },
      "3": {
        start: {
          line: 15,
          column: 20
        },
        end: {
          line: 15,
          column: 48
        }
      },
      "4": {
        start: {
          line: 16,
          column: 29
        },
        end: {
          line: 16,
          column: 72
        }
      },
      "5": {
        start: {
          line: 17,
          column: 20
        },
        end: {
          line: 17,
          column: 46
        }
      },
      "6": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 63
        }
      },
      "7": {
        start: {
          line: 19,
          column: 18
        },
        end: {
          line: 19,
          column: 63
        }
      },
      "8": {
        start: {
          line: 20,
          column: 21
        },
        end: {
          line: 20,
          column: 69
        }
      },
      "9": {
        start: {
          line: 21,
          column: 16
        },
        end: {
          line: 21,
          column: 56
        }
      },
      "10": {
        start: {
          line: 22,
          column: 14
        },
        end: {
          line: 22,
          column: 52
        }
      },
      "11": {
        start: {
          line: 23,
          column: 18
        },
        end: {
          line: 23,
          column: 53
        }
      },
      "12": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 46
        }
      },
      "13": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "14": {
        start: {
          line: 26,
          column: 39
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "15": {
        start: {
          line: 27,
          column: 28
        },
        end: {
          line: 27,
          column: 41
        }
      },
      "16": {
        start: {
          line: 28,
          column: 27
        },
        end: {
          line: 28,
          column: 40
        }
      },
      "17": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 20
        }
      },
      "18": {
        start: {
          line: 30,
          column: 8
        },
        end: {
          line: 30,
          column: 66
        }
      },
      "19": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "20": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 19
        }
      },
      "21": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 41,
          column: 5
        }
      },
      "22": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 40,
          column: 10
        }
      },
      "23": {
        start: {
          line: 42,
          column: 16
        },
        end: {
          line: 42,
          column: 53
        }
      },
      "24": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 45,
          column: 5
        }
      },
      "25": {
        start: {
          line: 44,
          column: 8
        },
        end: {
          line: 44,
          column: 30
        }
      },
      "26": {
        start: {
          line: 46,
          column: 17
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "27": {
        start: {
          line: 49,
          column: 32
        },
        end: {
          line: 49,
          column: 88
        }
      },
      "28": {
        start: {
          line: 50,
          column: 4
        },
        end: {
          line: 59,
          column: 5
        }
      },
      "29": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 58,
          column: 9
        }
      },
      "30": {
        start: {
          line: 52,
          column: 23
        },
        end: {
          line: 52,
          column: 95
        }
      },
      "31": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 57,
          column: 13
        }
      },
      "32": {
        start: {
          line: 54,
          column: 16
        },
        end: {
          line: 54,
          column: 57
        }
      },
      "33": {
        start: {
          line: 56,
          column: 16
        },
        end: {
          line: 56,
          column: 39
        }
      },
      "34": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 25
        }
      },
      "35": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 63,
          column: 5
        }
      },
      "36": {
        start: {
          line: 62,
          column: 8
        },
        end: {
          line: 62,
          column: 31
        }
      },
      "37": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 18
        }
      },
      "38": {
        start: {
          line: 67,
          column: 19
        },
        end: {
          line: 67,
          column: 47
        }
      },
      "39": {
        start: {
          line: 68,
          column: 19
        },
        end: {
          line: 68,
          column: 47
        }
      },
      "40": {
        start: {
          line: 69,
          column: 32
        },
        end: {
          line: 69,
          column: 60
        }
      },
      "41": {
        start: {
          line: 70,
          column: 28
        },
        end: {
          line: 70,
          column: 54
        }
      },
      "42": {
        start: {
          line: 71,
          column: 34
        },
        end: {
          line: 71,
          column: 58
        }
      },
      "43": {
        start: {
          line: 72,
          column: 38
        },
        end: {
          line: 72,
          column: 64
        }
      },
      "44": {
        start: {
          line: 73,
          column: 52
        },
        end: {
          line: 73,
          column: 79
        }
      },
      "45": {
        start: {
          line: 74,
          column: 30
        },
        end: {
          line: 74,
          column: 56
        }
      },
      "46": {
        start: {
          line: 75,
          column: 46
        },
        end: {
          line: 75,
          column: 73
        }
      },
      "47": {
        start: {
          line: 76,
          column: 42
        },
        end: {
          line: 76,
          column: 69
        }
      },
      "48": {
        start: {
          line: 77,
          column: 19
        },
        end: {
          line: 77,
          column: 28
        }
      },
      "49": {
        start: {
          line: 79,
          column: 21
        },
        end: {
          line: 100,
          column: 5
        }
      },
      "50": {
        start: {
          line: 80,
          column: 8
        },
        end: {
          line: 99,
          column: 9
        }
      },
      "51": {
        start: {
          line: 81,
          column: 12
        },
        end: {
          line: 81,
          column: 31
        }
      },
      "52": {
        start: {
          line: 82,
          column: 12
        },
        end: {
          line: 82,
          column: 27
        }
      },
      "53": {
        start: {
          line: 83,
          column: 29
        },
        end: {
          line: 83,
          column: 73
        }
      },
      "54": {
        start: {
          line: 84,
          column: 12
        },
        end: {
          line: 88,
          column: 13
        }
      },
      "55": {
        start: {
          line: 85,
          column: 16
        },
        end: {
          line: 85,
          column: 39
        }
      },
      "56": {
        start: {
          line: 87,
          column: 16
        },
        end: {
          line: 87,
          column: 50
        }
      },
      "57": {
        start: {
          line: 90,
          column: 33
        },
        end: {
          line: 90,
          column: 91
        }
      },
      "58": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 35
        }
      },
      "59": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 96,
          column: 15
        }
      },
      "60": {
        start: {
          line: 98,
          column: 12
        },
        end: {
          line: 98,
          column: 32
        }
      },
      "61": {
        start: {
          line: 102,
          column: 24
        },
        end: {
          line: 115,
          column: 5
        }
      },
      "62": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 26
        }
      },
      "63": {
        start: {
          line: 103,
          column: 19
        },
        end: {
          line: 103,
          column: 26
        }
      },
      "64": {
        start: {
          line: 104,
          column: 8
        },
        end: {
          line: 114,
          column: 9
        }
      },
      "65": {
        start: {
          line: 105,
          column: 12
        },
        end: {
          line: 105,
          column: 38
        }
      },
      "66": {
        start: {
          line: 106,
          column: 29
        },
        end: {
          line: 106,
          column: 77
        }
      },
      "67": {
        start: {
          line: 107,
          column: 12
        },
        end: {
          line: 109,
          column: 13
        }
      },
      "68": {
        start: {
          line: 108,
          column: 16
        },
        end: {
          line: 108,
          column: 48
        }
      },
      "69": {
        start: {
          line: 111,
          column: 12
        },
        end: {
          line: 111,
          column: 58
        }
      },
      "70": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 39
        }
      },
      "71": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 121,
          column: 7
        }
      },
      "72": {
        start: {
          line: 118,
          column: 8
        },
        end: {
          line: 118,
          column: 19
        }
      },
      "73": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 129,
          column: 7
        }
      },
      "74": {
        start: {
          line: 124,
          column: 8
        },
        end: {
          line: 126,
          column: 9
        }
      },
      "75": {
        start: {
          line: 125,
          column: 12
        },
        end: {
          line: 125,
          column: 26
        }
      },
      "76": {
        start: {
          line: 131,
          column: 27
        },
        end: {
          line: 196,
          column: 5
        }
      },
      "77": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 195,
          column: 9
        }
      },
      "78": {
        start: {
          line: 133,
          column: 12
        },
        end: {
          line: 133,
          column: 72
        }
      },
      "79": {
        start: {
          line: 135,
          column: 12
        },
        end: {
          line: 160,
          column: 13
        }
      },
      "80": {
        start: {
          line: 136,
          column: 36
        },
        end: {
          line: 136,
          column: 49
        }
      },
      "81": {
        start: {
          line: 137,
          column: 30
        },
        end: {
          line: 137,
          column: 42
        }
      },
      "82": {
        start: {
          line: 138,
          column: 32
        },
        end: {
          line: 138,
          column: 46
        }
      },
      "83": {
        start: {
          line: 139,
          column: 30
        },
        end: {
          line: 139,
          column: 38
        }
      },
      "84": {
        start: {
          line: 141,
          column: 16
        },
        end: {
          line: 152,
          column: 17
        }
      },
      "85": {
        start: {
          line: 143,
          column: 20
        },
        end: {
          line: 143,
          column: 35
        }
      },
      "86": {
        start: {
          line: 144,
          column: 20
        },
        end: {
          line: 145,
          column: 37
        }
      },
      "87": {
        start: {
          line: 144,
          column: 43
        },
        end: {
          line: 144,
          column: 53
        }
      },
      "88": {
        start: {
          line: 145,
          column: 25
        },
        end: {
          line: 145,
          column: 37
        }
      },
      "89": {
        start: {
          line: 148,
          column: 20
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "90": {
        start: {
          line: 148,
          column: 46
        },
        end: {
          line: 148,
          column: 56
        }
      },
      "91": {
        start: {
          line: 149,
          column: 25
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "92": {
        start: {
          line: 149,
          column: 53
        },
        end: {
          line: 149,
          column: 65
        }
      },
      "93": {
        start: {
          line: 150,
          column: 20
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "94": {
        start: {
          line: 150,
          column: 43
        },
        end: {
          line: 150,
          column: 53
        }
      },
      "95": {
        start: {
          line: 151,
          column: 25
        },
        end: {
          line: 151,
          column: 37
        }
      },
      "96": {
        start: {
          line: 153,
          column: 16
        },
        end: {
          line: 159,
          column: 19
        }
      },
      "97": {
        start: {
          line: 162,
          column: 12
        },
        end: {
          line: 187,
          column: 16
        }
      },
      "98": {
        start: {
          line: 163,
          column: 16
        },
        end: {
          line: 185,
          column: 17
        }
      },
      "99": {
        start: {
          line: 164,
          column: 40
        },
        end: {
          line: 164,
          column: 54
        }
      },
      "100": {
        start: {
          line: 165,
          column: 34
        },
        end: {
          line: 165,
          column: 47
        }
      },
      "101": {
        start: {
          line: 166,
          column: 36
        },
        end: {
          line: 166,
          column: 51
        }
      },
      "102": {
        start: {
          line: 167,
          column: 34
        },
        end: {
          line: 167,
          column: 42
        }
      },
      "103": {
        start: {
          line: 168,
          column: 20
        },
        end: {
          line: 177,
          column: 21
        }
      },
      "104": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 169,
          column: 39
        }
      },
      "105": {
        start: {
          line: 170,
          column: 24
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "106": {
        start: {
          line: 170,
          column: 47
        },
        end: {
          line: 170,
          column: 57
        }
      },
      "107": {
        start: {
          line: 171,
          column: 29
        },
        end: {
          line: 171,
          column: 41
        }
      },
      "108": {
        start: {
          line: 173,
          column: 24
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "109": {
        start: {
          line: 173,
          column: 50
        },
        end: {
          line: 173,
          column: 60
        }
      },
      "110": {
        start: {
          line: 174,
          column: 29
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "111": {
        start: {
          line: 174,
          column: 57
        },
        end: {
          line: 174,
          column: 69
        }
      },
      "112": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 176,
          column: 41
        }
      },
      "113": {
        start: {
          line: 175,
          column: 47
        },
        end: {
          line: 175,
          column: 57
        }
      },
      "114": {
        start: {
          line: 176,
          column: 29
        },
        end: {
          line: 176,
          column: 41
        }
      },
      "115": {
        start: {
          line: 178,
          column: 20
        },
        end: {
          line: 184,
          column: 22
        }
      },
      "116": {
        start: {
          line: 186,
          column: 16
        },
        end: {
          line: 186,
          column: 29
        }
      },
      "117": {
        start: {
          line: 189,
          column: 33
        },
        end: {
          line: 189,
          column: 86
        }
      },
      "118": {
        start: {
          line: 190,
          column: 12
        },
        end: {
          line: 194,
          column: 15
        }
      },
      "119": {
        start: {
          line: 198,
          column: 30
        },
        end: {
          line: 229,
          column: 5
        }
      },
      "120": {
        start: {
          line: 199,
          column: 8
        },
        end: {
          line: 199,
          column: 26
        }
      },
      "121": {
        start: {
          line: 199,
          column: 19
        },
        end: {
          line: 199,
          column: 26
        }
      },
      "122": {
        start: {
          line: 200,
          column: 8
        },
        end: {
          line: 228,
          column: 9
        }
      },
      "123": {
        start: {
          line: 201,
          column: 29
        },
        end: {
          line: 205,
          column: 14
        }
      },
      "124": {
        start: {
          line: 206,
          column: 12
        },
        end: {
          line: 220,
          column: 13
        }
      },
      "125": {
        start: {
          line: 207,
          column: 16
        },
        end: {
          line: 211,
          column: 19
        }
      },
      "126": {
        start: {
          line: 213,
          column: 16
        },
        end: {
          line: 213,
          column: 30
        }
      },
      "127": {
        start: {
          line: 214,
          column: 16
        },
        end: {
          line: 214,
          column: 40
        }
      },
      "128": {
        start: {
          line: 216,
          column: 16
        },
        end: {
          line: 219,
          column: 19
        }
      },
      "129": {
        start: {
          line: 222,
          column: 33
        },
        end: {
          line: 222,
          column: 92
        }
      },
      "130": {
        start: {
          line: 223,
          column: 12
        },
        end: {
          line: 227,
          column: 15
        }
      },
      "131": {
        start: {
          line: 231,
          column: 30
        },
        end: {
          line: 243,
          column: 5
        }
      },
      "132": {
        start: {
          line: 232,
          column: 8
        },
        end: {
          line: 236,
          column: 11
        }
      },
      "133": {
        start: {
          line: 238,
          column: 8
        },
        end: {
          line: 242,
          column: 9
        }
      },
      "134": {
        start: {
          line: 239,
          column: 12
        },
        end: {
          line: 239,
          column: 54
        }
      },
      "135": {
        start: {
          line: 241,
          column: 12
        },
        end: {
          line: 241,
          column: 38
        }
      },
      "136": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 291,
          column: 5
        }
      },
      "137": {
        start: {
          line: 245,
          column: 8
        },
        end: {
          line: 290,
          column: 11
        }
      },
      "138": {
        start: {
          line: 292,
          column: 4
        },
        end: {
          line: 328,
          column: 5
        }
      },
      "139": {
        start: {
          line: 293,
          column: 8
        },
        end: {
          line: 327,
          column: 11
        }
      },
      "140": {
        start: {
          line: 315,
          column: 45
        },
        end: {
          line: 315,
          column: 58
        }
      },
      "141": {
        start: {
          line: 329,
          column: 4
        },
        end: {
          line: 495,
          column: 7
        }
      },
      "142": {
        start: {
          line: 338,
          column: 37
        },
        end: {
          line: 338,
          column: 78
        }
      },
      "143": {
        start: {
          line: 359,
          column: 45
        },
        end: {
          line: 359,
          column: 77
        }
      },
      "144": {
        start: {
          line: 360,
          column: 44
        },
        end: {
          line: 360,
          column: 81
        }
      },
      "145": {
        start: {
          line: 361,
          column: 46
        },
        end: {
          line: 361,
          column: 72
        }
      },
      "146": {
        start: {
          line: 371,
          column: 54
        },
        end: {
          line: 371,
          column: 77
        }
      },
      "147": {
        start: {
          line: 395,
          column: 61
        },
        end: {
          line: 395,
          column: 83
        }
      },
      "148": {
        start: {
          line: 404,
          column: 68
        },
        end: {
          line: 443,
          column: 49
        }
      },
      "149": {
        start: {
          line: 446,
          column: 85
        },
        end: {
          line: 454,
          column: 56
        }
      },
      "150": {
        start: {
          line: 449,
          column: 61
        },
        end: {
          line: 449,
          column: 90
        }
      },
      "151": {
        start: {
          line: 450,
          column: 60
        },
        end: {
          line: 450,
          column: 98
        }
      },
      "152": {
        start: {
          line: 451,
          column: 62
        },
        end: {
          line: 451,
          column: 89
        }
      },
      "153": {
        start: {
          line: 472,
          column: 61
        },
        end: {
          line: 472,
          column: 83
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 9
          },
          end: {
            line: 11,
            column: 10
          }
        },
        loc: {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 13,
            column: 5
          }
        },
        line: 11
      },
      "1": {
        name: "_getRequireWildcardCache",
        decl: {
          start: {
            line: 25,
            column: 9
          },
          end: {
            line: 25,
            column: 33
          }
        },
        loc: {
          start: {
            line: 25,
            column: 47
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 25
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 29,
            column: 39
          },
          end: {
            line: 29,
            column: 40
          }
        },
        loc: {
          start: {
            line: 29,
            column: 61
          },
          end: {
            line: 31,
            column: 5
          }
        },
        line: 29
      },
      "3": {
        name: "_interop_require_wildcard",
        decl: {
          start: {
            line: 33,
            column: 9
          },
          end: {
            line: 33,
            column: 34
          }
        },
        loc: {
          start: {
            line: 33,
            column: 53
          },
          end: {
            line: 65,
            column: 1
          }
        },
        line: 33
      },
      "4": {
        name: "PostDetailPage",
        decl: {
          start: {
            line: 66,
            column: 9
          },
          end: {
            line: 66,
            column: 23
          }
        },
        loc: {
          start: {
            line: 66,
            column: 26
          },
          end: {
            line: 496,
            column: 1
          }
        },
        line: 66
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 79,
            column: 21
          },
          end: {
            line: 79,
            column: 22
          }
        },
        loc: {
          start: {
            line: 79,
            column: 31
          },
          end: {
            line: 100,
            column: 5
          }
        },
        line: 79
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 25
          }
        },
        loc: {
          start: {
            line: 102,
            column: 34
          },
          end: {
            line: 115,
            column: 5
          }
        },
        line: 102
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 117,
            column: 26
          },
          end: {
            line: 117,
            column: 27
          }
        },
        loc: {
          start: {
            line: 117,
            column: 30
          },
          end: {
            line: 119,
            column: 5
          }
        },
        line: 117
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 123,
            column: 26
          },
          end: {
            line: 123,
            column: 27
          }
        },
        loc: {
          start: {
            line: 123,
            column: 30
          },
          end: {
            line: 127,
            column: 5
          }
        },
        line: 123
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 131,
            column: 27
          },
          end: {
            line: 131,
            column: 28
          }
        },
        loc: {
          start: {
            line: 131,
            column: 57
          },
          end: {
            line: 196,
            column: 5
          }
        },
        line: 131
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 162,
            column: 35
          },
          end: {
            line: 162,
            column: 36
          }
        },
        loc: {
          start: {
            line: 162,
            column: 44
          },
          end: {
            line: 187,
            column: 13
          }
        },
        line: 162
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 198,
            column: 30
          },
          end: {
            line: 198,
            column: 31
          }
        },
        loc: {
          start: {
            line: 198,
            column: 49
          },
          end: {
            line: 229,
            column: 5
          }
        },
        line: 198
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 231,
            column: 30
          },
          end: {
            line: 231,
            column: 31
          }
        },
        loc: {
          start: {
            line: 231,
            column: 34
          },
          end: {
            line: 243,
            column: 5
          }
        },
        line: 231
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 315,
            column: 41
          },
          end: {
            line: 315,
            column: 42
          }
        },
        loc: {
          start: {
            line: 315,
            column: 45
          },
          end: {
            line: 315,
            column: 58
          }
        },
        line: 315
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 338,
            column: 33
          },
          end: {
            line: 338,
            column: 34
          }
        },
        loc: {
          start: {
            line: 338,
            column: 37
          },
          end: {
            line: 338,
            column: 78
          }
        },
        line: 338
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 359,
            column: 41
          },
          end: {
            line: 359,
            column: 42
          }
        },
        loc: {
          start: {
            line: 359,
            column: 45
          },
          end: {
            line: 359,
            column: 77
          }
        },
        line: 359
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 360,
            column: 40
          },
          end: {
            line: 360,
            column: 41
          }
        },
        loc: {
          start: {
            line: 360,
            column: 44
          },
          end: {
            line: 360,
            column: 81
          }
        },
        line: 360
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 361,
            column: 42
          },
          end: {
            line: 361,
            column: 43
          }
        },
        loc: {
          start: {
            line: 361,
            column: 46
          },
          end: {
            line: 361,
            column: 72
          }
        },
        line: 361
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 371,
            column: 50
          },
          end: {
            line: 371,
            column: 51
          }
        },
        loc: {
          start: {
            line: 371,
            column: 54
          },
          end: {
            line: 371,
            column: 77
          }
        },
        line: 371
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 395,
            column: 57
          },
          end: {
            line: 395,
            column: 58
          }
        },
        loc: {
          start: {
            line: 395,
            column: 61
          },
          end: {
            line: 395,
            column: 83
          }
        },
        line: 395
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 404,
            column: 46
          },
          end: {
            line: 404,
            column: 47
          }
        },
        loc: {
          start: {
            line: 404,
            column: 68
          },
          end: {
            line: 443,
            column: 49
          }
        },
        line: 404
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 446,
            column: 62
          },
          end: {
            line: 446,
            column: 63
          }
        },
        loc: {
          start: {
            line: 446,
            column: 85
          },
          end: {
            line: 454,
            column: 56
          }
        },
        line: 446
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 449,
            column: 57
          },
          end: {
            line: 449,
            column: 58
          }
        },
        loc: {
          start: {
            line: 449,
            column: 61
          },
          end: {
            line: 449,
            column: 90
          }
        },
        line: 449
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 450,
            column: 56
          },
          end: {
            line: 450,
            column: 57
          }
        },
        loc: {
          start: {
            line: 450,
            column: 60
          },
          end: {
            line: 450,
            column: 98
          }
        },
        line: 450
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 451,
            column: 58
          },
          end: {
            line: 451,
            column: 59
          }
        },
        loc: {
          start: {
            line: 451,
            column: 62
          },
          end: {
            line: 451,
            column: 89
          }
        },
        line: 451
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 472,
            column: 57
          },
          end: {
            line: 472,
            column: 58
          }
        },
        loc: {
          start: {
            line: 472,
            column: 61
          },
          end: {
            line: 472,
            column: 83
          }
        },
        line: 472
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 26,
            column: 51
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 30,
            column: 65
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 30,
            column: 29
          },
          end: {
            line: 30,
            column: 45
          }
        }, {
          start: {
            line: 30,
            column: 48
          },
          end: {
            line: 30,
            column: 65
          }
        }],
        line: 30
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 34,
            column: 20
          }
        }, {
          start: {
            line: 34,
            column: 24
          },
          end: {
            line: 34,
            column: 27
          }
        }, {
          start: {
            line: 34,
            column: 31
          },
          end: {
            line: 34,
            column: 45
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 41,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 37
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 76
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 8
          },
          end: {
            line: 37,
            column: 20
          }
        }, {
          start: {
            line: 37,
            column: 24
          },
          end: {
            line: 37,
            column: 47
          }
        }, {
          start: {
            line: 37,
            column: 51
          },
          end: {
            line: 37,
            column: 76
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 45,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 43
      },
      "7": {
        loc: {
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 31
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 8
          },
          end: {
            line: 43,
            column: 13
          }
        }, {
          start: {
            line: 43,
            column: 17
          },
          end: {
            line: 43,
            column: 31
          }
        }],
        line: 43
      },
      "8": {
        loc: {
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 88
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 32
          },
          end: {
            line: 49,
            column: 53
          }
        }, {
          start: {
            line: 49,
            column: 57
          },
          end: {
            line: 49,
            column: 88
          }
        }],
        line: 49
      },
      "9": {
        loc: {
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 8
          },
          end: {
            line: 58,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "10": {
        loc: {
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 79
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 51,
            column: 12
          },
          end: {
            line: 51,
            column: 29
          }
        }, {
          start: {
            line: 51,
            column: 33
          },
          end: {
            line: 51,
            column: 79
          }
        }],
        line: 51
      },
      "11": {
        loc: {
          start: {
            line: 52,
            column: 23
          },
          end: {
            line: 52,
            column: 95
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 52,
            column: 47
          },
          end: {
            line: 52,
            column: 88
          }
        }, {
          start: {
            line: 52,
            column: 91
          },
          end: {
            line: 52,
            column: 95
          }
        }],
        line: 52
      },
      "12": {
        loc: {
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 12
          },
          end: {
            line: 57,
            column: 13
          }
        }, {
          start: {
            line: 55,
            column: 19
          },
          end: {
            line: 57,
            column: 13
          }
        }],
        line: 53
      },
      "13": {
        loc: {
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 53,
            column: 16
          },
          end: {
            line: 53,
            column: 20
          }
        }, {
          start: {
            line: 53,
            column: 25
          },
          end: {
            line: 53,
            column: 33
          }
        }, {
          start: {
            line: 53,
            column: 37
          },
          end: {
            line: 53,
            column: 45
          }
        }],
        line: 53
      },
      "14": {
        loc: {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 63,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 61
      },
      "15": {
        loc: {
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 84,
            column: 12
          },
          end: {
            line: 88,
            column: 13
          }
        }, {
          start: {
            line: 86,
            column: 19
          },
          end: {
            line: 88,
            column: 13
          }
        }],
        line: 84
      },
      "16": {
        loc: {
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 84,
            column: 16
          },
          end: {
            line: 84,
            column: 32
          }
        }, {
          start: {
            line: 84,
            column: 36
          },
          end: {
            line: 84,
            column: 49
          }
        }],
        line: 84
      },
      "17": {
        loc: {
          start: {
            line: 90,
            column: 33
          },
          end: {
            line: 90,
            column: 91
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 90,
            column: 56
          },
          end: {
            line: 90,
            column: 67
          }
        }, {
          start: {
            line: 90,
            column: 70
          },
          end: {
            line: 90,
            column: 91
          }
        }],
        line: 90
      },
      "18": {
        loc: {
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 103,
            column: 8
          },
          end: {
            line: 103,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 103
      },
      "19": {
        loc: {
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 12
          },
          end: {
            line: 109,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 107
      },
      "20": {
        loc: {
          start: {
            line: 108,
            column: 27
          },
          end: {
            line: 108,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 108,
            column: 27
          },
          end: {
            line: 108,
            column: 40
          }
        }, {
          start: {
            line: 108,
            column: 44
          },
          end: {
            line: 108,
            column: 46
          }
        }],
        line: 108
      },
      "21": {
        loc: {
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 124,
            column: 8
          },
          end: {
            line: 126,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 124
      },
      "22": {
        loc: {
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 135,
            column: 12
          },
          end: {
            line: 160,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 135
      },
      "23": {
        loc: {
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 135,
            column: 16
          },
          end: {
            line: 135,
            column: 20
          }
        }, {
          start: {
            line: 135,
            column: 24
          },
          end: {
            line: 135,
            column: 46
          }
        }],
        line: 135
      },
      "24": {
        loc: {
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 152,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 16
          },
          end: {
            line: 152,
            column: 17
          }
        }, {
          start: {
            line: 146,
            column: 23
          },
          end: {
            line: 152,
            column: 17
          }
        }],
        line: 141
      },
      "25": {
        loc: {
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 145,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 144,
            column: 20
          },
          end: {
            line: 145,
            column: 37
          }
        }, {
          start: {
            line: 145,
            column: 25
          },
          end: {
            line: 145,
            column: 37
          }
        }],
        line: 144
      },
      "26": {
        loc: {
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 149,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 148,
            column: 20
          },
          end: {
            line: 149,
            column: 65
          }
        }, {
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 65
          }
        }],
        line: 148
      },
      "27": {
        loc: {
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 65
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 25
          },
          end: {
            line: 149,
            column: 65
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 149
      },
      "28": {
        loc: {
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 151,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 20
          },
          end: {
            line: 151,
            column: 37
          }
        }, {
          start: {
            line: 151,
            column: 25
          },
          end: {
            line: 151,
            column: 37
          }
        }],
        line: 150
      },
      "29": {
        loc: {
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 16
          },
          end: {
            line: 185,
            column: 17
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "30": {
        loc: {
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 177,
            column: 21
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 168,
            column: 20
          },
          end: {
            line: 177,
            column: 21
          }
        }, {
          start: {
            line: 172,
            column: 27
          },
          end: {
            line: 177,
            column: 21
          }
        }],
        line: 168
      },
      "31": {
        loc: {
          start: {
            line: 170,
            column: 24
          },
          end: {
            line: 171,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 170,
            column: 24
          },
          end: {
            line: 171,
            column: 41
          }
        }, {
          start: {
            line: 171,
            column: 29
          },
          end: {
            line: 171,
            column: 41
          }
        }],
        line: 170
      },
      "32": {
        loc: {
          start: {
            line: 173,
            column: 24
          },
          end: {
            line: 174,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 173,
            column: 24
          },
          end: {
            line: 174,
            column: 69
          }
        }, {
          start: {
            line: 174,
            column: 29
          },
          end: {
            line: 174,
            column: 69
          }
        }],
        line: 173
      },
      "33": {
        loc: {
          start: {
            line: 174,
            column: 29
          },
          end: {
            line: 174,
            column: 69
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 174,
            column: 29
          },
          end: {
            line: 174,
            column: 69
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 174
      },
      "34": {
        loc: {
          start: {
            line: 175,
            column: 24
          },
          end: {
            line: 176,
            column: 41
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 175,
            column: 24
          },
          end: {
            line: 176,
            column: 41
          }
        }, {
          start: {
            line: 176,
            column: 29
          },
          end: {
            line: 176,
            column: 41
          }
        }],
        line: 175
      },
      "35": {
        loc: {
          start: {
            line: 189,
            column: 33
          },
          end: {
            line: 189,
            column: 86
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 189,
            column: 56
          },
          end: {
            line: 189,
            column: 67
          }
        }, {
          start: {
            line: 189,
            column: 70
          },
          end: {
            line: 189,
            column: 86
          }
        }],
        line: 189
      },
      "36": {
        loc: {
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 199,
            column: 26
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 199,
            column: 8
          },
          end: {
            line: 199,
            column: 26
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 199
      },
      "37": {
        loc: {
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 220,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 206,
            column: 12
          },
          end: {
            line: 220,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 206
      },
      "38": {
        loc: {
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 206,
            column: 49
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 206,
            column: 16
          },
          end: {
            line: 206,
            column: 32
          }
        }, {
          start: {
            line: 206,
            column: 36
          },
          end: {
            line: 206,
            column: 49
          }
        }],
        line: 206
      },
      "39": {
        loc: {
          start: {
            line: 222,
            column: 33
          },
          end: {
            line: 222,
            column: 92
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 222,
            column: 56
          },
          end: {
            line: 222,
            column: 67
          }
        }, {
          start: {
            line: 222,
            column: 70
          },
          end: {
            line: 222,
            column: 92
          }
        }],
        line: 222
      },
      "40": {
        loc: {
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 238,
            column: 8
          },
          end: {
            line: 242,
            column: 9
          }
        }, {
          start: {
            line: 240,
            column: 15
          },
          end: {
            line: 242,
            column: 9
          }
        }],
        line: 238
      },
      "41": {
        loc: {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 244
      },
      "42": {
        loc: {
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 292,
            column: 4
          },
          end: {
            line: 328,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 292
      },
      "43": {
        loc: {
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 292,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 292,
            column: 8
          },
          end: {
            line: 292,
            column: 13
          }
        }, {
          start: {
            line: 292,
            column: 17
          },
          end: {
            line: 292,
            column: 22
          }
        }],
        line: 292
      },
      "44": {
        loc: {
          start: {
            line: 308,
            column: 34
          },
          end: {
            line: 308,
            column: 109
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 308,
            column: 34
          },
          end: {
            line: 308,
            column: 39
          }
        }, {
          start: {
            line: 308,
            column: 43
          },
          end: {
            line: 308,
            column: 109
          }
        }],
        line: 308
      },
      "45": {
        loc: {
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 349,
            column: 14
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 332,
            column: 12
          },
          end: {
            line: 332,
            column: 22
          }
        }, {
          start: {
            line: 332,
            column: 40
          },
          end: {
            line: 349,
            column: 14
          }
        }],
        line: 332
      },
      "46": {
        loc: {
          start: {
            line: 364,
            column: 28
          },
          end: {
            line: 377,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 364,
            column: 28
          },
          end: {
            line: 364,
            column: 41
          }
        }, {
          start: {
            line: 364,
            column: 59
          },
          end: {
            line: 377,
            column: 30
          }
        }],
        line: 364
      },
      "47": {
        loc: {
          start: {
            line: 392,
            column: 44
          },
          end: {
            line: 397,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 392,
            column: 44
          },
          end: {
            line: 392,
            column: 58
          }
        }, {
          start: {
            line: 392,
            column: 76
          },
          end: {
            line: 397,
            column: 46
          }
        }],
        line: 392
      },
      "48": {
        loc: {
          start: {
            line: 400,
            column: 36
          },
          end: {
            line: 476,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 400,
            column: 69
          },
          end: {
            line: 444,
            column: 38
          }
        }, {
          start: {
            line: 444,
            column: 41
          },
          end: {
            line: 476,
            column: 38
          }
        }],
        line: 400
      },
      "49": {
        loc: {
          start: {
            line: 444,
            column: 41
          },
          end: {
            line: 476,
            column: 38
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 444,
            column: 76
          },
          end: {
            line: 455,
            column: 38
          }
        }, {
          start: {
            line: 455,
            column: 55
          },
          end: {
            line: 476,
            column: 38
          }
        }],
        line: 444
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0,
      "81": 0,
      "82": 0,
      "83": 0,
      "84": 0,
      "85": 0,
      "86": 0,
      "87": 0,
      "88": 0,
      "89": 0,
      "90": 0,
      "91": 0,
      "92": 0,
      "93": 0,
      "94": 0,
      "95": 0,
      "96": 0,
      "97": 0,
      "98": 0,
      "99": 0,
      "100": 0,
      "101": 0,
      "102": 0,
      "103": 0,
      "104": 0,
      "105": 0,
      "106": 0,
      "107": 0,
      "108": 0,
      "109": 0,
      "110": 0,
      "111": 0,
      "112": 0,
      "113": 0,
      "114": 0,
      "115": 0,
      "116": 0,
      "117": 0,
      "118": 0,
      "119": 0,
      "120": 0,
      "121": 0,
      "122": 0,
      "123": 0,
      "124": 0,
      "125": 0,
      "126": 0,
      "127": 0,
      "128": 0,
      "129": 0,
      "130": 0,
      "131": 0,
      "132": 0,
      "133": 0,
      "134": 0,
      "135": 0,
      "136": 0,
      "137": 0,
      "138": 0,
      "139": 0,
      "140": 0,
      "141": 0,
      "142": 0,
      "143": 0,
      "144": 0,
      "145": 0,
      "146": 0,
      "147": 0,
      "148": 0,
      "149": 0,
      "150": 0,
      "151": 0,
      "152": 0,
      "153": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0, 0],
      "4": [0, 0],
      "5": [0, 0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0],
      "21": [0, 0],
      "22": [0, 0],
      "23": [0, 0],
      "24": [0, 0],
      "25": [0, 0],
      "26": [0, 0],
      "27": [0, 0],
      "28": [0, 0],
      "29": [0, 0],
      "30": [0, 0],
      "31": [0, 0],
      "32": [0, 0],
      "33": [0, 0],
      "34": [0, 0],
      "35": [0, 0],
      "36": [0, 0],
      "37": [0, 0],
      "38": [0, 0],
      "39": [0, 0],
      "40": [0, 0],
      "41": [0, 0],
      "42": [0, 0],
      "43": [0, 0],
      "44": [0, 0],
      "45": [0, 0],
      "46": [0, 0],
      "47": [0, 0],
      "48": [0, 0],
      "49": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/app/posts/[id]/page.tsx"],
      sourcesContent: ["/**\n * Post detail/thread view page for The Robot Overlord\n * Displays individual post with replies and actions\n */\n\n'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useRouter } from 'next/navigation';\nimport { PostCard } from '@/components/posts/PostCard';\nimport { PostForm } from '@/components/posts/PostForm';\nimport { PostActions } from '@/components/posts/PostActions';\nimport { Button } from '@/components/ui/Button';\nimport { Card, CardContent } from '@/components/ui/Card';\nimport { useAppStore } from '@/stores/appStore';\nimport { postsService } from '@/services';\nimport { Post } from '@/types/posts';\nimport { ApiResponse } from '@/types/api';\n\nexport default function PostDetailPage() {\n  const params = useParams();\n  const router = useRouter();\n  const { addNotification } = useAppStore();\n  \n  const [post, setPost] = useState<Post | null>(null);\n  const [replies, setReplies] = useState<Post[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingReplies, setIsLoadingReplies] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [showReplyForm, setShowReplyForm] = useState(false);\n  const [showActions, setShowActions] = useState(false);\n\n  const postId = params.id as string;\n\n  // Load post details\n  const loadPost = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n\n      const response = await postsService.getPost(postId);\n      if (response.success && response.data) {\n        setPost(response.data);\n      } else {\n        throw new Error('Post not found');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load post';\n      setError(errorMessage);\n      addNotification({\n        type: 'error',\n        title: 'Error Loading Post',\n        message: errorMessage,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Load replies for the post\n  const loadReplies = async () => {\n    if (!post) return;\n\n    try {\n      setIsLoadingReplies(true);\n\n      const response = await postsService.getReplies(post.id);\n      if (response.data) {\n        setReplies(response.data || []);\n      }\n    } catch (err) {\n      console.error('Failed to load replies:', err);\n    } finally {\n      setIsLoadingReplies(false);\n    }\n  };\n\n  // Initial load\n  useEffect(() => {\n    loadPost();\n  }, [postId]);\n\n  // Load replies when post is loaded\n  useEffect(() => {\n    if (post) {\n      loadReplies();\n    }\n  }, [post]);\n\n  // Handle post vote\n  const handlePostVote = async (votePostId: string, voteType: 'up' | 'down') => {\n    try {\n      await postsService.votePost(votePostId, voteType);\n      \n      // Update local state for main post\n      if (post && post.id === votePostId) {\n        const currentVote = post.userVote;\n        let upvotes = post.upvotes;\n        let downvotes = post.downvotes;\n        let newVote = voteType;\n\n        // Handle vote logic\n        if (currentVote === voteType) {\n          // Remove vote\n          newVote = null as any;\n          if (voteType === 'up') upvotes--;\n          else downvotes--;\n        } else {\n          // Add or change vote\n          if (currentVote === 'up') upvotes--;\n          else if (currentVote === 'down') downvotes--;\n          \n          if (voteType === 'up') upvotes++;\n          else downvotes++;\n        }\n\n        setPost({\n          ...post,\n          userVote: newVote,\n          upvotes,\n          downvotes,\n          score: upvotes - downvotes\n        });\n      }\n\n      // Update local state for replies\n      setReplies(replies.map(reply => {\n        if (reply.id === votePostId) {\n          const currentVote = reply.userVote;\n          let upvotes = reply.upvotes;\n          let downvotes = reply.downvotes;\n          let newVote = voteType;\n\n          if (currentVote === voteType) {\n            newVote = null as any;\n            if (voteType === 'up') upvotes--;\n            else downvotes--;\n          } else {\n            if (currentVote === 'up') upvotes--;\n            else if (currentVote === 'down') downvotes--;\n            \n            if (voteType === 'up') upvotes++;\n            else downvotes++;\n          }\n\n          return {\n            ...reply,\n            userVote: newVote,\n            upvotes,\n            downvotes,\n            score: upvotes - downvotes\n          };\n        }\n        return reply;\n      }));\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to vote';\n      addNotification({\n        type: 'error',\n        title: 'Vote Error',\n        message: errorMessage,\n      });\n    }\n  };\n\n  // Handle reply submission\n  const handleReplySubmit = async (replyData: any) => {\n    if (!post) return;\n\n    try {\n      const response = await postsService.createPost({\n        ...replyData,\n        topicId: post.topicId,\n        parentId: post.id,\n      });\n\n      if (response.success && response.data) {\n        addNotification({\n          type: 'success',\n          title: 'Reply Posted',\n          message: 'Your reply has been posted successfully',\n        });\n\n        // Refresh replies\n        loadReplies();\n        setShowReplyForm(false);\n\n        // Update post reply count\n        setPost({\n          ...post,\n          replyCount: post.replyCount + 1\n        });\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to post reply';\n      addNotification({\n        type: 'error',\n        title: 'Reply Error',\n        message: errorMessage,\n      });\n    }\n  };\n\n  // Handle post deletion\n  const handlePostDeleted = () => {\n    addNotification({\n      type: 'success',\n      title: 'Post Deleted',\n      message: 'The post has been deleted',\n    });\n    \n    // Redirect to topic or dashboard\n    if (post?.topic) {\n      router.push(`/topics/${post.topic.slug}`);\n    } else {\n      router.push('/dashboard');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"max-w-4xl mx-auto space-y-6\">\n        {/* Post Skeleton */}\n        <Card variant=\"bordered\" className=\"animate-pulse\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex space-x-4\">\n              <div className=\"flex flex-col items-center space-y-2\">\n                <div className=\"h-6 w-6 bg-muted/20 rounded\"></div>\n                <div className=\"h-4 w-8 bg-muted/20 rounded\"></div>\n                <div className=\"h-6 w-6 bg-muted/20 rounded\"></div>\n              </div>\n              <div className=\"flex-1\">\n                <div className=\"h-4 bg-muted/20 rounded w-1/4 mb-2\"></div>\n                <div className=\"h-6 bg-muted/20 rounded w-3/4 mb-4\"></div>\n                <div className=\"h-4 bg-muted/20 rounded w-full mb-2\"></div>\n                <div className=\"h-4 bg-muted/20 rounded w-2/3\"></div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (error || !post) {\n    return (\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center py-12\">\n          <div className=\"text-6xl mb-4\">\uD83E\uDD16</div>\n          <h3 className=\"text-xl font-bold text-light-text mb-2\">\n            Post Not Found\n          </h3>\n          <p className=\"text-muted-light mb-6\">\n            {error || 'The post you are looking for does not exist or has been removed.'}\n          </p>\n          <div className=\"flex items-center justify-center space-x-4\">\n            <Button variant=\"ghost\" onClick={() => router.back()}>\n              Go Back\n            </Button>\n            <Button variant=\"primary\" onClick={loadPost}>\n              Try Again\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-6\">\n      {/* Breadcrumb */}\n      {post.topic && (\n        <div className=\"flex items-center space-x-2 text-sm text-muted-light\">\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => router.push(`/topics/${post.topic!.slug}`)}\n            className=\"text-overlord-red hover:underline p-0 h-auto\"\n          >\n            {post.topic.title}\n          </Button>\n          <span>\u2192</span>\n          <span>Post</span>\n        </div>\n      )}\n\n      {/* Main Post */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        <div className=\"lg:col-span-3\">\n          <PostCard\n            post={post}\n            onVote={handlePostVote}\n            onReply={() => setShowReplyForm(!showReplyForm)}\n            onEdit={() => router.push(`/posts/${post.id}/edit`)}\n            onReport={() => console.log('Report post')}\n            showTopic={false}\n          />\n\n          {/* Reply Form */}\n          {showReplyForm && (\n            <Card variant=\"bordered\" className=\"mt-6\">\n              <CardContent className=\"p-6\">\n                <PostForm\n                  onSubmit={handleReplySubmit}\n                  onCancel={() => setShowReplyForm(false)}\n                  parentId={post.id}\n                  topicId={post.topicId}\n                  mode=\"reply\"\n                />\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Replies Section */}\n          <div className=\"mt-8\">\n            <div className=\"flex items-center justify-between mb-6\">\n              <h2 className=\"text-xl font-bold text-light-text\">\n                Replies ({post.replyCount})\n              </h2>\n              {!showReplyForm && (\n                <Button\n                  variant=\"primary\"\n                  size=\"sm\"\n                  onClick={() => setShowReplyForm(true)}\n                >\n                  Reply\n                </Button>\n              )}\n            </div>\n\n            {/* Replies List */}\n            {isLoadingReplies ? (\n              <div className=\"space-y-4\">\n                {[...Array(3)].map((_, i) => (\n                  <Card key={i} variant=\"bordered\" className=\"animate-pulse\">\n                    <CardContent className=\"p-6\">\n                      <div className=\"flex space-x-4\">\n                        <div className=\"flex flex-col items-center space-y-2\">\n                          <div className=\"h-6 w-6 bg-muted/20 rounded\"></div>\n                          <div className=\"h-4 w-8 bg-muted/20 rounded\"></div>\n                          <div className=\"h-6 w-6 bg-muted/20 rounded\"></div>\n                        </div>\n                        <div className=\"flex-1\">\n                          <div className=\"h-4 bg-muted/20 rounded w-1/4 mb-2\"></div>\n                          <div className=\"h-4 bg-muted/20 rounded w-full mb-2\"></div>\n                          <div className=\"h-4 bg-muted/20 rounded w-2/3\"></div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                ))}\n              </div>\n            ) : replies.length > 0 ? (\n              <div className=\"space-y-4\">\n                {replies.map((reply) => (\n                  <PostCard\n                    key={reply.id}\n                    post={reply}\n                    onVote={handlePostVote}\n                    onReply={() => console.log('Reply to reply')}\n                    onEdit={() => router.push(`/posts/${reply.id}/edit`)}\n                    onReport={() => console.log('Report reply')}\n                    showTopic={false}\n                    compact={true}\n                  />\n                ))}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <div className=\"text-4xl mb-4\">\uD83D\uDCAC</div>\n                <h3 className=\"text-lg font-bold text-light-text mb-2\">\n                  No Replies Yet\n                </h3>\n                <p className=\"text-muted-light mb-4\">\n                  Be the first to reply to this post\n                </p>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => setShowReplyForm(true)}\n                >\n                  Write Reply\n                </Button>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"sticky top-6 space-y-6\">\n            {/* Post Actions */}\n            <PostActions\n              post={post}\n              onPostDeleted={handlePostDeleted}\n              onPostUpdated={setPost}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],
      names: ["PostDetailPage", "params", "useParams", "router", "useRouter", "addNotification", "useAppStore", "post", "setPost", "useState", "replies", "setReplies", "isLoading", "setIsLoading", "isLoadingReplies", "setIsLoadingReplies", "error", "setError", "showReplyForm", "setShowReplyForm", "showActions", "setShowActions", "postId", "id", "loadPost", "response", "postsService", "getPost", "success", "data", "Error", "err", "errorMessage", "message", "type", "title", "loadReplies", "getReplies", "console", "useEffect", "handlePostVote", "votePostId", "voteType", "votePost", "currentVote", "userVote", "upvotes", "downvotes", "newVote", "score", "map", "reply", "handleReplySubmit", "replyData", "createPost", "topicId", "parentId", "replyCount", "handlePostDeleted", "topic", "push", "slug", "div", "className", "Card", "variant", "CardContent", "h3", "p", "Button", "onClick", "back", "size", "span", "PostCard", "onVote", "onReply", "onEdit", "onReport", "log", "showTopic", "PostForm", "onSubmit", "onCancel", "mode", "h2", "Array", "_", "i", "length", "compact", "PostActions", "onPostDeleted", "onPostUpdated"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "dafcdcbe87604dc3263c28cf079b1599250bfbbc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_100mwspisk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_100mwspisk();
cov_100mwspisk().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_100mwspisk().s[1]++;
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_100mwspisk().f[0]++;
    cov_100mwspisk().s[2]++;
    return PostDetailPage;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_100mwspisk().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_100mwspisk().s[4]++, _interop_require_wildcard(require("react")));
const _navigation =
/* istanbul ignore next */
(cov_100mwspisk().s[5]++, require("next/navigation"));
const _PostCard =
/* istanbul ignore next */
(cov_100mwspisk().s[6]++, require("../../../components/posts/PostCard"));
const _PostForm =
/* istanbul ignore next */
(cov_100mwspisk().s[7]++, require("../../../components/posts/PostForm"));
const _PostActions =
/* istanbul ignore next */
(cov_100mwspisk().s[8]++, require("../../../components/posts/PostActions"));
const _Button =
/* istanbul ignore next */
(cov_100mwspisk().s[9]++, require("../../../components/ui/Button"));
const _Card =
/* istanbul ignore next */
(cov_100mwspisk().s[10]++, require("../../../components/ui/Card"));
const _appStore =
/* istanbul ignore next */
(cov_100mwspisk().s[11]++, require("../../../stores/appStore"));
const _services =
/* istanbul ignore next */
(cov_100mwspisk().s[12]++, require("../../../services"));
function _getRequireWildcardCache(nodeInterop) {
  /* istanbul ignore next */
  cov_100mwspisk().f[1]++;
  cov_100mwspisk().s[13]++;
  if (typeof WeakMap !== "function") {
    /* istanbul ignore next */
    cov_100mwspisk().b[0][0]++;
    cov_100mwspisk().s[14]++;
    return null;
  } else
  /* istanbul ignore next */
  {
    cov_100mwspisk().b[0][1]++;
  }
  var cacheBabelInterop =
  /* istanbul ignore next */
  (cov_100mwspisk().s[15]++, new WeakMap());
  var cacheNodeInterop =
  /* istanbul ignore next */
  (cov_100mwspisk().s[16]++, new WeakMap());
  /* istanbul ignore next */
  cov_100mwspisk().s[17]++;
  return (_getRequireWildcardCache = function (nodeInterop) {
    /* istanbul ignore next */
    cov_100mwspisk().f[2]++;
    cov_100mwspisk().s[18]++;
    return nodeInterop ?
    /* istanbul ignore next */
    (cov_100mwspisk().b[1][0]++, cacheNodeInterop) :
    /* istanbul ignore next */
    (cov_100mwspisk().b[1][1]++, cacheBabelInterop);
  })(nodeInterop);
}
function _interop_require_wildcard(obj, nodeInterop) {
  /* istanbul ignore next */
  cov_100mwspisk().f[3]++;
  cov_100mwspisk().s[19]++;
  if (
  /* istanbul ignore next */
  (cov_100mwspisk().b[3][0]++, !nodeInterop) &&
  /* istanbul ignore next */
  (cov_100mwspisk().b[3][1]++, obj) &&
  /* istanbul ignore next */
  (cov_100mwspisk().b[3][2]++, obj.__esModule)) {
    /* istanbul ignore next */
    cov_100mwspisk().b[2][0]++;
    cov_100mwspisk().s[20]++;
    return obj;
  } else
  /* istanbul ignore next */
  {
    cov_100mwspisk().b[2][1]++;
  }
  cov_100mwspisk().s[21]++;
  if (
  /* istanbul ignore next */
  (cov_100mwspisk().b[5][0]++, obj === null) ||
  /* istanbul ignore next */
  (cov_100mwspisk().b[5][1]++, typeof obj !== "object") &&
  /* istanbul ignore next */
  (cov_100mwspisk().b[5][2]++, typeof obj !== "function")) {
    /* istanbul ignore next */
    cov_100mwspisk().b[4][0]++;
    cov_100mwspisk().s[22]++;
    return {
      default: obj
    };
  } else
  /* istanbul ignore next */
  {
    cov_100mwspisk().b[4][1]++;
  }
  var cache =
  /* istanbul ignore next */
  (cov_100mwspisk().s[23]++, _getRequireWildcardCache(nodeInterop));
  /* istanbul ignore next */
  cov_100mwspisk().s[24]++;
  if (
  /* istanbul ignore next */
  (cov_100mwspisk().b[7][0]++, cache) &&
  /* istanbul ignore next */
  (cov_100mwspisk().b[7][1]++, cache.has(obj))) {
    /* istanbul ignore next */
    cov_100mwspisk().b[6][0]++;
    cov_100mwspisk().s[25]++;
    return cache.get(obj);
  } else
  /* istanbul ignore next */
  {
    cov_100mwspisk().b[6][1]++;
  }
  var newObj =
  /* istanbul ignore next */
  (cov_100mwspisk().s[26]++, {
    __proto__: null
  });
  var hasPropertyDescriptor =
  /* istanbul ignore next */
  (cov_100mwspisk().s[27]++,
  /* istanbul ignore next */
  (cov_100mwspisk().b[8][0]++, Object.defineProperty) &&
  /* istanbul ignore next */
  (cov_100mwspisk().b[8][1]++, Object.getOwnPropertyDescriptor));
  /* istanbul ignore next */
  cov_100mwspisk().s[28]++;
  for (var key in obj) {
    /* istanbul ignore next */
    cov_100mwspisk().s[29]++;
    if (
    /* istanbul ignore next */
    (cov_100mwspisk().b[10][0]++, key !== "default") &&
    /* istanbul ignore next */
    (cov_100mwspisk().b[10][1]++, Object.prototype.hasOwnProperty.call(obj, key))) {
      /* istanbul ignore next */
      cov_100mwspisk().b[9][0]++;
      var desc =
      /* istanbul ignore next */
      (cov_100mwspisk().s[30]++, hasPropertyDescriptor ?
      /* istanbul ignore next */
      (cov_100mwspisk().b[11][0]++, Object.getOwnPropertyDescriptor(obj, key)) :
      /* istanbul ignore next */
      (cov_100mwspisk().b[11][1]++, null));
      /* istanbul ignore next */
      cov_100mwspisk().s[31]++;
      if (
      /* istanbul ignore next */
      (cov_100mwspisk().b[13][0]++, desc) && (
      /* istanbul ignore next */
      (cov_100mwspisk().b[13][1]++, desc.get) ||
      /* istanbul ignore next */
      (cov_100mwspisk().b[13][2]++, desc.set))) {
        /* istanbul ignore next */
        cov_100mwspisk().b[12][0]++;
        cov_100mwspisk().s[32]++;
        Object.defineProperty(newObj, key, desc);
      } else {
        /* istanbul ignore next */
        cov_100mwspisk().b[12][1]++;
        cov_100mwspisk().s[33]++;
        newObj[key] = obj[key];
      }
    } else
    /* istanbul ignore next */
    {
      cov_100mwspisk().b[9][1]++;
    }
  }
  /* istanbul ignore next */
  cov_100mwspisk().s[34]++;
  newObj.default = obj;
  /* istanbul ignore next */
  cov_100mwspisk().s[35]++;
  if (cache) {
    /* istanbul ignore next */
    cov_100mwspisk().b[14][0]++;
    cov_100mwspisk().s[36]++;
    cache.set(obj, newObj);
  } else
  /* istanbul ignore next */
  {
    cov_100mwspisk().b[14][1]++;
  }
  cov_100mwspisk().s[37]++;
  return newObj;
}
function PostDetailPage() {
  /* istanbul ignore next */
  cov_100mwspisk().f[4]++;
  const params =
  /* istanbul ignore next */
  (cov_100mwspisk().s[38]++, (0, _navigation.useParams)());
  const router =
  /* istanbul ignore next */
  (cov_100mwspisk().s[39]++, (0, _navigation.useRouter)());
  const {
    addNotification
  } =
  /* istanbul ignore next */
  (cov_100mwspisk().s[40]++, (0, _appStore.useAppStore)());
  const [post, setPost] =
  /* istanbul ignore next */
  (cov_100mwspisk().s[41]++, (0, _react.useState)(null));
  const [replies, setReplies] =
  /* istanbul ignore next */
  (cov_100mwspisk().s[42]++, (0, _react.useState)([]));
  const [isLoading, setIsLoading] =
  /* istanbul ignore next */
  (cov_100mwspisk().s[43]++, (0, _react.useState)(true));
  const [isLoadingReplies, setIsLoadingReplies] =
  /* istanbul ignore next */
  (cov_100mwspisk().s[44]++, (0, _react.useState)(false));
  const [error, setError] =
  /* istanbul ignore next */
  (cov_100mwspisk().s[45]++, (0, _react.useState)(null));
  const [showReplyForm, setShowReplyForm] =
  /* istanbul ignore next */
  (cov_100mwspisk().s[46]++, (0, _react.useState)(false));
  const [showActions, setShowActions] =
  /* istanbul ignore next */
  (cov_100mwspisk().s[47]++, (0, _react.useState)(false));
  const postId =
  /* istanbul ignore next */
  (cov_100mwspisk().s[48]++, params.id);
  // Load post details
  /* istanbul ignore next */
  cov_100mwspisk().s[49]++;
  const loadPost = async () => {
    /* istanbul ignore next */
    cov_100mwspisk().f[5]++;
    cov_100mwspisk().s[50]++;
    try {
      /* istanbul ignore next */
      cov_100mwspisk().s[51]++;
      setIsLoading(true);
      /* istanbul ignore next */
      cov_100mwspisk().s[52]++;
      setError(null);
      const response =
      /* istanbul ignore next */
      (cov_100mwspisk().s[53]++, await _services.postsService.getPost(postId));
      /* istanbul ignore next */
      cov_100mwspisk().s[54]++;
      if (
      /* istanbul ignore next */
      (cov_100mwspisk().b[16][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_100mwspisk().b[16][1]++, response.data)) {
        /* istanbul ignore next */
        cov_100mwspisk().b[15][0]++;
        cov_100mwspisk().s[55]++;
        setPost(response.data);
      } else {
        /* istanbul ignore next */
        cov_100mwspisk().b[15][1]++;
        cov_100mwspisk().s[56]++;
        throw new Error('Post not found');
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_100mwspisk().s[57]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_100mwspisk().b[17][0]++, err.message) :
      /* istanbul ignore next */
      (cov_100mwspisk().b[17][1]++, 'Failed to load post'));
      /* istanbul ignore next */
      cov_100mwspisk().s[58]++;
      setError(errorMessage);
      /* istanbul ignore next */
      cov_100mwspisk().s[59]++;
      addNotification({
        type: 'error',
        title: 'Error Loading Post',
        message: errorMessage
      });
    } finally {
      /* istanbul ignore next */
      cov_100mwspisk().s[60]++;
      setIsLoading(false);
    }
  };
  // Load replies for the post
  /* istanbul ignore next */
  cov_100mwspisk().s[61]++;
  const loadReplies = async () => {
    /* istanbul ignore next */
    cov_100mwspisk().f[6]++;
    cov_100mwspisk().s[62]++;
    if (!post) {
      /* istanbul ignore next */
      cov_100mwspisk().b[18][0]++;
      cov_100mwspisk().s[63]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_100mwspisk().b[18][1]++;
    }
    cov_100mwspisk().s[64]++;
    try {
      /* istanbul ignore next */
      cov_100mwspisk().s[65]++;
      setIsLoadingReplies(true);
      const response =
      /* istanbul ignore next */
      (cov_100mwspisk().s[66]++, await _services.postsService.getReplies(post.id));
      /* istanbul ignore next */
      cov_100mwspisk().s[67]++;
      if (response.data) {
        /* istanbul ignore next */
        cov_100mwspisk().b[19][0]++;
        cov_100mwspisk().s[68]++;
        setReplies(
        /* istanbul ignore next */
        (cov_100mwspisk().b[20][0]++, response.data) ||
        /* istanbul ignore next */
        (cov_100mwspisk().b[20][1]++, []));
      } else
      /* istanbul ignore next */
      {
        cov_100mwspisk().b[19][1]++;
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_100mwspisk().s[69]++;
      console.error('Failed to load replies:', err);
    } finally {
      /* istanbul ignore next */
      cov_100mwspisk().s[70]++;
      setIsLoadingReplies(false);
    }
  };
  // Initial load
  /* istanbul ignore next */
  cov_100mwspisk().s[71]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_100mwspisk().f[7]++;
    cov_100mwspisk().s[72]++;
    loadPost();
  }, [postId]);
  // Load replies when post is loaded
  /* istanbul ignore next */
  cov_100mwspisk().s[73]++;
  (0, _react.useEffect)(() => {
    /* istanbul ignore next */
    cov_100mwspisk().f[8]++;
    cov_100mwspisk().s[74]++;
    if (post) {
      /* istanbul ignore next */
      cov_100mwspisk().b[21][0]++;
      cov_100mwspisk().s[75]++;
      loadReplies();
    } else
    /* istanbul ignore next */
    {
      cov_100mwspisk().b[21][1]++;
    }
  }, [post]);
  // Handle post vote
  /* istanbul ignore next */
  cov_100mwspisk().s[76]++;
  const handlePostVote = async (votePostId, voteType) => {
    /* istanbul ignore next */
    cov_100mwspisk().f[9]++;
    cov_100mwspisk().s[77]++;
    try {
      /* istanbul ignore next */
      cov_100mwspisk().s[78]++;
      await _services.postsService.votePost(votePostId, voteType);
      // Update local state for main post
      /* istanbul ignore next */
      cov_100mwspisk().s[79]++;
      if (
      /* istanbul ignore next */
      (cov_100mwspisk().b[23][0]++, post) &&
      /* istanbul ignore next */
      (cov_100mwspisk().b[23][1]++, post.id === votePostId)) {
        /* istanbul ignore next */
        cov_100mwspisk().b[22][0]++;
        const currentVote =
        /* istanbul ignore next */
        (cov_100mwspisk().s[80]++, post.userVote);
        let upvotes =
        /* istanbul ignore next */
        (cov_100mwspisk().s[81]++, post.upvotes);
        let downvotes =
        /* istanbul ignore next */
        (cov_100mwspisk().s[82]++, post.downvotes);
        let newVote =
        /* istanbul ignore next */
        (cov_100mwspisk().s[83]++, voteType);
        // Handle vote logic
        /* istanbul ignore next */
        cov_100mwspisk().s[84]++;
        if (currentVote === voteType) {
          /* istanbul ignore next */
          cov_100mwspisk().b[24][0]++;
          cov_100mwspisk().s[85]++;
          // Remove vote
          newVote = null;
          /* istanbul ignore next */
          cov_100mwspisk().s[86]++;
          if (voteType === 'up') {
            /* istanbul ignore next */
            cov_100mwspisk().b[25][0]++;
            cov_100mwspisk().s[87]++;
            upvotes--;
          } else {
            /* istanbul ignore next */
            cov_100mwspisk().b[25][1]++;
            cov_100mwspisk().s[88]++;
            downvotes--;
          }
        } else {
          /* istanbul ignore next */
          cov_100mwspisk().b[24][1]++;
          cov_100mwspisk().s[89]++;
          // Add or change vote
          if (currentVote === 'up') {
            /* istanbul ignore next */
            cov_100mwspisk().b[26][0]++;
            cov_100mwspisk().s[90]++;
            upvotes--;
          } else {
            /* istanbul ignore next */
            cov_100mwspisk().b[26][1]++;
            cov_100mwspisk().s[91]++;
            if (currentVote === 'down') {
              /* istanbul ignore next */
              cov_100mwspisk().b[27][0]++;
              cov_100mwspisk().s[92]++;
              downvotes--;
            } else
            /* istanbul ignore next */
            {
              cov_100mwspisk().b[27][1]++;
            }
          }
          /* istanbul ignore next */
          cov_100mwspisk().s[93]++;
          if (voteType === 'up') {
            /* istanbul ignore next */
            cov_100mwspisk().b[28][0]++;
            cov_100mwspisk().s[94]++;
            upvotes++;
          } else {
            /* istanbul ignore next */
            cov_100mwspisk().b[28][1]++;
            cov_100mwspisk().s[95]++;
            downvotes++;
          }
        }
        /* istanbul ignore next */
        cov_100mwspisk().s[96]++;
        setPost({
          ...post,
          userVote: newVote,
          upvotes,
          downvotes,
          score: upvotes - downvotes
        });
      } else
      /* istanbul ignore next */
      {
        cov_100mwspisk().b[22][1]++;
      }
      // Update local state for replies
      cov_100mwspisk().s[97]++;
      setReplies(replies.map(reply => {
        /* istanbul ignore next */
        cov_100mwspisk().f[10]++;
        cov_100mwspisk().s[98]++;
        if (reply.id === votePostId) {
          /* istanbul ignore next */
          cov_100mwspisk().b[29][0]++;
          const currentVote =
          /* istanbul ignore next */
          (cov_100mwspisk().s[99]++, reply.userVote);
          let upvotes =
          /* istanbul ignore next */
          (cov_100mwspisk().s[100]++, reply.upvotes);
          let downvotes =
          /* istanbul ignore next */
          (cov_100mwspisk().s[101]++, reply.downvotes);
          let newVote =
          /* istanbul ignore next */
          (cov_100mwspisk().s[102]++, voteType);
          /* istanbul ignore next */
          cov_100mwspisk().s[103]++;
          if (currentVote === voteType) {
            /* istanbul ignore next */
            cov_100mwspisk().b[30][0]++;
            cov_100mwspisk().s[104]++;
            newVote = null;
            /* istanbul ignore next */
            cov_100mwspisk().s[105]++;
            if (voteType === 'up') {
              /* istanbul ignore next */
              cov_100mwspisk().b[31][0]++;
              cov_100mwspisk().s[106]++;
              upvotes--;
            } else {
              /* istanbul ignore next */
              cov_100mwspisk().b[31][1]++;
              cov_100mwspisk().s[107]++;
              downvotes--;
            }
          } else {
            /* istanbul ignore next */
            cov_100mwspisk().b[30][1]++;
            cov_100mwspisk().s[108]++;
            if (currentVote === 'up') {
              /* istanbul ignore next */
              cov_100mwspisk().b[32][0]++;
              cov_100mwspisk().s[109]++;
              upvotes--;
            } else {
              /* istanbul ignore next */
              cov_100mwspisk().b[32][1]++;
              cov_100mwspisk().s[110]++;
              if (currentVote === 'down') {
                /* istanbul ignore next */
                cov_100mwspisk().b[33][0]++;
                cov_100mwspisk().s[111]++;
                downvotes--;
              } else
              /* istanbul ignore next */
              {
                cov_100mwspisk().b[33][1]++;
              }
            }
            /* istanbul ignore next */
            cov_100mwspisk().s[112]++;
            if (voteType === 'up') {
              /* istanbul ignore next */
              cov_100mwspisk().b[34][0]++;
              cov_100mwspisk().s[113]++;
              upvotes++;
            } else {
              /* istanbul ignore next */
              cov_100mwspisk().b[34][1]++;
              cov_100mwspisk().s[114]++;
              downvotes++;
            }
          }
          /* istanbul ignore next */
          cov_100mwspisk().s[115]++;
          return {
            ...reply,
            userVote: newVote,
            upvotes,
            downvotes,
            score: upvotes - downvotes
          };
        } else
        /* istanbul ignore next */
        {
          cov_100mwspisk().b[29][1]++;
        }
        cov_100mwspisk().s[116]++;
        return reply;
      }));
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_100mwspisk().s[117]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_100mwspisk().b[35][0]++, err.message) :
      /* istanbul ignore next */
      (cov_100mwspisk().b[35][1]++, 'Failed to vote'));
      /* istanbul ignore next */
      cov_100mwspisk().s[118]++;
      addNotification({
        type: 'error',
        title: 'Vote Error',
        message: errorMessage
      });
    }
  };
  // Handle reply submission
  /* istanbul ignore next */
  cov_100mwspisk().s[119]++;
  const handleReplySubmit = async replyData => {
    /* istanbul ignore next */
    cov_100mwspisk().f[11]++;
    cov_100mwspisk().s[120]++;
    if (!post) {
      /* istanbul ignore next */
      cov_100mwspisk().b[36][0]++;
      cov_100mwspisk().s[121]++;
      return;
    } else
    /* istanbul ignore next */
    {
      cov_100mwspisk().b[36][1]++;
    }
    cov_100mwspisk().s[122]++;
    try {
      const response =
      /* istanbul ignore next */
      (cov_100mwspisk().s[123]++, await _services.postsService.createPost({
        ...replyData,
        topicId: post.topicId,
        parentId: post.id
      }));
      /* istanbul ignore next */
      cov_100mwspisk().s[124]++;
      if (
      /* istanbul ignore next */
      (cov_100mwspisk().b[38][0]++, response.success) &&
      /* istanbul ignore next */
      (cov_100mwspisk().b[38][1]++, response.data)) {
        /* istanbul ignore next */
        cov_100mwspisk().b[37][0]++;
        cov_100mwspisk().s[125]++;
        addNotification({
          type: 'success',
          title: 'Reply Posted',
          message: 'Your reply has been posted successfully'
        });
        // Refresh replies
        /* istanbul ignore next */
        cov_100mwspisk().s[126]++;
        loadReplies();
        /* istanbul ignore next */
        cov_100mwspisk().s[127]++;
        setShowReplyForm(false);
        // Update post reply count
        /* istanbul ignore next */
        cov_100mwspisk().s[128]++;
        setPost({
          ...post,
          replyCount: post.replyCount + 1
        });
      } else
      /* istanbul ignore next */
      {
        cov_100mwspisk().b[37][1]++;
      }
    } catch (err) {
      const errorMessage =
      /* istanbul ignore next */
      (cov_100mwspisk().s[129]++, err instanceof Error ?
      /* istanbul ignore next */
      (cov_100mwspisk().b[39][0]++, err.message) :
      /* istanbul ignore next */
      (cov_100mwspisk().b[39][1]++, 'Failed to post reply'));
      /* istanbul ignore next */
      cov_100mwspisk().s[130]++;
      addNotification({
        type: 'error',
        title: 'Reply Error',
        message: errorMessage
      });
    }
  };
  // Handle post deletion
  /* istanbul ignore next */
  cov_100mwspisk().s[131]++;
  const handlePostDeleted = () => {
    /* istanbul ignore next */
    cov_100mwspisk().f[12]++;
    cov_100mwspisk().s[132]++;
    addNotification({
      type: 'success',
      title: 'Post Deleted',
      message: 'The post has been deleted'
    });
    // Redirect to topic or dashboard
    /* istanbul ignore next */
    cov_100mwspisk().s[133]++;
    if (post?.topic) {
      /* istanbul ignore next */
      cov_100mwspisk().b[40][0]++;
      cov_100mwspisk().s[134]++;
      router.push(`/topics/${post.topic.slug}`);
    } else {
      /* istanbul ignore next */
      cov_100mwspisk().b[40][1]++;
      cov_100mwspisk().s[135]++;
      router.push('/dashboard');
    }
  };
  /* istanbul ignore next */
  cov_100mwspisk().s[136]++;
  if (isLoading) {
    /* istanbul ignore next */
    cov_100mwspisk().b[41][0]++;
    cov_100mwspisk().s[137]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "max-w-4xl mx-auto space-y-6",
      children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
        variant: "bordered",
        className: "animate-pulse",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
          className: "p-6",
          children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex space-x-4",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex flex-col items-center space-y-2",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-6 w-6 bg-muted/20 rounded"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-4 w-8 bg-muted/20 rounded"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-6 w-6 bg-muted/20 rounded"
              })]
            }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
              className: "flex-1",
              children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-4 bg-muted/20 rounded w-1/4 mb-2"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-6 bg-muted/20 rounded w-3/4 mb-4"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-4 bg-muted/20 rounded w-full mb-2"
              }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                className: "h-4 bg-muted/20 rounded w-2/3"
              })]
            })]
          })
        })
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_100mwspisk().b[41][1]++;
  }
  cov_100mwspisk().s[138]++;
  if (
  /* istanbul ignore next */
  (cov_100mwspisk().b[43][0]++, error) ||
  /* istanbul ignore next */
  (cov_100mwspisk().b[43][1]++, !post)) {
    /* istanbul ignore next */
    cov_100mwspisk().b[42][0]++;
    cov_100mwspisk().s[139]++;
    return /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
      className: "max-w-4xl mx-auto",
      children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "text-center py-12",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "text-6xl mb-4",
          children: "\uD83E\uDD16"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
          className: "text-xl font-bold text-light-text mb-2",
          children: "Post Not Found"
        }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
          className: "text-muted-light mb-6",
          children:
          /* istanbul ignore next */
          (cov_100mwspisk().b[44][0]++, error) ||
          /* istanbul ignore next */
          (cov_100mwspisk().b[44][1]++, 'The post you are looking for does not exist or has been removed.')
        }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "flex items-center justify-center space-x-4",
          children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            variant: "ghost",
            onClick: () => {
              /* istanbul ignore next */
              cov_100mwspisk().f[13]++;
              cov_100mwspisk().s[140]++;
              return router.back();
            },
            children: "Go Back"
          }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
            variant: "primary",
            onClick: loadPost,
            children: "Try Again"
          })]
        })]
      })
    });
  } else
  /* istanbul ignore next */
  {
    cov_100mwspisk().b[42][1]++;
  }
  cov_100mwspisk().s[141]++;
  return /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
    className: "max-w-4xl mx-auto space-y-6",
    children: [
    /* istanbul ignore next */
    (cov_100mwspisk().b[45][0]++, post.topic) &&
    /* istanbul ignore next */
    (cov_100mwspisk().b[45][1]++, /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "flex items-center space-x-2 text-sm text-muted-light",
      children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
        variant: "ghost",
        size: "sm",
        onClick: () => {
          /* istanbul ignore next */
          cov_100mwspisk().f[14]++;
          cov_100mwspisk().s[142]++;
          return router.push(`/topics/${post.topic.slug}`);
        },
        className: "text-overlord-red hover:underline p-0 h-auto",
        children: post.topic.title
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        children: "→"
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
        children: "Post"
      })]
    })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
      className: "grid grid-cols-1 lg:grid-cols-4 gap-6",
      children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
        className: "lg:col-span-3",
        children: [/*#__PURE__*/(0, _jsxruntime.jsx)(_PostCard.PostCard, {
          post: post,
          onVote: handlePostVote,
          onReply: () => {
            /* istanbul ignore next */
            cov_100mwspisk().f[15]++;
            cov_100mwspisk().s[143]++;
            return setShowReplyForm(!showReplyForm);
          },
          onEdit: () => {
            /* istanbul ignore next */
            cov_100mwspisk().f[16]++;
            cov_100mwspisk().s[144]++;
            return router.push(`/posts/${post.id}/edit`);
          },
          onReport: () => {
            /* istanbul ignore next */
            cov_100mwspisk().f[17]++;
            cov_100mwspisk().s[145]++;
            return console.log('Report post');
          },
          showTopic: false
        }),
        /* istanbul ignore next */
        (cov_100mwspisk().b[46][0]++, showReplyForm) &&
        /* istanbul ignore next */
        (cov_100mwspisk().b[46][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
          variant: "bordered",
          className: "mt-6",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
            className: "p-6",
            children: /*#__PURE__*/(0, _jsxruntime.jsx)(_PostForm.PostForm, {
              onSubmit: handleReplySubmit,
              onCancel: () => {
                /* istanbul ignore next */
                cov_100mwspisk().f[18]++;
                cov_100mwspisk().s[146]++;
                return setShowReplyForm(false);
              },
              parentId: post.id,
              topicId: post.topicId,
              mode: "reply"
            })
          })
        })), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
          className: "mt-8",
          children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
            className: "flex items-center justify-between mb-6",
            children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("h2", {
              className: "text-xl font-bold text-light-text",
              children: ["Replies (", post.replyCount, ")"]
            }),
            /* istanbul ignore next */
            (cov_100mwspisk().b[47][0]++, !showReplyForm) &&
            /* istanbul ignore next */
            (cov_100mwspisk().b[47][1]++, /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              variant: "primary",
              size: "sm",
              onClick: () => {
                /* istanbul ignore next */
                cov_100mwspisk().f[19]++;
                cov_100mwspisk().s[147]++;
                return setShowReplyForm(true);
              },
              children: "Reply"
            }))]
          }), isLoadingReplies ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_100mwspisk().b[48][0]++, (0, _jsxruntime.jsx)("div", {
            className: "space-y-4",
            children: [...Array(3)].map((_, i) => {
              /* istanbul ignore next */
              cov_100mwspisk().f[20]++;
              cov_100mwspisk().s[148]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.Card, {
                variant: "bordered",
                className: "animate-pulse",
                children: /*#__PURE__*/(0, _jsxruntime.jsx)(_Card.CardContent, {
                  className: "p-6",
                  children: /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                    className: "flex space-x-4",
                    children: [/*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex flex-col items-center space-y-2",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-6 w-6 bg-muted/20 rounded"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-4 w-8 bg-muted/20 rounded"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-6 w-6 bg-muted/20 rounded"
                      })]
                    }), /*#__PURE__*/(0, _jsxruntime.jsxs)("div", {
                      className: "flex-1",
                      children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-4 bg-muted/20 rounded w-1/4 mb-2"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-4 bg-muted/20 rounded w-full mb-2"
                      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
                        className: "h-4 bg-muted/20 rounded w-2/3"
                      })]
                    })]
                  })
                })
              }, i);
            })
          })) :
          /* istanbul ignore next */
          (cov_100mwspisk().b[48][1]++, replies.length > 0 ?
          /* istanbul ignore next */
          (/*#__PURE__*/cov_100mwspisk().b[49][0]++, (0, _jsxruntime.jsx)("div", {
            className: "space-y-4",
            children: replies.map(reply => {
              /* istanbul ignore next */
              cov_100mwspisk().f[21]++;
              cov_100mwspisk().s[149]++;
              return /*#__PURE__*/(0, _jsxruntime.jsx)(_PostCard.PostCard, {
                post: reply,
                onVote: handlePostVote,
                onReply: () => {
                  /* istanbul ignore next */
                  cov_100mwspisk().f[22]++;
                  cov_100mwspisk().s[150]++;
                  return console.log('Reply to reply');
                },
                onEdit: () => {
                  /* istanbul ignore next */
                  cov_100mwspisk().f[23]++;
                  cov_100mwspisk().s[151]++;
                  return router.push(`/posts/${reply.id}/edit`);
                },
                onReport: () => {
                  /* istanbul ignore next */
                  cov_100mwspisk().f[24]++;
                  cov_100mwspisk().s[152]++;
                  return console.log('Report reply');
                },
                showTopic: false,
                compact: true
              }, reply.id);
            })
          })) :
          /* istanbul ignore next */
          (/*#__PURE__*/cov_100mwspisk().b[49][1]++, (0, _jsxruntime.jsxs)("div", {
            className: "text-center py-8",
            children: [/*#__PURE__*/(0, _jsxruntime.jsx)("div", {
              className: "text-4xl mb-4",
              children: "\uD83D\uDCAC"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("h3", {
              className: "text-lg font-bold text-light-text mb-2",
              children: "No Replies Yet"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)("p", {
              className: "text-muted-light mb-4",
              children: "Be the first to reply to this post"
            }), /*#__PURE__*/(0, _jsxruntime.jsx)(_Button.Button, {
              variant: "primary",
              onClick: () => {
                /* istanbul ignore next */
                cov_100mwspisk().f[25]++;
                cov_100mwspisk().s[153]++;
                return setShowReplyForm(true);
              },
              children: "Write Reply"
            })]
          })))]
        })]
      }), /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
        className: "lg:col-span-1",
        children: /*#__PURE__*/(0, _jsxruntime.jsx)("div", {
          className: "sticky top-6 space-y-6",
          children: /*#__PURE__*/(0, _jsxruntime.jsx)(_PostActions.PostActions, {
            post: post,
            onPostDeleted: handlePostDeleted,
            onPostUpdated: setPost
          })
        })
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,