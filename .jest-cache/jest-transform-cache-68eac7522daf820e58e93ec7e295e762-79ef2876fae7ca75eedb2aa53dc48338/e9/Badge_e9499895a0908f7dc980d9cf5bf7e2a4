5f3e9d71661d8de7a5717a826b46f6da
"use strict";

/* istanbul ignore next */
function cov_1pvwpex6s1() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/Badge.tsx";
  var hash = "d98db710f91cd85e7149c266372f7a7ddba81ea1";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/Badge.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 4,
          column: 3
        }
      },
      "1": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 10,
          column: 3
        }
      },
      "2": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 21
        }
      },
      "3": {
        start: {
          line: 11,
          column: 20
        },
        end: {
          line: 11,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 29
        },
        end: {
          line: 12,
          column: 71
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "6": {
        start: {
          line: 19,
          column: 24
        },
        end: {
          line: 19,
          column: 93
        }
      },
      "7": {
        start: {
          line: 20,
          column: 27
        },
        end: {
          line: 26,
          column: 5
        }
      },
      "8": {
        start: {
          line: 27,
          column: 20
        },
        end: {
          line: 27,
          column: 76
        }
      },
      "9": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 7,
            column: 9
          },
          end: {
            line: 7,
            column: 10
          }
        },
        loc: {
          start: {
            line: 7,
            column: 20
          },
          end: {
            line: 9,
            column: 5
          }
        },
        line: 7
      },
      "1": {
        name: "_interop_require_default",
        decl: {
          start: {
            line: 13,
            column: 9
          },
          end: {
            line: 13,
            column: 33
          }
        },
        loc: {
          start: {
            line: 13,
            column: 39
          },
          end: {
            line: 17,
            column: 1
          }
        },
        line: 13
      },
      "2": {
        name: "Badge",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 14
          }
        },
        loc: {
          start: {
            line: 18,
            column: 66
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 18
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 16,
            column: 5
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 14,
            column: 35
          },
          end: {
            line: 14,
            column: 38
          }
        }, {
          start: {
            line: 14,
            column: 41
          },
          end: {
            line: 16,
            column: 5
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 14,
            column: 11
          },
          end: {
            line: 14,
            column: 14
          }
        }, {
          start: {
            line: 14,
            column: 18
          },
          end: {
            line: 14,
            column: 32
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 27
          },
          end: {
            line: 18,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 39
          },
          end: {
            line: 18,
            column: 41
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 43
          },
          end: {
            line: 18,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 18,
            column: 53
          },
          end: {
            line: 18,
            column: 62
          }
        }],
        line: 18
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0],
      "3": [0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/components/ui/Badge.tsx"],
      sourcesContent: ["import React from 'react';\n\ninterface BadgeProps {\n  children: React.ReactNode;\n  className?: string;\n  variant?: 'default' | 'secondary' | 'success' | 'warning' | 'danger';\n}\n\nexport function Badge({ children, className = '', variant = 'default' }: BadgeProps) {\n  const baseClasses = 'inline-flex items-center px-2 py-1 text-xs font-medium rounded-full';\n  \n  const variantClasses = {\n    default: 'bg-muted text-light-text',\n    secondary: 'bg-muted/50 text-muted-light',\n    success: 'bg-approved-green/20 text-approved-green',\n    warning: 'bg-pending-yellow/20 text-pending-yellow',\n    danger: 'bg-rejected-red/20 text-rejected-red',\n  };\n\n  const classes = `${baseClasses} ${variantClasses[variant]} ${className}`;\n\n  return (\n    <span className={classes}>\n      {children}\n    </span>\n  );\n}\n"],
      names: ["Badge", "children", "className", "variant", "baseClasses", "variantClasses", "default", "secondary", "success", "warning", "danger", "classes", "span"],
      mappings: ";;;;+BAQgBA;;;eAAAA;;;;8DARE;;;;;;AAQX,SAASA,MAAM,EAAEC,QAAQ,EAAEC,YAAY,EAAE,EAAEC,UAAU,SAAS,EAAc;IACjF,MAAMC,cAAc;IAEpB,MAAMC,iBAAiB;QACrBC,SAAS;QACTC,WAAW;QACXC,SAAS;QACTC,SAAS;QACTC,QAAQ;IACV;IAEA,MAAMC,UAAU,GAAGP,YAAY,CAAC,EAAEC,cAAc,CAACF,QAAQ,CAAC,CAAC,EAAED,WAAW;IAExE,qBACE,qBAACU;QAAKV,WAAWS;kBACdV;;AAGP"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d98db710f91cd85e7149c266372f7a7ddba81ea1"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1pvwpex6s1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1pvwpex6s1();
cov_1pvwpex6s1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_1pvwpex6s1().s[1]++;
Object.defineProperty(exports, "Badge", {
  enumerable: true,
  get: function () {
    /* istanbul ignore next */
    cov_1pvwpex6s1().f[0]++;
    cov_1pvwpex6s1().s[2]++;
    return Badge;
  }
});
const _jsxruntime =
/* istanbul ignore next */
(cov_1pvwpex6s1().s[3]++, require("react/jsx-runtime"));
const _react =
/* istanbul ignore next */
(/*#__PURE__*/cov_1pvwpex6s1().s[4]++, _interop_require_default(require("react")));
function _interop_require_default(obj) {
  /* istanbul ignore next */
  cov_1pvwpex6s1().f[1]++;
  cov_1pvwpex6s1().s[5]++;
  return /* istanbul ignore next */(cov_1pvwpex6s1().b[1][0]++, obj) &&
  /* istanbul ignore next */
  (cov_1pvwpex6s1().b[1][1]++, obj.__esModule) ?
  /* istanbul ignore next */
  (cov_1pvwpex6s1().b[0][0]++, obj) :
  /* istanbul ignore next */
  (cov_1pvwpex6s1().b[0][1]++, {
    default: obj
  });
}
function Badge({
  children,
  className =
  /* istanbul ignore next */
  (cov_1pvwpex6s1().b[2][0]++, ''),
  variant =
  /* istanbul ignore next */
  (cov_1pvwpex6s1().b[3][0]++, 'default')
}) {
  /* istanbul ignore next */
  cov_1pvwpex6s1().f[2]++;
  const baseClasses =
  /* istanbul ignore next */
  (cov_1pvwpex6s1().s[6]++, 'inline-flex items-center px-2 py-1 text-xs font-medium rounded-full');
  const variantClasses =
  /* istanbul ignore next */
  (cov_1pvwpex6s1().s[7]++, {
    default: 'bg-muted text-light-text',
    secondary: 'bg-muted/50 text-muted-light',
    success: 'bg-approved-green/20 text-approved-green',
    warning: 'bg-pending-yellow/20 text-pending-yellow',
    danger: 'bg-rejected-red/20 text-rejected-red'
  });
  const classes =
  /* istanbul ignore next */
  (cov_1pvwpex6s1().s[8]++, `${baseClasses} ${variantClasses[variant]} ${className}`);
  /* istanbul ignore next */
  cov_1pvwpex6s1().s[9]++;
  return /*#__PURE__*/(0, _jsxruntime.jsx)("span", {
    className: classes,
    children: children
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCYWRnZSIsImNoaWxkcmVuIiwiY2xhc3NOYW1lIiwiY292XzFwdndwZXg2czEiLCJiIiwidmFyaWFudCIsImYiLCJiYXNlQ2xhc3NlcyIsInMiLCJ2YXJpYW50Q2xhc3NlcyIsImRlZmF1bHQiLCJzZWNvbmRhcnkiLCJzdWNjZXNzIiwid2FybmluZyIsImRhbmdlciIsImNsYXNzZXMiLCJfanN4cnVudGltZSIsImpzeCJdLCJzb3VyY2VzIjpbIi9Vc2Vycy9qb3Noc3plcC9jb2RlL3RoZXJvYm90b3ZlcmxvcmQtbW9uby90aGVyb2JvdG92ZXJsb3JkLXdlYi9zcmMvY29tcG9uZW50cy91aS9CYWRnZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW50ZXJmYWNlIEJhZGdlUHJvcHMge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHZhcmlhbnQ/OiAnZGVmYXVsdCcgfCAnc2Vjb25kYXJ5JyB8ICdzdWNjZXNzJyB8ICd3YXJuaW5nJyB8ICdkYW5nZXInO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQmFkZ2UoeyBjaGlsZHJlbiwgY2xhc3NOYW1lID0gJycsIHZhcmlhbnQgPSAnZGVmYXVsdCcgfTogQmFkZ2VQcm9wcykge1xuICBjb25zdCBiYXNlQ2xhc3NlcyA9ICdpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIgcHgtMiBweS0xIHRleHQteHMgZm9udC1tZWRpdW0gcm91bmRlZC1mdWxsJztcbiAgXG4gIGNvbnN0IHZhcmlhbnRDbGFzc2VzID0ge1xuICAgIGRlZmF1bHQ6ICdiZy1tdXRlZCB0ZXh0LWxpZ2h0LXRleHQnLFxuICAgIHNlY29uZGFyeTogJ2JnLW11dGVkLzUwIHRleHQtbXV0ZWQtbGlnaHQnLFxuICAgIHN1Y2Nlc3M6ICdiZy1hcHByb3ZlZC1ncmVlbi8yMCB0ZXh0LWFwcHJvdmVkLWdyZWVuJyxcbiAgICB3YXJuaW5nOiAnYmctcGVuZGluZy15ZWxsb3cvMjAgdGV4dC1wZW5kaW5nLXllbGxvdycsXG4gICAgZGFuZ2VyOiAnYmctcmVqZWN0ZWQtcmVkLzIwIHRleHQtcmVqZWN0ZWQtcmVkJyxcbiAgfTtcblxuICBjb25zdCBjbGFzc2VzID0gYCR7YmFzZUNsYXNzZXN9ICR7dmFyaWFudENsYXNzZXNbdmFyaWFudF19ICR7Y2xhc3NOYW1lfWA7XG5cbiAgcmV0dXJuIChcbiAgICA8c3BhbiBjbGFzc05hbWU9e2NsYXNzZXN9PlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvc3Bhbj5cbiAgKTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrQkFRZ0I7Ozs7OztXQUFBQSxLQUFBOzs7Ozs7Ozt3RUFSRTs7Ozs7Ozs7Ozs7Ozs7O0FBUVgsU0FBU0EsTUFBTTtFQUFFQyxRQUFRO0VBQUVDLFNBQUE7RUFBQTtFQUFBLENBQUFDLGNBQUEsR0FBQUMsQ0FBQSxVQUFZLEVBQUU7RUFBRUMsT0FBQTtFQUFBO0VBQUEsQ0FBQUYsY0FBQSxHQUFBQyxDQUFBLFVBQVUsU0FBUztBQUFBLENBQWM7RUFBQTtFQUFBRCxjQUFBLEdBQUFHLENBQUE7RUFDakYsTUFBTUMsV0FBQTtFQUFBO0VBQUEsQ0FBQUosY0FBQSxHQUFBSyxDQUFBLE9BQWM7RUFFcEIsTUFBTUMsY0FBQTtFQUFBO0VBQUEsQ0FBQU4sY0FBQSxHQUFBSyxDQUFBLE9BQWlCO0lBQ3JCRSxPQUFBLEVBQVM7SUFDVEMsU0FBQSxFQUFXO0lBQ1hDLE9BQUEsRUFBUztJQUNUQyxPQUFBLEVBQVM7SUFDVEMsTUFBQSxFQUFRO0VBQ1Y7RUFFQSxNQUFNQyxPQUFBO0VBQUE7RUFBQSxDQUFBWixjQUFBLEdBQUFLLENBQUEsT0FBVSxHQUFHRCxXQUFBLElBQWVFLGNBQWMsQ0FBQ0osT0FBQSxDQUFRLElBQUlILFNBQUEsRUFBVztFQUFBO0VBQUFDLGNBQUEsR0FBQUssQ0FBQTtFQUV4RSxvQkFDRSxJQUFBUSxXQUFBLENBQUFDLEdBQUEsRUFBQztJQUFLZixTQUFBLEVBQVdhLE9BQUE7Y0FDZGQ7O0FBR1AiLCJpZ25vcmVMaXN0IjpbXX0=