5daa7d02ae17a45c55250f600a7c6cfa
'use client';
"use strict";

/* istanbul ignore next */
function cov_25304njhl1() {
  var path = "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/utils/seo.ts";
  var hash = "0e6cad9beb557d48b49d3bef41cb1f44a1d6612d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/utils/seo.ts",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 5,
          column: 3
        }
      },
      "1": {
        start: {
          line: 7,
          column: 4
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "2": {
        start: {
          line: 7,
          column: 24
        },
        end: {
          line: 10,
          column: 7
        }
      },
      "3": {
        start: {
          line: 12,
          column: 0
        },
        end: {
          line: 43,
          column: 3
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 24
        }
      },
      "5": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 17,
          column: 31
        }
      },
      "6": {
        start: {
          line: 20,
          column: 8
        },
        end: {
          line: 20,
          column: 35
        }
      },
      "7": {
        start: {
          line: 23,
          column: 8
        },
        end: {
          line: 23,
          column: 36
        }
      },
      "8": {
        start: {
          line: 26,
          column: 8
        },
        end: {
          line: 26,
          column: 38
        }
      },
      "9": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 29,
          column: 31
        }
      },
      "10": {
        start: {
          line: 32,
          column: 8
        },
        end: {
          line: 32,
          column: 28
        }
      },
      "11": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 31
        }
      },
      "12": {
        start: {
          line: 38,
          column: 8
        },
        end: {
          line: 38,
          column: 35
        }
      },
      "13": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 32
        }
      },
      "14": {
        start: {
          line: 44,
          column: 21
        },
        end: {
          line: 49,
          column: 1
        }
      },
      "15": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 48,
          column: 12
        }
      },
      "16": {
        start: {
          line: 50,
          column: 28
        },
        end: {
          line: 60,
          column: 1
        }
      },
      "17": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 52,
          column: 50
        }
      },
      "18": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 55,
          column: 5
        }
      },
      "19": {
        start: {
          line: 54,
          column: 8
        },
        end: {
          line: 54,
          column: 25
        }
      },
      "20": {
        start: {
          line: 57,
          column: 22
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "21": {
        start: {
          line: 58,
          column: 22
        },
        end: {
          line: 58,
          column: 48
        }
      },
      "22": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 89
        }
      },
      "23": {
        start: {
          line: 61,
          column: 24
        },
        end: {
          line: 120,
          column: 1
        }
      },
      "24": {
        start: {
          line: 63,
          column: 25
        },
        end: {
          line: 63,
          column: 70
        }
      },
      "25": {
        start: {
          line: 65,
          column: 22
        },
        end: {
          line: 111,
          column: 6
        }
      },
      "26": {
        start: {
          line: 113,
          column: 18
        },
        end: {
          line: 113,
          column: 99
        }
      },
      "27": {
        start: {
          line: 113,
          column: 59
        },
        end: {
          line: 113,
          column: 98
        }
      },
      "28": {
        start: {
          line: 114,
          column: 22
        },
        end: {
          line: 117,
          column: 10
        }
      },
      "29": {
        start: {
          line: 115,
          column: 8
        },
        end: {
          line: 115,
          column: 41
        }
      },
      "30": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 19
        }
      },
      "31": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 119,
          column: 107
        }
      },
      "32": {
        start: {
          line: 119,
          column: 58
        },
        end: {
          line: 119,
          column: 63
        }
      },
      "33": {
        start: {
          line: 119,
          column: 101
        },
        end: {
          line: 119,
          column: 105
        }
      },
      "34": {
        start: {
          line: 121,
          column: 29
        },
        end: {
          line: 125,
          column: 1
        }
      },
      "35": {
        start: {
          line: 122,
          column: 17
        },
        end: {
          line: 122,
          column: 91
        }
      },
      "36": {
        start: {
          line: 123,
          column: 22
        },
        end: {
          line: 123,
          column: 62
        }
      },
      "37": {
        start: {
          line: 124,
          column: 4
        },
        end: {
          line: 124,
          column: 33
        }
      },
      "38": {
        start: {
          line: 126,
          column: 31
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "39": {
        start: {
          line: 127,
          column: 20
        },
        end: {
          line: 127,
          column: 83
        }
      },
      "40": {
        start: {
          line: 130,
          column: 19
        },
        end: {
          line: 135,
          column: 5
        }
      },
      "41": {
        start: {
          line: 136,
          column: 4
        },
        end: {
          line: 136,
          column: 39
        }
      },
      "42": {
        start: {
          line: 138,
          column: 25
        },
        end: {
          line: 166,
          column: 1
        }
      },
      "43": {
        start: {
          line: 139,
          column: 21
        },
        end: {
          line: 139,
          column: 23
        }
      },
      "44": {
        start: {
          line: 141,
          column: 4
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "45": {
        start: {
          line: 142,
          column: 8
        },
        end: {
          line: 142,
          column: 42
        }
      },
      "46": {
        start: {
          line: 143,
          column: 11
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "47": {
        start: {
          line: 144,
          column: 8
        },
        end: {
          line: 144,
          column: 76
        }
      },
      "48": {
        start: {
          line: 145,
          column: 11
        },
        end: {
          line: 147,
          column: 5
        }
      },
      "49": {
        start: {
          line: 146,
          column: 8
        },
        end: {
          line: 146,
          column: 75
        }
      },
      "50": {
        start: {
          line: 149,
          column: 4
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "51": {
        start: {
          line: 150,
          column: 8
        },
        end: {
          line: 150,
          column: 48
        }
      },
      "52": {
        start: {
          line: 151,
          column: 11
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "53": {
        start: {
          line: 152,
          column: 8
        },
        end: {
          line: 152,
          column: 84
        }
      },
      "54": {
        start: {
          line: 153,
          column: 11
        },
        end: {
          line: 155,
          column: 5
        }
      },
      "55": {
        start: {
          line: 154,
          column: 8
        },
        end: {
          line: 154,
          column: 83
        }
      },
      "56": {
        start: {
          line: 157,
          column: 4
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "57": {
        start: {
          line: 158,
          column: 8
        },
        end: {
          line: 158,
          column: 46
        }
      },
      "58": {
        start: {
          line: 159,
          column: 11
        },
        end: {
          line: 161,
          column: 5
        }
      },
      "59": {
        start: {
          line: 160,
          column: 8
        },
        end: {
          line: 160,
          column: 72
        }
      },
      "60": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 165,
          column: 6
        }
      },
      "61": {
        start: {
          line: 167,
          column: 28
        },
        end: {
          line: 186,
          column: 1
        }
      },
      "62": {
        start: {
          line: 168,
          column: 18
        },
        end: {
          line: 168,
          column: 53
        }
      },
      "63": {
        start: {
          line: 169,
          column: 24
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "64": {
        start: {
          line: 175,
          column: 22
        },
        end: {
          line: 175,
          column: 24
        }
      },
      "65": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 184,
          column: 7
        }
      },
      "66": {
        start: {
          line: 177,
          column: 8
        },
        end: {
          line: 177,
          column: 34
        }
      },
      "67": {
        start: {
          line: 179,
          column: 21
        },
        end: {
          line: 179,
          column: 104
        }
      },
      "68": {
        start: {
          line: 179,
          column: 49
        },
        end: {
          line: 179,
          column: 93
        }
      },
      "69": {
        start: {
          line: 180,
          column: 8
        },
        end: {
          line: 183,
          column: 11
        }
      },
      "70": {
        start: {
          line: 185,
          column: 4
        },
        end: {
          line: 185,
          column: 23
        }
      },
      "71": {
        start: {
          line: 187,
          column: 24
        },
        end: {
          line: 213,
          column: 1
        }
      },
      "72": {
        start: {
          line: 188,
          column: 20
        },
        end: {
          line: 188,
          column: 83
        }
      },
      "73": {
        start: {
          line: 189,
          column: 16
        },
        end: {
          line: 189,
          column: 40
        }
      },
      "74": {
        start: {
          line: 190,
          column: 21
        },
        end: {
          line: 200,
          column: 13
        }
      },
      "75": {
        start: {
          line: 190,
          column: 39
        },
        end: {
          line: 200,
          column: 3
        }
      },
      "76": {
        start: {
          line: 201,
          column: 4
        },
        end: {
          line: 212,
          column: 8
        }
      },
      "77": {
        start: {
          line: 214,
          column: 24
        },
        end: {
          line: 220,
          column: 1
        }
      },
      "78": {
        start: {
          line: 216,
          column: 4
        },
        end: {
          line: 219,
          column: 5
        }
      },
      "79": {
        start: {
          line: 217,
          column: 8
        },
        end: {
          line: 217,
          column: 54
        }
      },
      "80": {
        start: {
          line: 221,
          column: 17
        },
        end: {
          line: 231,
          column: 1
        }
      }
    },
    fnMap: {
      "0": {
        name: "_export",
        decl: {
          start: {
            line: 6,
            column: 9
          },
          end: {
            line: 6,
            column: 16
          }
        },
        loc: {
          start: {
            line: 6,
            column: 30
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 6
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 5
          }
        },
        loc: {
          start: {
            line: 13,
            column: 19
          },
          end: {
            line: 15,
            column: 5
          }
        },
        line: 13
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 16,
            column: 5
          }
        },
        loc: {
          start: {
            line: 16,
            column: 27
          },
          end: {
            line: 18,
            column: 5
          }
        },
        line: 16
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 19,
            column: 5
          }
        },
        loc: {
          start: {
            line: 19,
            column: 31
          },
          end: {
            line: 21,
            column: 5
          }
        },
        line: 19
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 22,
            column: 5
          }
        },
        loc: {
          start: {
            line: 22,
            column: 32
          },
          end: {
            line: 24,
            column: 5
          }
        },
        line: 22
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        loc: {
          start: {
            line: 25,
            column: 34
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 25
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 5
          }
        },
        loc: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 30,
            column: 5
          }
        },
        line: 28
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        loc: {
          start: {
            line: 31,
            column: 24
          },
          end: {
            line: 33,
            column: 5
          }
        },
        line: 31
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 5
          }
        },
        loc: {
          start: {
            line: 34,
            column: 27
          },
          end: {
            line: 36,
            column: 5
          }
        },
        line: 34
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 5
          }
        },
        loc: {
          start: {
            line: 37,
            column: 31
          },
          end: {
            line: 39,
            column: 5
          }
        },
        line: 37
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 5
          }
        },
        loc: {
          start: {
            line: 40,
            column: 28
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 40
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 44,
            column: 21
          },
          end: {
            line: 44,
            column: 22
          }
        },
        loc: {
          start: {
            line: 44,
            column: 30
          },
          end: {
            line: 49,
            column: 1
          }
        },
        line: 44
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 50,
            column: 28
          },
          end: {
            line: 50,
            column: 29
          }
        },
        loc: {
          start: {
            line: 50,
            column: 53
          },
          end: {
            line: 60,
            column: 1
          }
        },
        line: 50
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 61,
            column: 24
          },
          end: {
            line: 61,
            column: 25
          }
        },
        loc: {
          start: {
            line: 61,
            column: 53
          },
          end: {
            line: 120,
            column: 1
          }
        },
        line: 61
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 113,
            column: 51
          },
          end: {
            line: 113,
            column: 52
          }
        },
        loc: {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 98
          }
        },
        line: 113
      },
      "15": {
        name: "(anonymous_15)",
        decl: {
          start: {
            line: 114,
            column: 35
          },
          end: {
            line: 114,
            column: 36
          }
        },
        loc: {
          start: {
            line: 114,
            column: 48
          },
          end: {
            line: 117,
            column: 5
          }
        },
        line: 114
      },
      "16": {
        name: "(anonymous_16)",
        decl: {
          start: {
            line: 119,
            column: 42
          },
          end: {
            line: 119,
            column: 43
          }
        },
        loc: {
          start: {
            line: 119,
            column: 58
          },
          end: {
            line: 119,
            column: 63
          }
        },
        line: 119
      },
      "17": {
        name: "(anonymous_17)",
        decl: {
          start: {
            line: 119,
            column: 91
          },
          end: {
            line: 119,
            column: 92
          }
        },
        loc: {
          start: {
            line: 119,
            column: 101
          },
          end: {
            line: 119,
            column: 105
          }
        },
        line: 119
      },
      "18": {
        name: "(anonymous_18)",
        decl: {
          start: {
            line: 121,
            column: 29
          },
          end: {
            line: 121,
            column: 30
          }
        },
        loc: {
          start: {
            line: 121,
            column: 46
          },
          end: {
            line: 125,
            column: 1
          }
        },
        line: 121
      },
      "19": {
        name: "(anonymous_19)",
        decl: {
          start: {
            line: 126,
            column: 31
          },
          end: {
            line: 126,
            column: 32
          }
        },
        loc: {
          start: {
            line: 126,
            column: 71
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 126
      },
      "20": {
        name: "(anonymous_20)",
        decl: {
          start: {
            line: 138,
            column: 25
          },
          end: {
            line: 138,
            column: 26
          }
        },
        loc: {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 166,
            column: 1
          }
        },
        line: 138
      },
      "21": {
        name: "(anonymous_21)",
        decl: {
          start: {
            line: 167,
            column: 28
          },
          end: {
            line: 167,
            column: 29
          }
        },
        loc: {
          start: {
            line: 167,
            column: 40
          },
          end: {
            line: 186,
            column: 1
          }
        },
        line: 167
      },
      "22": {
        name: "(anonymous_22)",
        decl: {
          start: {
            line: 176,
            column: 18
          },
          end: {
            line: 176,
            column: 19
          }
        },
        loc: {
          start: {
            line: 176,
            column: 33
          },
          end: {
            line: 184,
            column: 5
          }
        },
        line: 176
      },
      "23": {
        name: "(anonymous_23)",
        decl: {
          start: {
            line: 179,
            column: 41
          },
          end: {
            line: 179,
            column: 42
          }
        },
        loc: {
          start: {
            line: 179,
            column: 49
          },
          end: {
            line: 179,
            column: 93
          }
        },
        line: 179
      },
      "24": {
        name: "(anonymous_24)",
        decl: {
          start: {
            line: 187,
            column: 24
          },
          end: {
            line: 187,
            column: 25
          }
        },
        loc: {
          start: {
            line: 187,
            column: 39
          },
          end: {
            line: 213,
            column: 1
          }
        },
        line: 187
      },
      "25": {
        name: "(anonymous_25)",
        decl: {
          start: {
            line: 190,
            column: 31
          },
          end: {
            line: 190,
            column: 32
          }
        },
        loc: {
          start: {
            line: 190,
            column: 39
          },
          end: {
            line: 200,
            column: 3
          }
        },
        line: 190
      },
      "26": {
        name: "(anonymous_26)",
        decl: {
          start: {
            line: 214,
            column: 24
          },
          end: {
            line: 214,
            column: 25
          }
        },
        loc: {
          start: {
            line: 214,
            column: 41
          },
          end: {
            line: 220,
            column: 1
          }
        },
        line: 214
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 35
          },
          end: {
            line: 50,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 50,
            column: 47
          },
          end: {
            line: 50,
            column: 50
          }
        }],
        line: 50
      },
      "1": {
        loc: {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 53
      },
      "2": {
        loc: {
          start: {
            line: 59,
            column: 11
          },
          end: {
            line: 59,
            column: 88
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 59,
            column: 27
          },
          end: {
            line: 59,
            column: 68
          }
        }, {
          start: {
            line: 59,
            column: 71
          },
          end: {
            line: 59,
            column: 88
          }
        }],
        line: 59
      },
      "3": {
        loc: {
          start: {
            line: 61,
            column: 34
          },
          end: {
            line: 61,
            column: 50
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 61,
            column: 48
          },
          end: {
            line: 61,
            column: 50
          }
        }],
        line: 61
      },
      "4": {
        loc: {
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 98
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 113,
            column: 59
          },
          end: {
            line: 113,
            column: 74
          }
        }, {
          start: {
            line: 113,
            column: 78
          },
          end: {
            line: 113,
            column: 98
          }
        }],
        line: 113
      },
      "5": {
        loc: {
          start: {
            line: 115,
            column: 21
          },
          end: {
            line: 115,
            column: 35
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 115,
            column: 21
          },
          end: {
            line: 115,
            column: 30
          }
        }, {
          start: {
            line: 115,
            column: 34
          },
          end: {
            line: 115,
            column: 35
          }
        }],
        line: 115
      },
      "6": {
        loc: {
          start: {
            line: 122,
            column: 17
          },
          end: {
            line: 122,
            column: 91
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 122,
            column: 17
          },
          end: {
            line: 122,
            column: 24
          }
        }, {
          start: {
            line: 122,
            column: 28
          },
          end: {
            line: 122,
            column: 60
          }
        }, {
          start: {
            line: 122,
            column: 64
          },
          end: {
            line: 122,
            column: 91
          }
        }],
        line: 122
      },
      "7": {
        loc: {
          start: {
            line: 123,
            column: 22
          },
          end: {
            line: 123,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 123,
            column: 45
          },
          end: {
            line: 123,
            column: 49
          }
        }, {
          start: {
            line: 123,
            column: 52
          },
          end: {
            line: 123,
            column: 62
          }
        }],
        line: 123
      },
      "8": {
        loc: {
          start: {
            line: 126,
            column: 52
          },
          end: {
            line: 126,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 126,
            column: 59
          },
          end: {
            line: 126,
            column: 68
          }
        }],
        line: 126
      },
      "9": {
        loc: {
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 127,
            column: 20
          },
          end: {
            line: 127,
            column: 52
          }
        }, {
          start: {
            line: 127,
            column: 56
          },
          end: {
            line: 127,
            column: 83
          }
        }],
        line: 127
      },
      "10": {
        loc: {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: 143,
            column: 11
          },
          end: {
            line: 147,
            column: 5
          }
        }],
        line: 141
      },
      "11": {
        loc: {
          start: {
            line: 143,
            column: 11
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 143,
            column: 11
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: 145,
            column: 11
          },
          end: {
            line: 147,
            column: 5
          }
        }],
        line: 143
      },
      "12": {
        loc: {
          start: {
            line: 145,
            column: 11
          },
          end: {
            line: 147,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 145,
            column: 11
          },
          end: {
            line: 147,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 145
      },
      "13": {
        loc: {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: 151,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        }],
        line: 149
      },
      "14": {
        loc: {
          start: {
            line: 151,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 151,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: 153,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        }],
        line: 151
      },
      "15": {
        loc: {
          start: {
            line: 153,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 153,
            column: 11
          },
          end: {
            line: 155,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 153
      },
      "16": {
        loc: {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 161,
            column: 5
          }
        }],
        line: 157
      },
      "17": {
        loc: {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 157,
            column: 52
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 157,
            column: 22
          }
        }, {
          start: {
            line: 157,
            column: 26
          },
          end: {
            line: 157,
            column: 52
          }
        }],
        line: 157
      },
      "18": {
        loc: {
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 161,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 159,
            column: 11
          },
          end: {
            line: 161,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 159
      },
      "19": {
        loc: {
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 188,
            column: 83
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 188,
            column: 20
          },
          end: {
            line: 188,
            column: 52
          }
        }, {
          start: {
            line: 188,
            column: 56
          },
          end: {
            line: 188,
            column: 83
          }
        }],
        line: 188
      },
      "20": {
        loc: {
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 216,
            column: 4
          },
          end: {
            line: 219,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 216
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0,
      "76": 0,
      "77": 0,
      "78": 0,
      "79": 0,
      "80": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    b: {
      "0": [0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0, 0],
      "7": [0, 0],
      "8": [0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0],
      "15": [0, 0],
      "16": [0, 0],
      "17": [0, 0],
      "18": [0, 0],
      "19": [0, 0],
      "20": [0, 0]
    },
    inputSourceMap: {
      version: 3,
      sources: ["/Users/joshszep/code/therobotoverlord-mono/therobotoverlord-web/src/utils/seo.ts"],
      sourcesContent: ["'use client';\n\n// SEO utility functions\nexport const generateSlug = (title: string): string => {\n  return title\n    .toLowerCase()\n    .replace(/[^\\w\\s-]/g, '') // Remove special characters\n    .replace(/\\s+/g, '-') // Replace spaces with hyphens\n    .replace(/-+/g, '-') // Replace multiple hyphens with single\n    .trim();\n};\n\nexport const truncateDescription = (text: string, maxLength: number = 160): string => {\n  // Remove HTML tags\n  const cleanText = text.replace(/<[^>]*>/g, '');\n  \n  if (cleanText.length <= maxLength) {\n    return cleanText;\n  }\n  \n  // Find the last space before maxLength to avoid cutting words\n  const truncated = cleanText.substring(0, maxLength);\n  const lastSpace = truncated.lastIndexOf(' ');\n  \n  return lastSpace > 0 \n    ? truncated.substring(0, lastSpace) + '...'\n    : truncated + '...';\n};\n\nexport const extractKeywords = (content: string, maxKeywords: number = 10): string[] => {\n  // Remove HTML tags and convert to lowercase\n  const cleanContent = content.replace(/<[^>]*>/g, '').toLowerCase();\n  \n  // Common stop words to filter out\n  const stopWords = new Set([\n    'the', 'a', 'an', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'of', 'with',\n    'by', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had',\n    'do', 'does', 'did', 'will', 'would', 'should', 'could', 'can', 'may', 'might',\n    'this', 'that', 'these', 'those', 'i', 'you', 'he', 'she', 'it', 'we', 'they'\n  ]);\n  \n  // Extract words and count frequency\n  const words = cleanContent\n    .split(/\\W+/)\n    .filter(word => word.length > 3 && !stopWords.has(word));\n  \n  const wordCount = words.reduce((acc, word) => {\n    acc[word] = (acc[word] || 0) + 1;\n    return acc;\n  }, {} as Record<string, number>);\n  \n  // Sort by frequency and return top keywords\n  return Object.entries(wordCount)\n    .sort(([, a], [, b]) => b - a)\n    .slice(0, maxKeywords)\n    .map(([word]) => word);\n};\n\nexport const generateCanonicalUrl = (path: string, baseUrl?: string): string => {\n  const base = baseUrl || process.env.NEXT_PUBLIC_SITE_URL || 'https://robotoverlord.com';\n  const cleanPath = path.startsWith('/') ? path : `/${path}`;\n  return `${base}${cleanPath}`;\n};\n\nexport const generateOpenGraphImage = (\n  title: string,\n  description?: string,\n  type: 'article' | 'topic' | 'profile' | 'default' = 'default'\n): string => {\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://robotoverlord.com';\n  \n  // In a real implementation, you might generate dynamic OG images\n  // For now, return appropriate static images based on type\n  const images = {\n    article: '/images/og-article.png',\n    topic: '/images/og-topic.png',\n    profile: '/images/og-profile.png',\n    default: '/images/og-default.png'\n  };\n  \n  return `${baseUrl}${images[type]}`;\n};\n\nexport const validateMetaTags = (meta: {\n  title?: string;\n  description?: string;\n  keywords?: string[];\n}): { isValid: boolean; warnings: string[] } => {\n  const warnings: string[] = [];\n  \n  // Title validation\n  if (!meta.title) {\n    warnings.push('Title is missing');\n  } else if (meta.title.length < 30) {\n    warnings.push('Title is too short (recommended: 30-60 characters)');\n  } else if (meta.title.length > 60) {\n    warnings.push('Title is too long (recommended: 30-60 characters)');\n  }\n  \n  // Description validation\n  if (!meta.description) {\n    warnings.push('Description is missing');\n  } else if (meta.description.length < 120) {\n    warnings.push('Description is too short (recommended: 120-160 characters)');\n  } else if (meta.description.length > 160) {\n    warnings.push('Description is too long (recommended: 120-160 characters)');\n  }\n  \n  // Keywords validation\n  if (!meta.keywords || meta.keywords.length === 0) {\n    warnings.push('Keywords are missing');\n  } else if (meta.keywords.length > 10) {\n    warnings.push('Too many keywords (recommended: 5-10 keywords)');\n  }\n  \n  return {\n    isValid: warnings.length === 0,\n    warnings\n  };\n};\n\nexport const generateBreadcrumbs = (pathname: string): Array<{\n  name: string;\n  url: string;\n}> => {\n  const paths = pathname.split('/').filter(Boolean);\n  const breadcrumbs = [{ name: 'Home', url: '/' }];\n  \n  let currentPath = '';\n  \n  paths.forEach((path, index) => {\n    currentPath += `/${path}`;\n    \n    // Convert path segments to readable names\n    const name = path\n      .split('-')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n    \n    breadcrumbs.push({\n      name,\n      url: currentPath\n    });\n  });\n  \n  return breadcrumbs;\n};\n\nexport const generateRSSFeed = async (posts: Array<{\n  title: string;\n  description: string;\n  content: string;\n  author: string;\n  publishedAt: string;\n  slug: string;\n}>): Promise<string> => {\n  const baseUrl = process.env.NEXT_PUBLIC_SITE_URL || 'https://robotoverlord.com';\n  const now = new Date().toUTCString();\n  \n  const rssItems = posts.map(post => `\n    <item>\n      <title><![CDATA[${post.title}]]></title>\n      <description><![CDATA[${post.description}]]></description>\n      <content:encoded><![CDATA[${post.content}]]></content:encoded>\n      <author>${post.author}</author>\n      <pubDate>${new Date(post.publishedAt).toUTCString()}</pubDate>\n      <link>${baseUrl}/posts/${post.slug}</link>\n      <guid isPermaLink=\"true\">${baseUrl}/posts/${post.slug}</guid>\n    </item>\n  `).join('');\n  \n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" xmlns:atom=\"http://www.w3.org/2005/Atom\">\n  <channel>\n    <title>The Robot Overlord</title>\n    <description>AI-powered community platform for technology discussions and insights</description>\n    <link>${baseUrl}</link>\n    <language>en-US</language>\n    <lastBuildDate>${now}</lastBuildDate>\n    <atom:link href=\"${baseUrl}/feed.xml\" rel=\"self\" type=\"application/rss+xml\"/>\n    ${rssItems}\n  </channel>\n</rss>`;\n};\n\n// SEO performance tracking\nexport const trackSEOMetrics = (page: string, metrics: {\n  loadTime: number;\n  interactionTime: number;\n  cumulativeLayoutShift: number;\n  largestContentfulPaint: number;\n}) => {\n  // In production, send to analytics service\n  if (process.env.NODE_ENV === 'production') {\n    console.log('SEO Metrics for', page, metrics);\n    // Example: Send to Google Analytics, Adobe Analytics, etc.\n  }\n};\n\nexport default {\n  generateSlug,\n  truncateDescription,\n  extractKeywords,\n  generateCanonicalUrl,\n  generateOpenGraphImage,\n  validateMetaTags,\n  generateBreadcrumbs,\n  generateRSSFeed,\n  trackSEOMetrics\n};\n"],
      names: ["extractKeywords", "generateBreadcrumbs", "generateCanonicalUrl", "generateOpenGraphImage", "generateRSSFeed", "generateSlug", "trackSEOMetrics", "truncateDescription", "validateMetaTags", "title", "toLowerCase", "replace", "trim", "text", "maxLength", "cleanText", "length", "truncated", "substring", "lastSpace", "lastIndexOf", "content", "maxKeywords", "cleanContent", "stopWords", "Set", "words", "split", "filter", "word", "has", "wordCount", "reduce", "acc", "Object", "entries", "sort", "a", "b", "slice", "map", "path", "baseUrl", "base", "process", "env", "NEXT_PUBLIC_SITE_URL", "cleanPath", "startsWith", "description", "type", "images", "article", "topic", "profile", "default", "meta", "warnings", "push", "keywords", "isValid", "pathname", "paths", "Boolean", "breadcrumbs", "name", "url", "currentPath", "forEach", "index", "charAt", "toUpperCase", "join", "posts", "now", "Date", "toUTCString", "rssItems", "post", "author", "publishedAt", "slug", "page", "metrics", "NODE_ENV", "console", "log"],
      mappings: "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"
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "0e6cad9beb557d48b49d3bef41cb1f44a1d6612d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_25304njhl1 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_25304njhl1();
cov_25304njhl1().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
function _export(target, all) {
  /* istanbul ignore next */
  cov_25304njhl1().f[0]++;
  cov_25304njhl1().s[1]++;
  for (var name in all) {
    /* istanbul ignore next */
    cov_25304njhl1().s[2]++;
    Object.defineProperty(target, name, {
      enumerable: true,
      get: Object.getOwnPropertyDescriptor(all, name).get
    });
  }
}
/* istanbul ignore next */
cov_25304njhl1().s[3]++;
_export(exports, {
  get default() {
    /* istanbul ignore next */
    cov_25304njhl1().f[1]++;
    cov_25304njhl1().s[4]++;
    return _default;
  },
  get extractKeywords() {
    /* istanbul ignore next */
    cov_25304njhl1().f[2]++;
    cov_25304njhl1().s[5]++;
    return extractKeywords;
  },
  get generateBreadcrumbs() {
    /* istanbul ignore next */
    cov_25304njhl1().f[3]++;
    cov_25304njhl1().s[6]++;
    return generateBreadcrumbs;
  },
  get generateCanonicalUrl() {
    /* istanbul ignore next */
    cov_25304njhl1().f[4]++;
    cov_25304njhl1().s[7]++;
    return generateCanonicalUrl;
  },
  get generateOpenGraphImage() {
    /* istanbul ignore next */
    cov_25304njhl1().f[5]++;
    cov_25304njhl1().s[8]++;
    return generateOpenGraphImage;
  },
  get generateRSSFeed() {
    /* istanbul ignore next */
    cov_25304njhl1().f[6]++;
    cov_25304njhl1().s[9]++;
    return generateRSSFeed;
  },
  get generateSlug() {
    /* istanbul ignore next */
    cov_25304njhl1().f[7]++;
    cov_25304njhl1().s[10]++;
    return generateSlug;
  },
  get trackSEOMetrics() {
    /* istanbul ignore next */
    cov_25304njhl1().f[8]++;
    cov_25304njhl1().s[11]++;
    return trackSEOMetrics;
  },
  get truncateDescription() {
    /* istanbul ignore next */
    cov_25304njhl1().f[9]++;
    cov_25304njhl1().s[12]++;
    return truncateDescription;
  },
  get validateMetaTags() {
    /* istanbul ignore next */
    cov_25304njhl1().f[10]++;
    cov_25304njhl1().s[13]++;
    return validateMetaTags;
  }
});
/* istanbul ignore next */
cov_25304njhl1().s[14]++;
const generateSlug = title => {
  /* istanbul ignore next */
  cov_25304njhl1().f[11]++;
  cov_25304njhl1().s[15]++;
  return title.toLowerCase().replace(/[^\w\s-]/g, '') // Remove special characters
  .replace(/\s+/g, '-') // Replace spaces with hyphens
  .replace(/-+/g, '-') // Replace multiple hyphens with single
  .trim();
};
/* istanbul ignore next */
cov_25304njhl1().s[16]++;
const truncateDescription = (text, maxLength =
/* istanbul ignore next */
(cov_25304njhl1().b[0][0]++, 160)) => {
  /* istanbul ignore next */
  cov_25304njhl1().f[12]++;
  // Remove HTML tags
  const cleanText =
  /* istanbul ignore next */
  (cov_25304njhl1().s[17]++, text.replace(/<[^>]*>/g, ''));
  /* istanbul ignore next */
  cov_25304njhl1().s[18]++;
  if (cleanText.length <= maxLength) {
    /* istanbul ignore next */
    cov_25304njhl1().b[1][0]++;
    cov_25304njhl1().s[19]++;
    return cleanText;
  } else
  /* istanbul ignore next */
  {
    cov_25304njhl1().b[1][1]++;
  }
  // Find the last space before maxLength to avoid cutting words
  const truncated =
  /* istanbul ignore next */
  (cov_25304njhl1().s[20]++, cleanText.substring(0, maxLength));
  const lastSpace =
  /* istanbul ignore next */
  (cov_25304njhl1().s[21]++, truncated.lastIndexOf(' '));
  /* istanbul ignore next */
  cov_25304njhl1().s[22]++;
  return lastSpace > 0 ?
  /* istanbul ignore next */
  (cov_25304njhl1().b[2][0]++, truncated.substring(0, lastSpace) + '...') :
  /* istanbul ignore next */
  (cov_25304njhl1().b[2][1]++, truncated + '...');
};
/* istanbul ignore next */
cov_25304njhl1().s[23]++;
const extractKeywords = (content, maxKeywords =
/* istanbul ignore next */
(cov_25304njhl1().b[3][0]++, 10)) => {
  /* istanbul ignore next */
  cov_25304njhl1().f[13]++;
  // Remove HTML tags and convert to lowercase
  const cleanContent =
  /* istanbul ignore next */
  (cov_25304njhl1().s[24]++, content.replace(/<[^>]*>/g, '').toLowerCase());
  // Common stop words to filter out
  const stopWords =
  /* istanbul ignore next */
  (cov_25304njhl1().s[25]++, new Set(['the', 'a', 'an', 'and', 'or', 'but', 'in', 'on', 'at', 'to', 'for', 'of', 'with', 'by', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'do', 'does', 'did', 'will', 'would', 'should', 'could', 'can', 'may', 'might', 'this', 'that', 'these', 'those', 'i', 'you', 'he', 'she', 'it', 'we', 'they']));
  // Extract words and count frequency
  const words =
  /* istanbul ignore next */
  (cov_25304njhl1().s[26]++, cleanContent.split(/\W+/).filter(word => {
    /* istanbul ignore next */
    cov_25304njhl1().f[14]++;
    cov_25304njhl1().s[27]++;
    return /* istanbul ignore next */(cov_25304njhl1().b[4][0]++, word.length > 3) &&
    /* istanbul ignore next */
    (cov_25304njhl1().b[4][1]++, !stopWords.has(word));
  }));
  const wordCount =
  /* istanbul ignore next */
  (cov_25304njhl1().s[28]++, words.reduce((acc, word) => {
    /* istanbul ignore next */
    cov_25304njhl1().f[15]++;
    cov_25304njhl1().s[29]++;
    acc[word] = (
    /* istanbul ignore next */
    (cov_25304njhl1().b[5][0]++, acc[word]) ||
    /* istanbul ignore next */
    (cov_25304njhl1().b[5][1]++, 0)) + 1;
    /* istanbul ignore next */
    cov_25304njhl1().s[30]++;
    return acc;
  }, {}));
  // Sort by frequency and return top keywords
  /* istanbul ignore next */
  cov_25304njhl1().s[31]++;
  return Object.entries(wordCount).sort(([, a], [, b]) => {
    /* istanbul ignore next */
    cov_25304njhl1().f[16]++;
    cov_25304njhl1().s[32]++;
    return b - a;
  }).slice(0, maxKeywords).map(([word]) => {
    /* istanbul ignore next */
    cov_25304njhl1().f[17]++;
    cov_25304njhl1().s[33]++;
    return word;
  });
};
/* istanbul ignore next */
cov_25304njhl1().s[34]++;
const generateCanonicalUrl = (path, baseUrl) => {
  /* istanbul ignore next */
  cov_25304njhl1().f[18]++;
  const base =
  /* istanbul ignore next */
  (cov_25304njhl1().s[35]++,
  /* istanbul ignore next */
  (cov_25304njhl1().b[6][0]++, baseUrl) ||
  /* istanbul ignore next */
  (cov_25304njhl1().b[6][1]++, process.env.NEXT_PUBLIC_SITE_URL) ||
  /* istanbul ignore next */
  (cov_25304njhl1().b[6][2]++, 'https://robotoverlord.com'));
  const cleanPath =
  /* istanbul ignore next */
  (cov_25304njhl1().s[36]++, path.startsWith('/') ?
  /* istanbul ignore next */
  (cov_25304njhl1().b[7][0]++, path) :
  /* istanbul ignore next */
  (cov_25304njhl1().b[7][1]++, `/${path}`));
  /* istanbul ignore next */
  cov_25304njhl1().s[37]++;
  return `${base}${cleanPath}`;
};
/* istanbul ignore next */
cov_25304njhl1().s[38]++;
const generateOpenGraphImage = (title, description, type =
/* istanbul ignore next */
(cov_25304njhl1().b[8][0]++, 'default')) => {
  /* istanbul ignore next */
  cov_25304njhl1().f[19]++;
  const baseUrl =
  /* istanbul ignore next */
  (cov_25304njhl1().s[39]++,
  /* istanbul ignore next */
  (cov_25304njhl1().b[9][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
  /* istanbul ignore next */
  (cov_25304njhl1().b[9][1]++, 'https://robotoverlord.com'));
  // In a real implementation, you might generate dynamic OG images
  // For now, return appropriate static images based on type
  const images =
  /* istanbul ignore next */
  (cov_25304njhl1().s[40]++, {
    article: '/images/og-article.png',
    topic: '/images/og-topic.png',
    profile: '/images/og-profile.png',
    default: '/images/og-default.png'
  });
  /* istanbul ignore next */
  cov_25304njhl1().s[41]++;
  return `${baseUrl}${images[type]}`;
};
/* istanbul ignore next */
cov_25304njhl1().s[42]++;
const validateMetaTags = meta => {
  /* istanbul ignore next */
  cov_25304njhl1().f[20]++;
  const warnings =
  /* istanbul ignore next */
  (cov_25304njhl1().s[43]++, []);
  // Title validation
  /* istanbul ignore next */
  cov_25304njhl1().s[44]++;
  if (!meta.title) {
    /* istanbul ignore next */
    cov_25304njhl1().b[10][0]++;
    cov_25304njhl1().s[45]++;
    warnings.push('Title is missing');
  } else {
    /* istanbul ignore next */
    cov_25304njhl1().b[10][1]++;
    cov_25304njhl1().s[46]++;
    if (meta.title.length < 30) {
      /* istanbul ignore next */
      cov_25304njhl1().b[11][0]++;
      cov_25304njhl1().s[47]++;
      warnings.push('Title is too short (recommended: 30-60 characters)');
    } else {
      /* istanbul ignore next */
      cov_25304njhl1().b[11][1]++;
      cov_25304njhl1().s[48]++;
      if (meta.title.length > 60) {
        /* istanbul ignore next */
        cov_25304njhl1().b[12][0]++;
        cov_25304njhl1().s[49]++;
        warnings.push('Title is too long (recommended: 30-60 characters)');
      } else
      /* istanbul ignore next */
      {
        cov_25304njhl1().b[12][1]++;
      }
    }
  }
  // Description validation
  /* istanbul ignore next */
  cov_25304njhl1().s[50]++;
  if (!meta.description) {
    /* istanbul ignore next */
    cov_25304njhl1().b[13][0]++;
    cov_25304njhl1().s[51]++;
    warnings.push('Description is missing');
  } else {
    /* istanbul ignore next */
    cov_25304njhl1().b[13][1]++;
    cov_25304njhl1().s[52]++;
    if (meta.description.length < 120) {
      /* istanbul ignore next */
      cov_25304njhl1().b[14][0]++;
      cov_25304njhl1().s[53]++;
      warnings.push('Description is too short (recommended: 120-160 characters)');
    } else {
      /* istanbul ignore next */
      cov_25304njhl1().b[14][1]++;
      cov_25304njhl1().s[54]++;
      if (meta.description.length > 160) {
        /* istanbul ignore next */
        cov_25304njhl1().b[15][0]++;
        cov_25304njhl1().s[55]++;
        warnings.push('Description is too long (recommended: 120-160 characters)');
      } else
      /* istanbul ignore next */
      {
        cov_25304njhl1().b[15][1]++;
      }
    }
  }
  // Keywords validation
  /* istanbul ignore next */
  cov_25304njhl1().s[56]++;
  if (
  /* istanbul ignore next */
  (cov_25304njhl1().b[17][0]++, !meta.keywords) ||
  /* istanbul ignore next */
  (cov_25304njhl1().b[17][1]++, meta.keywords.length === 0)) {
    /* istanbul ignore next */
    cov_25304njhl1().b[16][0]++;
    cov_25304njhl1().s[57]++;
    warnings.push('Keywords are missing');
  } else {
    /* istanbul ignore next */
    cov_25304njhl1().b[16][1]++;
    cov_25304njhl1().s[58]++;
    if (meta.keywords.length > 10) {
      /* istanbul ignore next */
      cov_25304njhl1().b[18][0]++;
      cov_25304njhl1().s[59]++;
      warnings.push('Too many keywords (recommended: 5-10 keywords)');
    } else
    /* istanbul ignore next */
    {
      cov_25304njhl1().b[18][1]++;
    }
  }
  /* istanbul ignore next */
  cov_25304njhl1().s[60]++;
  return {
    isValid: warnings.length === 0,
    warnings
  };
};
/* istanbul ignore next */
cov_25304njhl1().s[61]++;
const generateBreadcrumbs = pathname => {
  /* istanbul ignore next */
  cov_25304njhl1().f[21]++;
  const paths =
  /* istanbul ignore next */
  (cov_25304njhl1().s[62]++, pathname.split('/').filter(Boolean));
  const breadcrumbs =
  /* istanbul ignore next */
  (cov_25304njhl1().s[63]++, [{
    name: 'Home',
    url: '/'
  }]);
  let currentPath =
  /* istanbul ignore next */
  (cov_25304njhl1().s[64]++, '');
  /* istanbul ignore next */
  cov_25304njhl1().s[65]++;
  paths.forEach((path, index) => {
    /* istanbul ignore next */
    cov_25304njhl1().f[22]++;
    cov_25304njhl1().s[66]++;
    currentPath += `/${path}`;
    // Convert path segments to readable names
    const name =
    /* istanbul ignore next */
    (cov_25304njhl1().s[67]++, path.split('-').map(word => {
      /* istanbul ignore next */
      cov_25304njhl1().f[23]++;
      cov_25304njhl1().s[68]++;
      return word.charAt(0).toUpperCase() + word.slice(1);
    }).join(' '));
    /* istanbul ignore next */
    cov_25304njhl1().s[69]++;
    breadcrumbs.push({
      name,
      url: currentPath
    });
  });
  /* istanbul ignore next */
  cov_25304njhl1().s[70]++;
  return breadcrumbs;
};
/* istanbul ignore next */
cov_25304njhl1().s[71]++;
const generateRSSFeed = async posts => {
  /* istanbul ignore next */
  cov_25304njhl1().f[24]++;
  const baseUrl =
  /* istanbul ignore next */
  (cov_25304njhl1().s[72]++,
  /* istanbul ignore next */
  (cov_25304njhl1().b[19][0]++, process.env.NEXT_PUBLIC_SITE_URL) ||
  /* istanbul ignore next */
  (cov_25304njhl1().b[19][1]++, 'https://robotoverlord.com'));
  const now =
  /* istanbul ignore next */
  (cov_25304njhl1().s[73]++, new Date().toUTCString());
  const rssItems =
  /* istanbul ignore next */
  (cov_25304njhl1().s[74]++, posts.map(post => {
    /* istanbul ignore next */
    cov_25304njhl1().f[25]++;
    cov_25304njhl1().s[75]++;
    return `
    <item>
      <title><![CDATA[${post.title}]]></title>
      <description><![CDATA[${post.description}]]></description>
      <content:encoded><![CDATA[${post.content}]]></content:encoded>
      <author>${post.author}</author>
      <pubDate>${new Date(post.publishedAt).toUTCString()}</pubDate>
      <link>${baseUrl}/posts/${post.slug}</link>
      <guid isPermaLink="true">${baseUrl}/posts/${post.slug}</guid>
    </item>
  `;
  }).join(''));
  /* istanbul ignore next */
  cov_25304njhl1().s[76]++;
  return `<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Robot Overlord</title>
    <description>AI-powered community platform for technology discussions and insights</description>
    <link>${baseUrl}</link>
    <language>en-US</language>
    <lastBuildDate>${now}</lastBuildDate>
    <atom:link href="${baseUrl}/feed.xml" rel="self" type="application/rss+xml"/>
    ${rssItems}
  </channel>
</rss>`;
};
/* istanbul ignore next */
cov_25304njhl1().s[77]++;
const trackSEOMetrics = (page, metrics) => {
  /* istanbul ignore next */
  cov_25304njhl1().f[26]++;
  cov_25304njhl1().s[78]++;
  // In production, send to analytics service
  if (process.env.NODE_ENV === 'production') {
    /* istanbul ignore next */
    cov_25304njhl1().b[20][0]++;
    cov_25304njhl1().s[79]++;
    console.log('SEO Metrics for', page, metrics);
    // Example: Send to Google Analytics, Adobe Analytics, etc.
  } else
  /* istanbul ignore next */
  {
    cov_25304njhl1().b[20][1]++;
  }
};
const _default =
/* istanbul ignore next */
(cov_25304njhl1().s[80]++, {
  generateSlug,
  truncateDescription,
  extractKeywords,
  generateCanonicalUrl,
  generateOpenGraphImage,
  validateMetaTags,
  generateBreadcrumbs,
  generateRSSFeed,
  trackSEOMetrics
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,